{"version":3,"file":"js/editor.js","mappings":"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;AACvC,SAAOA,IAAI,CAACF,OAAL,CAAc,oBAAd,EAAoC,GAApC,CAAP;AACA;;;;;;;;;;ACTD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACjKA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA,aAAa,6CAA6C;AAC1D;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,uCAAuC;AACvC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,KAAK;;AAEjC;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC7Ia;;AAEb;AACA,YAAY,mBAAO,CAAC,kFAAO;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,SAAS;AAC1D;AACA;AACA,kDAAkD,OAAO;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC7EA;;AAEA;AACA;AACA;;AAEA,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;;AAEf;AACA;AACA;;AAEA,cAAc;AACdnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,oFAAU;;AAEnC,OAAO,YAAY;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACtQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,sCAAI;;AAEpC;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,cAAc,kCAAkC;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;;AAEA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACvQA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA,WAAW,wBAAwxzGA;AACA;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,YAAY;AACZ;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnaAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,gBAAgB;AAC9B,cAAc,gBAAgB;AAC9B;AACA,aAAa,yBAAyB;AACtC;;AAEkC;AACF;;AAEzB;;AAEP,YAAY;;AAEZ,OAAO,+CAAQ;AACf,OAAO,4CAAK;;AAEZ;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA,aAAa,gBAAgB;AAC7B;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACprHA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;CCLA;AACA;AACA,8B","sources":["webpack://syntax/./src/js/components/sidebar.js","webpack://syntax/./src/js/data/adverbs.js","webpack://syntax/./src/js/data/hedges.js","webpack://syntax/./src/js/data/passive.js","webpack://syntax/./src/js/data/simpler.js","webpack://syntax/./src/js/data/weasel.js","webpack://syntax/./src/js/hooks/index.js","webpack://syntax/./src/js/hooks/update.js","webpack://syntax/./src/js/parsers/adverbs.js","webpack://syntax/./src/js/parsers/hedges.js","webpack://syntax/./src/js/parsers/index.js","webpack://syntax/./src/js/parsers/passive.js","webpack://syntax/./src/js/parsers/readability.js","webpack://syntax/./src/js/parsers/simpler.js","webpack://syntax/./src/js/parsers/so.js","webpack://syntax/./src/js/parsers/weasel.js","webpack://syntax/./src/js/reading-score.js","webpack://syntax/./src/js/store/actions.js","webpack://syntax/./src/js/store/index.js","webpack://syntax/./src/js/store/reducer.js","webpack://syntax/./src/js/store/selectors.js","webpack://syntax/./src/js/tokenizer.js","webpack://syntax/./src/js/utils/strip-astrals.js","webpack://syntax/./src/js/utils/strip-html-comments.js","webpack://syntax/./src/js/utils/strip-html-entities.js","webpack://syntax/./src/js/utils/strip-spaces.js","webpack://syntax/./src/js/utils/strip-tags.js","webpack://syntax/./node_modules/ms/index.js","webpack://syntax/./node_modules/reading-time/lib/reading-time.js","webpack://syntax/./node_modules/sentence-tokenizer/lib/tokenizer.js","webpack://syntax/./node_modules/sentence-tokenizer/node_modules/debug/src/browser.js","webpack://syntax/./node_modules/sentence-tokenizer/node_modules/debug/src/common.js","webpack://syntax/external window \"lodash\"","webpack://syntax/external window [\"wp\",\"components\"]","webpack://syntax/external window [\"wp\",\"data\"]","webpack://syntax/external window [\"wp\",\"editPost\"]","webpack://syntax/external window [\"wp\",\"element\"]","webpack://syntax/external window [\"wp\",\"i18n\"]","webpack://syntax/external window [\"wp\",\"plugins\"]","webpack://syntax/external window [\"wp\",\"wordcount\"]","webpack://syntax/./node_modules/afinn-165/index.js","webpack://syntax/./node_modules/automated-readability/index.js","webpack://syntax/./node_modules/hedges/index.js","webpack://syntax/./node_modules/polarity/emoji.js","webpack://syntax/./node_modules/polarity/index.js","webpack://syntax/./node_modules/weasels/index.js","webpack://syntax/webpack/bootstrap","webpack://syntax/webpack/runtime/compat get default export","webpack://syntax/webpack/runtime/define property getters","webpack://syntax/webpack/runtime/hasOwnProperty shorthand","webpack://syntax/webpack/runtime/make namespace object","webpack://syntax/./src/js/editor.js"],"sourcesContent":["import { debounce } from 'lodash';\nimport { __ } from '@wordpress/i18n';\nimport { PluginSidebar } from '@wordpress/edit-post';\nimport { PanelBody, PanelRow } from '@wordpress/components';\nimport { registerPlugin } from '@wordpress/plugins';\nimport { dispatch, useSelect } from '@wordpress/data';\nimport { useEffect, useMemo, useCallback } from '@wordpress/element';\n\nimport { addProblems } from '../hooks';\nimport check from '../parsers';\nimport { readingScore } from '../reading-score';\n\nconst ALLOWED_BLOCKS = [\n\t'core/paragraph',\n\t'core/heading',\n\t'core/list',\n\t'core/quote',\n\t'core/pullquote',\n\t'core/verse',\n\t'core/media-text',\n\t'core/preformatted',\n];\n\nconst TYPES = [\n\t'simpler',\n\t'adverbs',\n\t'hedges',\n\t'weasel',\n\t'passive',\n\t'readability-hard',\n\t'readability-very-hard',\n\t'so',\n];\n\nconst AccessPanel = () => {\n\tconst blocks = useSelect( (select) =>\n\t\tselect('core/block-editor').getBlocks()\n\t);\n\tconst content = useSelect( (select) =>\n\t\tselect('core/editor').getEditedPostAttribute('content')\n\t);\n\n\tconst { score, sentences, words, characters, paragraphs, letters, polarity, readingTime } = useMemo( () => readingScore(content), [ content ] );\n\tconst contentBlocks = useMemo( () => blocks.filter((block) => ALLOWED_BLOCKS.includes(block.name)), [ blocks ] );\n\tconst blocksWithProblems = useMemo( () => {\n\t\tconst blockData = contentBlocks.map((block) => ({\n\t\t\tblockId: block.clientId,\n\t\t\t...(block?.attributes?.content?.length ? {\n\t\t\t\tproblems: check(block.attributes.content),\n\t\t\t} : {}),\n\t\t}));\n\n\t\treturn blockData.filter((block) => block?.problems?.length);\n\t}, [ contentBlocks ] );\n\tconst { adverbs, passive, simpler, weasels, hedges, readability } = useMemo( () => blocksWithProblems.reduce( (acc, block) => {\n\t\tacc.adverbs = acc.adverbs.concat(block.problems.filter(({ type }) => type === 'adverbs'));\n\t\tacc.passive = acc.passive.concat(block.problems.filter(({ type }) => type === 'passive'));\n\t\tacc.simpler = acc.simpler.concat(block.problems.filter(({ type }) => type === 'simpler'));\n\t\tacc.weasels = acc.weasels.concat(block.problems.filter(({ type }) => type === 'weasels'));\n\t\tacc.hedges = acc.hedges.concat(block.problems.filter(({ type }) => type === 'hedges'));\n\t\tacc.readability = acc.readability.concat(block.problems.filter(({ type }) => type.includes('readability')));\n\n\t\treturn acc;\n\t}, { adverbs: [], passive: [], simpler: [], weasels: [], hedges: [], readability: [] } ), [ blocksWithProblems ] );\n\n\tconst updateProblems = useCallback( debounce((problems) => {\n\t\tif (problems.length) {\n\t\t\taddProblems(problems);\n\t\t}\n\t}, 500), [] );\n\n\tuseEffect(() => {\n\t\tTYPES.forEach((type) => {\n\t\t\tdispatch( \"core/annotations\" ).__experimentalRemoveAnnotationsBySource( `writers-blocks--${type}` );\n\t\t});\n\n\t\tif (blocksWithProblems.length) {\n\t\t\tupdateProblems(blocksWithProblems);\n\n\t\t\tblocksWithProblems.forEach(({ blockId, problems }) => {\n\t\t\t\tproblems.forEach(({ type, index, offset }) => {\n\t\t\t\t\tdispatch('core/annotations').__experimentalAddAnnotation({\n\t\t\t\t\t\tsource: `writers-blocks--${type}`,\n\t\t\t\t\t\tblockClientId: blockId,\n\t\t\t\t\t\trichTextIdentifier: 'content',\n\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\tstart: index,\n\t\t\t\t\t\t\tend: offset,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [ blocksWithProblems ]);\n\n\treturn (\n\t\t<>\n\t\t\t<PluginSidebar\n\t\t\t\tname=\"syntax-highlighter\"\n\t\t\t\ticon=\"text\"\n\t\t\t\ttitle={__('Syntax Highlighter', 'syntax')}\n\t\t\t>\n\t\t\t\t<PanelBody title={__('Readability', 'yext')}>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<h2>Grade {score}</h2>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<h2>Polarity {polarity}</h2>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title={__('Stats', 'yext')} initialOpen={false}>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p><strong>Reading time:</strong> {readingTime >= 1 ? `${\n\t\t\t\t\t\t\tMath.round(readingTime)} minute${Math.round(readingTime) > 1 ? 's' : ''\n\t\t\t\t\t\t}` : 'Less than a minute'}</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p><strong>Paragraphs:</strong> {paragraphs}</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p><strong>Sentences:</strong> {sentences}</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p><strong>Words:</strong> {words}</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p><strong>Characters:</strong> {characters}</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p><strong>Letters:</strong> {letters}</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title={__('Suggestions', 'yext')}>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p>{adverbs.length} adverbs</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p>{weasels.length} weasel words</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p>{hedges.length} hedge words</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p>{passive.length} uses of passive voice.</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p>{simpler.length} phrases have simpler alternatives.</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p>{readability.filter(({ level }) => level === 'suggestion').length} of {sentences} are hard to read.</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p>{readability.filter(({ level }) => level === 'warning').length} of {sentences} are very hard to read.</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t</PluginSidebar>\n\t\t</>\n\t);\n};\n\n/**\n * Register Access Panel Plugin\n */\nregisterPlugin('syntax-highlighter', {\n\trender: AccessPanel,\n});\n","export default [\n\t'absolutel',\n\t'accidentall',\n\t'additionall',\n\t'allegedl',\n\t'alternativel',\n\t'angril',\n\t'anxiousl',\n\t'approximatel',\n\t'awkwardl',\n\t'badl',\n\t'barel',\n\t'beautifull',\n\t'blindl',\n\t'boldl',\n\t'bravel',\n\t'brightl',\n\t'briskl',\n\t'bristl',\n\t'bubbl',\n\t'busil',\n\t'calml',\n\t'carefull',\n\t'carelessl',\n\t'cautiousl',\n\t'cheerfull',\n\t'clearl',\n\t'closel',\n\t'coldl',\n\t'completel',\n\t'consequentl',\n\t'correctl',\n\t'courageousl',\n\t'crinkl',\n\t'cruell',\n\t'crumbl',\n\t'cuddl',\n\t'currentl',\n\t'daringl',\n\t'deadl',\n\t'definitel',\n\t'deliberatel',\n\t'doubtfull',\n\t'dumbl',\n\t'eagerl',\n\t'earl',\n\t'easil',\n\t'elegantl',\n\t'enormousl',\n\t'enthusiasticall',\n\t'equall',\n\t'especiall',\n\t'eventuall',\n\t'exactl',\n\t'exceedingl',\n\t'exclusivel',\n\t'extremel',\n\t'fairl',\n\t'faithfull',\n\t'fatall',\n\t'fiercel',\n\t'finall',\n\t'fondl',\n\t'foolishl',\n\t'fortunatel',\n\t'frankl',\n\t'franticall',\n\t'generousl',\n\t'gentl',\n\t'giggl',\n\t'gladl',\n\t'gracefull',\n\t'greedil',\n\t'happil',\n\t'hardl',\n\t'hastil',\n\t'healthil',\n\t'heartil',\n\t'helpfull',\n\t'honestl',\n\t'hourl',\n\t'hungril',\n\t'hurriedl',\n\t'immediatel',\n\t'impatientl',\n\t'inadequatel',\n\t'ingeniousl',\n\t'innocentl',\n\t'inquisitivel',\n\t'interestingl',\n\t'irritabl',\n\t'jiggl',\n\t'joyousl',\n\t'justl',\n\t'kindl',\n\t'largel',\n\t'latel',\n\t'lazil',\n\t'likel',\n\t'literall',\n\t'lonel',\n\t'loosel',\n\t'loudl',\n\t'loudl',\n\t'luckil',\n\t'madl',\n\t'man',\n\t'mentall',\n\t'mildl',\n\t'mortall',\n\t'mostl',\n\t'mysteriousl',\n\t'neatl',\n\t'nervousl',\n\t'noisil',\n\t'normall',\n\t'obedientl',\n\t'occasionall',\n\t'onl',\n\t'openl',\n\t'painfull',\n\t'particularl',\n\t'patientl',\n\t'perfectl',\n\t'politel',\n\t'poorl',\n\t'powerfull',\n\t'presumabl',\n\t'previousl',\n\t'promptl',\n\t'punctuall',\n\t'quarterl',\n\t'quickl',\n\t'quietl',\n\t'rapidl',\n\t'rarel',\n\t'reall',\n\t'recentl',\n\t'recklessl',\n\t'regularl',\n\t'relativel',\n\t'reluctantl',\n\t'remarkabl',\n\t'repeatedl',\n\t'rightfull',\n\t'roughl',\n\t'rudel',\n\t'sadl',\n\t'safel',\n\t'selfishl',\n\t'sensibl',\n\t'seriousl',\n\t'sharpl',\n\t'shortl',\n\t'shyl',\n\t'significantl',\n\t'silentl',\n\t'simpl',\n\t'sleepil',\n\t'slowl',\n\t'smartl',\n\t'smell',\n\t'smoothl',\n\t'softl',\n\t'solemnl',\n\t'sparkl',\n\t'speedil',\n\t'stealthil',\n\t'sternl',\n\t'stupidl',\n\t'substantiall',\n\t'successfull',\n\t'suddenl',\n\t'surprisingl',\n\t'suspiciousl',\n\t'swiftl',\n\t'tenderl',\n\t'tensel',\n\t'thoughtfull',\n\t'tightl',\n\t'timel',\n\t'truthfull',\n\t'unexpectedl',\n\t'unfortunatel',\n\t'usuall',\n\t'ver',\n\t'victoriousl',\n\t'violentl',\n\t'vivaciousl',\n\t'warml',\n\t'waverl',\n\t'weakl',\n\t'wearil',\n\t'wildl',\n\t'wisel',\n\t'worldl',\n\t'wrinkl'\n];\n","import { hedges } from 'hedges';\n\nexport default {\n\texceptions: [],\n\tlist: hedges,\n};\n","export default [\n\t{\n\t\tvalue: \"awoken\",\n\t\treplace: \"awoke\"\n\t}, {\n\t\tvalue: \"beaten\",\n\t\treplace: \"beat\"\n\t}, {\n\t\tvalue: \"begun\",\n\t\treplace: \"began\"\n\t}, {\n\t\tvalue: \"bent\",\n\t\treplace: \"bent\"\n\t}, {\n\t\tvalue: \"bitten\",\n\t\treplace: \"bit\"\n\t}, {\n\t\tvalue: \"bled\",\n\t\treplace: \"bled\"\n\t}, {\n\t\tvalue: \"blown\",\n\t\treplace: \"blew\"\n\t}, {\n\t\tvalue: \"broken\",\n\t\treplace: \"broke\"\n\t}, {\n\t\tvalue: \"brought\",\n\t\treplace: \"brought\"\n\t}, {\n\t\tvalue: \"built\",\n\t\treplace: \"built\"\n\t}, {\n\t\tvalue: \"bought\",\n\t\treplace: \"bought\"\n\t}, {\n\t\tvalue: \"caught\",\n\t\treplace: \"caught\"\n\t}, {\n\t\tvalue: \"chosen\",\n\t\treplace: \"chose\"\n\t}, {\n\t\tvalue: \"cut\",\n\t\treplace: \"cut\"\n\t}, {\n\t\tvalue: \"dealt\",\n\t\treplace: \"dealt\"\n\t}, {\n\t\tvalue: \"done\",\n\t\treplace: \"did\"\n\t}, {\n\t\tvalue: \"drawn\",\n\t\treplace: \"drew\"\n\t}, {\n\t\tvalue: \"driven\",\n\t\treplace: \"drove\"\n\t}, {\n\t\tvalue: \"eaten\",\n\t\treplace: \"ate\"\n\t}, {\n\t\tvalue: \"fed\",\n\t\treplace: \"fed\"\n\t}, {\n\t\tvalue: \"felt\",\n\t\treplace: \"felt\"\n\t}, {\n\t\tvalue: \"fought\",\n\t\treplace: \"fought\"\n\t}, {\n\t\tvalue: \"found\",\n\t\treplace: \"found\"\n\t}, {\n\t\tvalue: \"forbidden\",\n\t\treplace: \"forbade\"\n\t}, {\n\t\tvalue: \"forgotten\",\n\t\treplace: \"forgot\"\n\t}, {\n\t\tvalue: \"forgiven\",\n\t\treplace: \"forgave\"\n\t}, {\n\t\tvalue: \"frozen\",\n\t\treplace: \"froze\"\n\t}, {\n\t\tvalue: \"gotten\",\n\t\treplace: \"got\"\n\t}, {\n\t\tvalue: \"given\",\n\t\treplace: \"gave\"\n\t}, {\n\t\tvalue: \"ground\",\n\t\treplace: \"ground\"\n\t}, {\n\t\tvalue: \"ground\",\n\t\treplace: \"ground, grinded\"\n\t}, {\n\t\tvalue: \"hung\",\n\t\treplace: \"hung\"\n\t}, {\n\t\tvalue: \"heard\",\n\t\treplace: \"heard\"\n\t}, {\n\t\tvalue: \"hidden\",\n\t\treplace: \"hid\"\n\t}, {\n\t\tvalue: \"hit\",\n\t\treplace: \"hit\"\n\t}, {\n\t\tvalue: \"held\",\n\t\treplace: \"held\"\n\t}, {\n\t\tvalue: \"hurt\",\n\t\treplace: \"hurt\"\n\t}, {\n\t\tvalue: \"kept\",\n\t\treplace: \"kept\"\n\t}, {\n\t\tvalue: \"known\",\n\t\treplace: \"knew\"\n\t}, {\n\t\tvalue: \"laid\",\n\t\treplace: \"laid\"\n\t}, {\n\t\tvalue: \"led\",\n\t\treplace: \"led\"\n\t}, {\n\t\tvalue: \"left\",\n\t\treplace: \"left\"\n\t}, {\n\t\tvalue: \"let\",\n\t\treplace: \"let\"\n\t}, {\n\t\tvalue: \"lost\",\n\t\treplace: \"lost\"\n\t}, {\n\t\tvalue: \"made\",\n\t\treplace: \"made\"\n\t}, {\n\t\tvalue: \"meant\",\n\t\treplace: \"meant\"\n\t}, {\n\t\tvalue: \"met\",\n\t\treplace: \"met\"\n\t}, {\n\t\tvalue: \"paid\",\n\t\treplace: \"paid\"\n\t}, {\n\t\tvalue: \"proven\",\n\t\treplace: \"proved\"\n\t}, {\n\t\tvalue: \"put\",\n\t\treplace: \"put\"\n\t}, {\n\t\tvalue: \"read\",\n\t\treplace: \"read\"\n\t}, {\n\t\tvalue: \"ridden\",\n\t\treplace: \"rode\"\n\t}, {\n\t\tvalue: \"rung\",\n\t\treplace: \"rang\"\n\t}, {\n\t\tvalue: \"run\",\n\t\treplace: \"ran\"\n\t}, {\n\t\tvalue: \"said\",\n\t\treplace: \"said\"\n\t}, {\n\t\tvalue: \"seen\",\n\t\treplace: \"saw\"\n\t}, {\n\t\tvalue: \"sold\",\n\t\treplace: \"sold\"\n\t}, {\n\t\tvalue: \"sent\",\n\t\treplace: \"sent\"\n\t}, {\n\t\tvalue: \"shaken\",\n\t\treplace: \"shook\"\n\t}, {\n\t\tvalue: \"shaved\",\n\t\treplace: \"shaved\"\n\t}, {\n\t\tvalue: \"shot\",\n\t\treplace: \"shot\"\n\t}, {\n\t\tvalue: \"shown\",\n\t\treplace: \"showed\"\n\t}, {\n\t\tvalue: \"shut\",\n\t\treplace: \"shut\"\n\t}, {\n\t\tvalue: \"sung\",\n\t\treplace: \"sung\"\n\t}, {\n\t\tvalue: \"sunk\",\n\t\treplace: \"sunk\"\n\t}, {\n\t\tvalue: \"slain\",\n\t\treplace: \"slew\"\n\t}, {\n\t\tvalue: \"slid\",\n\t\treplace: \"slid\"\n\t}, {\n\t\tvalue: \"spoken\",\n\t\treplace: \"spoke\"\n\t}, {\n\t\tvalue: \"spent\",\n\t\treplace: \"spent\"\n\t}, {\n\t\tvalue: \"spun\",\n\t\treplace: \"spun\"\n\t}, {\n\t\tvalue: \"split\",\n\t\treplace: \"split\"\n\t}, {\n\t\tvalue: \"spread\",\n\t\treplace: \"spread\"\n\t}, {\n\t\tvalue: \"stolen\",\n\t\treplace: \"stole\"\n\t}, {\n\t\tvalue: \"struck\",\n\t\treplace: \"struck\"\n\t}, {\n\t\tvalue: \"swept\",\n\t\treplace: \"swept\"\n\t}, {\n\t\tvalue: \"swung\",\n\t\treplace: \"swung\"\n\t}, {\n\t\tvalue: \"taken\",\n\t\treplace: \"took\"\n\t}, {\n\t\tvalue: \"taught\",\n\t\treplace: \"taught\"\n\t}, {\n\t\tvalue: \"torn\",\n\t\treplace: \"tore\"\n\t}, {\n\t\tvalue: \"told\",\n\t\treplace: \"told\"\n\t}, {\n\t\tvalue: \"thought\",\n\t\treplace: \"thought\"\n\t}, {\n\t\tvalue: \"thrown\",\n\t\treplace: \"threw\"\n\t}, {\n\t\tvalue: \"undergone\",\n\t\treplace: \"underwent\"\n\t}, {\n\t\tvalue: \"understood\",\n\t\treplace: \"understood\"\n\t}, {\n\t\tvalue: \"upset\",\n\t\treplace: \"upset\"\n\t}, {\n\t\tvalue: \"woken\",\n\t\treplace: \"woke\"\n\t}, {\n\t\tvalue: \"worn\",\n\t\treplace: \"wore\"\n\t}, {\n\t\tvalue: \"won\",\n\t\treplace: \"won\"\n\t}, {\n\t\tvalue: \"withdrawn\",\n\t\treplace: \"withdrew\"\n\t}, {\n\t\tvalue: \"written\",\n\t\treplace: \"wrote\"\n\t}\n];\n","export default [\n\t{\n\t\tvalue: \"a number of\",\n\t\treplace: \"Many, some\"\n\t}, {\n\t\tvalue: \"abundance\",\n\t\treplace: \"Enough, plenty\"\n\t}, {\n\t\tvalue: \"accede to\",\n\t\treplace: \"Allow, agree to\"\n\t}, {\n\t\tvalue: \"accelerate\",\n\t\treplace: \"Speed up\"\n\t}, {\n\t\tvalue: \"accentuate\",\n\t\treplace: \"Stress\"\n\t}, {\n\t\tvalue: \"accompany\",\n\t\treplace: \"Go with, with\"\n\t}, {\n\t\tvalue: \"accomplish\",\n\t\treplace: \"Do\"\n\t}, {\n\t\tvalue: \"accorded\",\n\t\treplace: \"Given\"\n\t}, {\n\t\tvalue: \"accrue\",\n\t\treplace: \"Add, gain\"\n\t}, {\n\t\tvalue: \"acquiesce\",\n\t\treplace: \"Agree\"\n\t}, {\n\t\tvalue: \"acquire\",\n\t\treplace: \"Get\"\n\t}, {\n\t\tvalue: \"additional\",\n\t\treplace: \"More, extra\"\n\t}, {\n\t\tvalue: \"adjacent to\",\n\t\treplace: \"Next to\"\n\t}, {\n\t\tvalue: \"adjustment\",\n\t\treplace: \"Change\"\n\t}, {\n\t\tvalue: \"admissible\",\n\t\treplace: \"Allowed, accepted\"\n\t}, {\n\t\tvalue: \"advantageous\",\n\t\treplace: \"Helpful\"\n\t}, {\n\t\tvalue: \"adversely impact\",\n\t\treplace: \"Hurt\"\n\t}, {\n\t\tvalue: \"advise\",\n\t\treplace: \"Tell\"\n\t}, {\n\t\tvalue: \"aforementioned\",\n\t\treplace: \"Remove\"\n\t}, {\n\t\tvalue: \"aggregate\",\n\t\treplace: \"Total, add\"\n\t}, {\n\t\tvalue: \"aircraft\",\n\t\treplace: \"Plane\"\n\t}, {\n\t\tvalue: \"all of\",\n\t\treplace: \"All\"\n\t}, {\n\t\tvalue: \"alleviate\",\n\t\treplace: \"Ease, reduce\"\n\t}, {\n\t\tvalue: \"allocate\",\n\t\treplace: \"Divide\"\n\t}, {\n\t\tvalue: \"along the lines of\",\n\t\treplace: \"Like, as in\"\n\t}, {\n\t\tvalue: \"already existing\",\n\t\treplace: \"Existing\"\n\t}, {\n\t\tvalue: \"alternatively\",\n\t\treplace: \"Or\"\n\t}, {\n\t\tvalue: \"ameliorate\",\n\t\treplace: \"Improve, help\"\n\t}, {\n\t\tvalue: \"anticipate\",\n\t\treplace: \"Expect\"\n\t}, {\n\t\tvalue: \"apparent\",\n\t\treplace: \"Clear, plain\"\n\t}, {\n\t\tvalue: \"appreciable\",\n\t\treplace: \"Many\"\n\t}, {\n\t\tvalue: \"as a means of\",\n\t\treplace: \"To\"\n\t}, {\n\t\tvalue: \"as of yet\",\n\t\treplace: \"Yet\"\n\t}, {\n\t\tvalue: \"as to\",\n\t\treplace: \"on, about\"\n\t}, {\n\t\tvalue: \"as yet\",\n\t\treplace: \"Yet\"\n\t}, {\n\t\tvalue: \"ascertain\",\n\t\treplace: \"Find out, learn\"\n\t}, {\n\t\tvalue: \"assistance\",\n\t\treplace: \"Help\"\n\t}, {\n\t\tvalue: \"at this time\",\n\t\treplace: \"Now\"\n\t}, {\n\t\tvalue: \"attain\",\n\t\treplace: \"Meet\"\n\t}, {\n\t\tvalue: \"attributable to\",\n\t\treplace: \"Because\"\n\t}, {\n\t\tvalue: \"authorize\",\n\t\treplace: \"Allow, let\"\n\t}, {\n\t\tvalue: \"because of the fact that\",\n\t\treplace: \"because\"\n\t}, {\n\t\tvalue: \"belated\",\n\t\treplace: \"late\"\n\t}, {\n\t\tvalue: \"benefit from\",\n\t\treplace: \"enjoy\"\n\t}, {\n\t\tvalue: \"bestow\",\n\t\treplace: \"give, award\"\n\t}, {\n\t\tvalue: \"by virtue of\",\n\t\treplace: \"by, under\"\n\t}, {\n\t\tvalue: \"cease\",\n\t\treplace: \"stop\"\n\t}, {\n\t\tvalue: \"close proximity\",\n\t\treplace: \"near\"\n\t}, {\n\t\tvalue: \"commence\",\n\t\treplace: \"Begin or start\"\n\t}, {\n\t\tvalue: \"comply with\",\n\t\treplace: \"follow\"\n\t}, {\n\t\tvalue: \"concerning\",\n\t\treplace: \"about, on\"\n\t}, {\n\t\tvalue: \"consequently\",\n\t\treplace: \"so\"\n\t}, {\n\t\tvalue: \"consolidate\",\n\t\treplace: \"join, merge\"\n\t}, {\n\t\tvalue: \"constitutes\",\n\t\treplace: \"is, forms, makes up\"\n\t}, {\n\t\tvalue: \"demonstrate\",\n\t\treplace: \"prove, show\"\n\t}, {\n\t\tvalue: \"depart\",\n\t\treplace: \"leave, go\"\n\t}, {\n\t\tvalue: \"designate\",\n\t\treplace: \"choose, name\"\n\t}, {\n\t\tvalue: \"discontinue\",\n\t\treplace: \"drop, stop\"\n\t}, {\n\t\tvalue: \"due to the fact that\",\n\t\treplace: \"because, since\"\n\t}, {\n\t\tvalue: \"each and every\",\n\t\treplace: \"Each\"\n\t}, {\n\t\tvalue: \"economical\",\n\t\treplace: \"cheap\"\n\t}, {\n\t\tvalue: \"eliminate\",\n\t\treplace: \"cut, drop, end\"\n\t}, {\n\t\tvalue: \"elucidate\",\n\t\treplace: \"explain\"\n\t}, {\n\t\tvalue: \"employ\",\n\t\treplace: \"use\"\n\t}, {\n\t\tvalue: \"endeavor\",\n\t\treplace: \"try\"\n\t}, {\n\t\tvalue: \"enumerate\",\n\t\treplace: \"count\"\n\t}, {\n\t\tvalue: \"equitable\",\n\t\treplace: \"fair\"\n\t}, {\n\t\tvalue: \"equivalent\",\n\t\treplace: \"equal\"\n\t}, {\n\t\tvalue: \"evaluate\",\n\t\treplace: \"test, check\"\n\t}, {\n\t\tvalue: \"evidenced\",\n\t\treplace: \"showed\"\n\t}, {\n\t\tvalue: \"exclusively\",\n\t\treplace: \"only\"\n\t}, {\n\t\tvalue: \"expedite\",\n\t\treplace: \"hurry\"\n\t}, {\n\t\tvalue: \"expend\",\n\t\treplace: \"spend\"\n\t}, {\n\t\tvalue: \"expiration\",\n\t\treplace: \"end\"\n\t}, {\n\t\tvalue: \"facilitate\",\n\t\treplace: \"ease, help\"\n\t}, {\n\t\tvalue: \"factual evidence\",\n\t\treplace: \"facts, evidence\"\n\t}, {\n\t\tvalue: \"feasible\",\n\t\treplace: \"workable\"\n\t}, {\n\t\tvalue: \"finalize\",\n\t\treplace: \"complete, finish\"\n\t}, {\n\t\tvalue: \"first and foremost\",\n\t\treplace: \"first\"\n\t}, {\n\t\tvalue: \"for the purpose of,\",\n\t\treplace: \"to\"\n\t}, {\n\t\tvalue: \"forfeit\",\n\t\treplace: \"lose, give up\"\n\t}, {\n\t\tvalue: \"formulate\",\n\t\treplace: \"plan\"\n\t}, {\n\t\tvalue: \"honest truth\",\n\t\treplace: \"truth\"\n\t}, {\n\t\tvalue: \"however\",\n\t\treplace: \"but, yet\"\n\t}, {\n\t\tvalue: \"if and when\",\n\t\treplace: \"use either word; not both\"\n\t}, {\n\t\tvalue: \"impacted\",\n\t\treplace: \"affected, harmed, changed\"\n\t}, {\n\t\tvalue: \"implement\",\n\t\treplace: \"install, put in place; tool\"\n\t}, {\n\t\tvalue: \"in a timely manner\",\n\t\treplace: \"on time\"\n\t}, {\n\t\tvalue: \"in accordance with\",\n\t\treplace: \"by, under\"\n\t}, {\n\t\tvalue: \"in addition\",\n\t\treplace: \"also, besides, too\"\n\t}, {\n\t\tvalue: \"in all likelihood\",\n\t\treplace: \"probably\"\n\t}, {\n\t\tvalue: \"in an effort to\",\n\t\treplace: \"to\"\n\t}, {\n\t\tvalue: \"in between\",\n\t\treplace: \"between\"\n\t}, {\n\t\tvalue: \"in excess of\",\n\t\treplace: \"more than\"\n\t}, {\n\t\tvalue: \"in lieu of\",\n\t\treplace: \"instead\"\n\t}, {\n\t\tvalue: \"in light of the fact that\",\n\t\treplace: \"because\"\n\t}, {\n\t\tvalue: \"in many cases\",\n\t\treplace: \"often\"\n\t}, {\n\t\tvalue: \"in order to\",\n\t\treplace: \"to\"\n\t}, {\n\t\tvalue: \"in regard to\",\n\t\treplace: \"about, concerning, on\"\n\t}, {\n\t\tvalue: \"in some instances \",\n\t\treplace: \"sometimes\"\n\t}, {\n\t\tvalue: \"in terms of\",\n\t\treplace: \"omit; for, as, with\"\n\t}, {\n\t\tvalue: \"in the near future\",\n\t\treplace: \"soon\"\n\t}, {\n\t\tvalue: \"in the process of\",\n\t\treplace: \"omit\"\n\t}, {\n\t\tvalue: \"inception\",\n\t\treplace: \"start\"\n\t}, {\n\t\tvalue: \"incumbent upon\",\n\t\treplace: \"must\"\n\t}, {\n\t\tvalue: \"indicate\",\n\t\treplace: \"say, state, or show\"\n\t}, {\n\t\tvalue: \"indication\",\n\t\treplace: \"sign\"\n\t}, {\n\t\tvalue: \"initiate\",\n\t\treplace: \"start\"\n\t}, {\n\t\tvalue: \"is applicable to\",\n\t\treplace: \"applies to\"\n\t}, {\n\t\tvalue: \"is authorized to\",\n\t\treplace: \"may\"\n\t}, {\n\t\tvalue: \"is responsible for\",\n\t\treplace: \"handles\"\n\t}, {\n\t\tvalue: \"it is essential\",\n\t\treplace: \"must, need to\"\n\t}, {\n\t\tvalue: \"magnitude\",\n\t\treplace: \"size\"\n\t}, {\n\t\tvalue: \"maximum\",\n\t\treplace: \"greatest, largest, most\"\n\t}, {\n\t\tvalue: \"methodology\",\n\t\treplace: \"method\"\n\t}, {\n\t\tvalue: \"minimize\",\n\t\treplace: \"cut\"\n\t}, {\n\t\tvalue: \"minimum\",\n\t\treplace: \"least, smallest, small\"\n\t}, {\n\t\tvalue: \"modify\",\n\t\treplace: \"change\"\n\t}, {\n\t\tvalue: \"monitor\",\n\t\treplace: \"check, watch, track\"\n\t}, {\n\t\tvalue: \"multiple\",\n\t\treplace: \"many\"\n\t}, {\n\t\tvalue: \"necessitate\",\n\t\treplace: \"cause, need\"\n\t}, {\n\t\tvalue: \"nevertheless\",\n\t\treplace: \"still, besides, even so\"\n\t}, {\n\t\tvalue: \"not certain\",\n\t\treplace: \"uncertain\"\n\t}, {\n\t\tvalue: \"not many\",\n\t\treplace: \"few\"\n\t}, {\n\t\tvalue: \"not often\",\n\t\treplace: \"rarely\"\n\t}, {\n\t\tvalue: \"not unless\",\n\t\treplace: \"only if\"\n\t}, {\n\t\tvalue: \"not unlike\",\n\t\treplace: \"similar, alike\"\n\t}, {\n\t\tvalue: \"notwithstanding\",\n\t\treplace: \"in spite of, still\"\n\t}, {\n\t\tvalue: \"null and void\",\n\t\treplace: \"use either null or void\"\n\t}, {\n\t\tvalue: \"numerous\",\n\t\treplace: \"many\"\n\t}, {\n\t\tvalue: \"objective\",\n\t\treplace: \"aim, goal\"\n\t}, {\n\t\tvalue: \"obligate\",\n\t\treplace: \"bind, compel\"\n\t}, {\n\t\tvalue: \"obtain\",\n\t\treplace: \"get\"\n\t}, {\n\t\tvalue: \"on the contrary\",\n\t\treplace: \"but, so\"\n\t}, {\n\t\tvalue: \"on the other hand\",\n\t\treplace: \"omit; but, so\"\n\t}, {\n\t\tvalue: \"one particular\",\n\t\treplace: \"one\"\n\t}, {\n\t\tvalue: \"optimum\",\n\t\treplace: \"best, greatest, most\"\n\t}, {\n\t\tvalue: \"overall\",\n\t\treplace: \"omit\"\n\t}, {\n\t\tvalue: \"owing to the fact that\",\n\t\treplace: \"because, since\"\n\t}, {\n\t\tvalue: \"participate\",\n\t\treplace: \"take part\"\n\t}, {\n\t\tvalue: \"particulars\",\n\t\treplace: \"details\"\n\t}, {\n\t\tvalue: \"pass away\",\n\t\treplace: \"die\"\n\t}, {\n\t\tvalue: \"pertaining to\",\n\t\treplace: \"about, of, on\"\n\t}, {\n\t\tvalue: \"point in time\",\n\t\treplace: \"time, point, moment, now\"\n\t}, {\n\t\tvalue: \"portion\",\n\t\treplace: \"part\"\n\t}, {\n\t\tvalue: \"possess\",\n\t\treplace: \"have, own\"\n\t}, {\n\t\tvalue: \"preclude\",\n\t\treplace: \"prevent\"\n\t}, {\n\t\tvalue: \"previously\",\n\t\treplace: \"before\"\n\t}, {\n\t\tvalue: \"prior to\",\n\t\treplace: \"before\"\n\t}, {\n\t\tvalue: \"prioritize\",\n\t\treplace: \"rank, focus on\"\n\t}, {\n\t\tvalue: \"procure\",\n\t\treplace: \"buy, get\"\n\t}, {\n\t\tvalue: \"proficiency\",\n\t\treplace: \"skill\"\n\t}, {\n\t\tvalue: \"provided that\",\n\t\treplace: \"if\"\n\t}, {\n\t\tvalue: \"purchase\",\n\t\treplace: \"buy, sale\"\n\t}, {\n\t\tvalue: \"put simply\",\n\t\treplace: \"omit\"\n\t}, {\n\t\tvalue: \"readily apparent\",\n\t\treplace: \"clear\"\n\t}, {\n\t\tvalue: \"refer back\",\n\t\treplace: \"refer\"\n\t}, {\n\t\tvalue: \"regarding\",\n\t\treplace: \"about, of, on\"\n\t}, {\n\t\tvalue: \"relocate\",\n\t\treplace: \"move\"\n\t}, {\n\t\tvalue: \"remainder\",\n\t\treplace: \"rest\"\n\t}, {\n\t\tvalue: \"remuneration\",\n\t\treplace: \"payment\"\n\t}, {\n\t\tvalue: \"require\",\n\t\treplace: \"must, need\"\n\t}, {\n\t\tvalue: \"requirement\",\n\t\treplace: \"need, rule\"\n\t}, {\n\t\tvalue: \"reside\",\n\t\treplace: \"live\"\n\t}, {\n\t\tvalue: \"residence\",\n\t\treplace: \"house\"\n\t}, {\n\t\tvalue: \"retain\",\n\t\treplace: \"keep\"\n\t}, {\n\t\tvalue: \"satisfy\",\n\t\treplace: \"meet, please\"\n\t}, {\n\t\tvalue: \"shall\",\n\t\treplace: \"must, will\"\n\t}, {\n\t\tvalue: \"should you wish\",\n\t\treplace: \"if you want\"\n\t}, {\n\t\tvalue: \"similar to\",\n\t\treplace: \"like\"\n\t}, {\n\t\tvalue: \"solicit\",\n\t\treplace: \"ask for, request\"\n\t}, {\n\t\tvalue: \"span across\",\n\t\treplace: \"span, cross\"\n\t}, {\n\t\tvalue: \"strategize\",\n\t\treplace: \"plan\"\n\t}, {\n\t\tvalue: \"subsequent\",\n\t\treplace: \"later, next, after, then\"\n\t}, {\n\t\tvalue: \"substantial\",\n\t\treplace: \"large, much\"\n\t}, {\n\t\tvalue: \"successfully complete\",\n\t\treplace: \"complete, pass\"\n\t}, {\n\t\tvalue: \"sufficient\",\n\t\treplace: \"enough\"\n\t}, {\n\t\tvalue: \"terminate\",\n\t\treplace: \"end, stop\"\n\t}, {\n\t\tvalue: \"the month of\",\n\t\treplace: \"omit\"\n\t}, {\n\t\tvalue: \"therefore\",\n\t\treplace: \"thus, so\"\n\t}, {\n\t\tvalue: \"time period\",\n\t\treplace: \"time, period\"\n\t}, {\n\t\tvalue: \"took advantage of\",\n\t\treplace: \"preyed on\"\n\t}, {\n\t\tvalue: \"transmit\",\n\t\treplace: \"send\"\n\t}, {\n\t\tvalue: \"transpire\",\n\t\treplace: \"happen\"\n\t}, {\n\t\tvalue: \"until such time as\",\n\t\treplace: \"until\"\n\t}, {\n\t\tvalue: \"utilization\",\n\t\treplace: \"use\"\n\t}, {\n\t\tvalue: \"utilize\",\n\t\treplace: \"use\"\n\t}, {\n\t\tvalue: \"validate\",\n\t\treplace: \"confirm\"\n\t}, {\n\t\tvalue: \"various different\",\n\t\treplace: \"various, different\"\n\t}, {\n\t\tvalue: \"very\",\n\t\treplace: \"omit\"\n\t}, {\n\t\tvalue: \"whether or not\",\n\t\treplace: \"whether\"\n\t}, {\n\t\tvalue: \"with respect to\",\n\t\treplace: \"on, about\"\n\t}, {\n\t\tvalue: \"with the exception of\",\n\t\treplace: \"except for\"\n\t}, {\n\t\tvalue: \"witnessed\",\n\t\treplace: \"saw, seen\"\n\t}\n];\n","import { weasels } from 'weasels';\n\nexport default {\n\texceptions: [\n\t\t'many',\n\t\t'few',\n\t],\n\tlist: weasels,\n};\n","import { addProblems } from \"./update\";\n\nexport { addProblems };\n","import { dispatch, select } from '@wordpress/data';\n\nimport { store } from '../store';\n\nexport function addProblems(problems) {\n\tdispatch(store).addProblems(problems);\n}\n","import words from '../data/adverbs';\n\nexport default function adverbs(text) {\n    const expression = new RegExp('\\\\b(' + words.join('|') + ')(y)\\\\b', 'gi');\n    const matches = [...text.matchAll(expression)];\n    \n    if (!matches) {\n        return [];\n    }\n    \n    return matches.map((match) => {\n        const [ value ] = [...match].filter(Boolean);\n\n        return {\n            value,\n            type: 'adverbs',\n            level: 'warning',\n            message: 'adverbs can weaken meaning',\n            index: match.index,\n            offset: value.length + match.index,\n        };\n    });\n}\n","import words from '../data/hedges';\n\nconst expression = new RegExp('\\\\b(' + words.list.join('|') + ')\\\\b', 'gi');\n\nexport default function weasel(text) {\n\tconst matches = [...text.matchAll(expression)];\n\t\n\tif (!matches) {\n\t\treturn [];\n\t}\n\t\n\treturn matches.map((match) => {\n\t\tconst [ value ] = [...match].filter(Boolean);\n\n\t\treturn {\n\t\t\tvalue,\n\t\t\ttype: 'hedges',\n\t\t\tlevel: 'warning',\n\t\t\tmessage: `\"${value}\" is a hedge word`,\n\t\t\tindex: match.index,\n\t\t\toffset: value.length + match.index,\n\t\t\treplacements: [{\n\t\t\t\taction: 'delete',\n\t\t\t\tvalue: '',\n\t\t\t}],\n\t\t};\n\t});\n};\n","import { flow } from 'lodash';\nimport adverbs from \"./adverbs\";\nimport hedges from \"./hedges\";\nimport passive from \"./passive\";\nimport readability from \"./readability\";\nimport simpler from \"./simpler\";\nimport so from \"./so\";\nimport weasel from \"./weasel\";\n\nimport stripTags from \"../utils/strip-tags\";\nimport stripAstrals from '../utils/strip-astrals';\nimport stripHTMComments from '../utils/strip-html-comments';\nimport stripSpaces from '../utils/strip-spaces';\nimport stripHTMLEntities from '../utils/strip-html-entities';\n\nexport default (text) => {\n    const content = `${\n        flow(\n            stripTags,\n            stripHTMComments,\n            stripAstrals,\n            stripSpaces,\n            stripHTMLEntities,\n        )(text)\n    }\\n`;\n\tconst stripped = content.split(' ').filter(Boolean).join(' ');\n\n\treturn [\n\t\t...passive(stripped),\n\t\t...so(stripped),\n\t\t...adverbs(stripped),\n\t\t...readability(stripped),\n\t\t...simpler(stripped),\n\t\t...hedges(stripped),\n\t\t...weasel(stripped),\n\t].filter(Boolean);\n};\n","import words from '../data/passive';\n\nconst expression = new RegExp('\\\\b(am|are|were|being|is|been|was|be)\\\\b\\\\s*([\\\\w]+ed|' + words.map((word) => word.value).join('|') + ')\\\\b', 'gi');\n\nexport default function passive(text) {\n    const matches = [...text.matchAll(expression)];\n\n    if (!matches) {\n        return [];\n    }\n\n    return matches.map((match) => {\n        const [ value ] = [...match].filter(Boolean);\n        const replacement = words.find(({ value: word }) => word === value);\n\n        return {\n            value,\n            type: 'passive',\n            level: 'warning',\n            message: `\"${value}\" may be passive voice`,\n            index: match.index,\n            offset: value.length + match.index,\n            replacements: replacement?.replace ? replacement.replace.split(', ').map((value) => ({ value: value.toLocaleLowerCase(), action: 'replace' })) : [],\n        };\n    });\n}\n","import { readingScore } from \"../reading-score\";\nimport { tokenize } from '../tokenizer';\n\nexport default (text) => {\n    const paragraphs = text.replace(/\\n$/gm, '').split(/\\n/g).filter((line) => line.length);\n    const { sentences } = tokenize(paragraphs.join(' '));\n\n    return !sentences ? [] : sentences.map((sentence, index) => {\n        const { score, words } = readingScore(sentence);\n        const level = score > 9 && score <= 16 ? 'suggestion' : score > 16 ? 'warning' : null;\n\n        return words > 14 && level ? {\n            value: sentence,\n            type: `readability-${level === 'warning' ? 'very-' : ''}hard`,\n            level,\n            message: `sentence is${level ===  'warning' ? ' very' : ''} hard to read`,\n            index: index === 0 ? 0 : sentences[index - 1].length + 1,\n            offset: sentences.reduce((accumulator, currentValue, currentIndex) => currentIndex <= index ? accumulator + currentValue.length : accumulator, 0),\n        } : null;\n    }).filter(Boolean);\n};\n","import words from '../data/simpler';\n\nconst expression = new RegExp('\\\\b(' + words.map(({ value }) => value).join('|') + ')\\\\b', 'gi');\n\nexport default function simpler(text) {\n    const matches = [...text.matchAll(expression)];\n    \n    if (!matches) {\n        return [];\n    }\n    \n    return matches.map((match) => {\n        const [ value ] = [...match].filter(Boolean);\n        const replacement = words.find(({ value: word }) => word === value);\n\n        return {\n            value,\n            type: 'simpler',\n            level: 'suggestion',\n            message: `\"${value}\" has a simpler alternative`,\n            index: match.index,\n            offset: value.length + match.index,\n            replacements: replacement?.replace ? replacement.replace.split(', ').map((value) => ({ value: value.toLocaleLowerCase(), action: 'replace' })) : [],\n        };\n    });\n}\n","export default (text) => {\n    const expression = new RegExp(/^(\\s)*so\\b[\\s\\S]/gi);\n    const matches = [...text.matchAll(expression)];\n\n    if (!matches) {\n        return [];\n    }\n\n    return matches.map((match) => {\n        const [ value ] = [...match].filter(Boolean);\n\n        return {\n            value,\n            type: 'so',\n            level: 'suggestion',\n            message: 'omit \"So\" from the beginning of sentences',\n            index: match.index,\n            offset: value.length + match.index,\n            replacements: [{\n                action: 'delete',\n                value: '',\n            }],\n        }\n    });\n};\n","import words from '../data/weasel';\n\nconst expression = new RegExp('\\\\b(' + words.list.join('|') + ')\\\\b', 'gi');\n\nexport default function weasel(text) {\n\tconst matches = [...text.matchAll(expression)];\n\t\n\tif (!matches) {\n\t\treturn [];\n\t}\n\t\n\treturn matches.map((match) => {\n\t\tconst [ value ] = [...match].filter(Boolean);\n\n\t\treturn {\n\t\t\tvalue,\n\t\t\ttype: 'weasel',\n\t\t\tlevel: 'warning',\n\t\t\tmessage: `\"${value}\" is a weasel word`,\n\t\t\tindex: match.index,\n\t\t\toffset: value.length + match.index,\n\t\t\treplacements: [{\n\t\t\t\taction: 'delete',\n\t\t\t\tvalue: '',\n\t\t\t}],\n\t\t};\n\t});\n};\n","import { flow } from 'lodash';\nimport { count as characterCounter } from '@wordpress/wordcount';\nimport readingTime from 'reading-time/lib/reading-time';\nimport { automatedReadability } from 'automated-readability';\nimport { polarity } from 'polarity';\n\nimport stripAstrals from './utils/strip-astrals';\nimport stripHTMComments from './utils/strip-html-comments';\nimport stripSpaces from './utils/strip-spaces';\nimport stripTags from './utils/strip-tags';\nimport stripHTMLEntities from './utils/strip-html-entities';\nimport { tokenize } from './tokenizer';\n\n/**\n * \n * @param {string} text\n */\nexport const readingScore = (content) => {\n    const text = `${\n        flow(\n            stripTags,\n            stripHTMComments,\n            stripAstrals,\n            stripSpaces,\n            stripHTMLEntities,\n        )(content)\n    }\\n`;\n    const stripped = text.split(' ').filter(Boolean).join(' ');\n\n    /**\n     * Not very accurate at the moment.\n     */\n    const paragraphs = stripped.replace(/\\n$/gm, '').split(/\\n/g).filter((line) => line.length);\n    const { sentences } = tokenize(paragraphs.join(' '));\n    const words = sentences.reduce((accumulator, sentence) => {\n        const { words } = tokenize(sentence);\n\n        accumulator.push(...words);\n        return accumulator;\n    }, []);\n\n    const wordCount = characterCounter(stripped, 'words');\n    const characterCount = characterCounter(stripped, 'characters_including_spaces');\n    const alphaNumericCharacters = stripped.match(/[a-zA-Z0-9]/g);\n    const letters = stripped.match(/[a-zA-Z]/g)?.length || 0;\n    const score = automatedReadability({\n        sentence: sentences.length,\n        word: wordCount,\n        character: alphaNumericCharacters?.length || 0,\n    });\n    const { polarity: polarityScore } = polarity(words);\n    const { minutes } = readingTime(stripped, { wordsPerMinute: 275 });\n\n    console.log({sentences, words});\n\n    return {\n        paragraphs: paragraphs.length,\n        sentences: sentences.length,\n        words: wordCount,\n        characters: characterCount,\n        score: Math.round(score),\n        letters,\n        polarity: polarityScore,\n        readingTime: minutes,\n    };\n};\n","export function addProblems(problems) {\n\treturn {\n\t\ttype: 'UPDATE_PROBLEMS',\n\t\tproblems,\n\t};\n}\n\nexport function removeProblem(name) {\n\treturn {\n\t\ttype: 'REMOVE_PROBLEM',\n\t\tname,\n\t};\n}\n","import { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\n\nconst STORE_NAME = 'writers-blocks/syntax';\n\nexport const store = createReduxStore(STORE_NAME, {\n\treducer,\n\tselectors,\n\tactions,\n});\n\nregister(store);\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\nconst { btoa } = window;\n\nexport function problems(state = { problems: [] }, action) {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_PROBLEMS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproblems: [\n\t\t\t\t\t...(Array.isArray(action.problems) ? action.problems : [action.problems]).map((problem) => ({\n\t\t\t\t\t\t...problem,\n\t\t\t\t\t\tid: btoa(`${problem.blockId}-${problem.type}-${problem.index}-${problem.offset}`),\n\t\t\t\t\t})),\n\t\t\t\t],\n\t\t\t};\n\t\tcase 'REMOVE_PROBLEM':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproblems: state.problems.filter((problem) => problem.id !== action.name),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default combineReducers({\n\tproblems,\n});\n","export const getProblems = (state) => state.problems.problems;\n\nexport const getProblem = (state, id) => state.problems.problems.find((problem) => problem.id === id);\n\nexport const getBlockProblems = (state, blockId) => state.problems.problems.filter((problem) => problem.blockId === blockId);\n","import Tokenizer from 'sentence-tokenizer';\n\nexport const tokenize = (text) => {\n\tconst tokenizer = new Tokenizer();\n\ttokenizer.setEntry(text);\n\n\ttry {\n\t\treturn {\n\t\t\tsentences: tokenizer.getSentences(),\n\t\t\twords: tokenizer.getTokens(),\n\t\t}\n\t} catch(error) {\n\t\treturn {\n\t\t\tsentences: 0,\n\t\t\twords: 0,\n\t\t};\n\t}\n};\n","/**\n * Replaces items matched in the regex with character.\n *\n * @param {string} text The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripAstrals( text ) {\n\treturn text.replace( /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, '' );\n}\n","/**\n * Removes items matched in the regex.\n *\n * @param {string} text The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripHTMLComments(text) {\n\treturn text.replace( /<!--[\\s\\S]*?-->/g, '' );\n}\n","/**\n * Replaces items matched in the regex with a single character.\n *\n * @param {string} text The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripHTMLEntities( text ) {\n\treturn text.replace( /&\\S+?;/g, '' );\n}\n","/**\n * Replaces items matched in the regex with spaces.\n *\n * @param {string} text The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripSpaces( text ) {\n\treturn text.replace( /&nbsp;|&#160;/gi, ' ' );\n}\n","/**\n * Replaces items matched in the regex with new line\n *\n * @param {string} text The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripTags(text) {\n\treturn text.replace( /<\\/?[a-z][^>]*?>/gi, ' ' );\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/*!\n * reading-time\n * Copyright (c) Nicolas Gryman <ngryman@gmail.com>\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * @typedef {import('reading-time').Options['wordBound']} WordBoundFunction\n */\n\n/**\n * @param {number} number\n * @param {number[][]} arrayOfRanges\n */\nfunction codeIsInRanges(number, arrayOfRanges) {\n  return arrayOfRanges.some(([lowerBound, upperBound]) =>\n    (lowerBound <= number) && (number <= upperBound)\n  )\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isCJK(c) {\n  if ('string' !== typeof c) {\n    return false\n  }\n  const charCode = c.charCodeAt(0)\n  // Help wanted!\n  // This should be good for most cases, but if you find it unsatisfactory\n  // (e.g. some other language where each character should be standalone words),\n  // contributions welcome!\n  return codeIsInRanges(\n    charCode,\n    [\n      // Hiragana (Katakana not included on purpose,\n      // context: https://github.com/ngryman/reading-time/pull/35#issuecomment-853364526)\n      // If you think Katakana should be included and have solid reasons, improvement is welcomed\n      [0x3040, 0x309f],\n      // CJK Unified ideographs\n      [0x4e00, 0x9fff],\n      // Hangul\n      [0xac00, 0xd7a3],\n      // CJK extensions\n      [0x20000, 0x2ebe0]\n    ]\n  )\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isAnsiWordBound(c) {\n  return ' \\n\\r\\t'.includes(c)\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isPunctuation(c) {\n  if ('string' !== typeof c) {\n    return false\n  }\n  const charCode = c.charCodeAt(0)\n  return codeIsInRanges(\n    charCode,\n    [\n      [0x21, 0x2f],\n      [0x3a, 0x40],\n      [0x5b, 0x60],\n      [0x7b, 0x7e],\n      // CJK Symbols and Punctuation\n      [0x3000, 0x303f],\n      // Full-width ASCII punctuation variants\n      [0xff00, 0xffef]\n    ]\n  )\n}\n\n/**\n * @type {import('reading-time').default}\n */\nfunction readingTime(text, options = {}) {\n  let words = 0, start = 0, end = text.length - 1\n\n  // use provided value if available\n  const wordsPerMinute = options.wordsPerMinute || 200\n\n  // use provided function if available\n  const isWordBound = options.wordBound || isAnsiWordBound\n\n  // fetch bounds\n  while (isWordBound(text[start])) start++\n  while (isWordBound(text[end])) end--\n\n  // Add a trailing word bound to make handling edges more convenient\n  const normalizedText = `${text}\\n`\n\n  // calculate the number of words\n  for (let i = start; i <= end; i++) {\n    // A CJK character is a always word;\n    // A non-word bound followed by a word bound / CJK is the end of a word.\n    if (\n      isCJK(normalizedText[i]) ||\n      (!isWordBound(normalizedText[i]) &&\n        (isWordBound(normalizedText[i + 1]) || isCJK(normalizedText[i + 1]))\n      )\n    ) {\n      words++\n    }\n    // In case of CJK followed by punctuations, those characters have to be eaten as well\n    if (isCJK(normalizedText[i])) {\n      while (\n        i <= end &&\n        (isPunctuation(normalizedText[i + 1]) || isWordBound(normalizedText[i + 1]))\n      ) {\n        i++\n      }\n    }\n  }\n\n  // reading time stats\n  const minutes = words / wordsPerMinute\n  // Math.round used to resolve floating point funkyness\n  //   http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\n  const time = Math.round(minutes * 60 * 1000)\n  const displayed = Math.ceil(minutes.toFixed(2))\n\n  return {\n    text: displayed + ' min read',\n    minutes: minutes,\n    time: time,\n    words: words\n  }\n}\n\n/**\n * Export\n */\nmodule.exports = readingTime\n","\"use strict\";\n\n// eslint-disable-next-line no-unused-vars\nvar debug = require('debug')('tokenizer');\n\nfunction compact(str) {\n  var res = str.trim();\n  res = res.replace('  ', ' ');\n  return res;\n}\n\nfunction Tokenizer(username, botname) {\n\n  // // Maybe it is not useful\n  // if (!(this instanceof Tokenizer)) {\n  //   return new Tokenizer();\n  // }\n\n  this.username = username || 'Guy';\n  this.entry = null;\n  this.sentences = null;\n\n  if (typeof botname == 'string') {\n    this.botname = botname;\n  }\n  else {\n    this.botname = 'ECTOR';\n  }\n}\n\nTokenizer.prototype = {\n  setEntry : function (entry) {\n    this.entry = compact(entry);\n    this.sentences = null;\n  },\n  // Split the entry into sentences.\n  getSentences : function () {\n    // this.sentences = this.entry.split(/[\\.!]\\s/);\n    if (!this.entry) return [];\n    var words = this.entry.split(' ');\n    var endingWords = words.filter(function(w) {\n      return w.endsWith('.') || w.endsWith('!') || w.endsWith('?');\n    });\n\n    var self = this;\n    var botnameRegExp = new RegExp(\"\\\\W?\" + self.botname.normalize() + \"\\\\W?\");\n    var usernameRegExp = new RegExp(\"\\\\W?\" + self.username.normalize() + \"\\\\W?\");\n    var lastSentence = words[0];\n    self.sentences = [];\n    words.reduce(function (prev, cur) {\n      var curNormalized = cur.normalize();\n      var curReplaced = cur;\n      if (curNormalized.search(botnameRegExp) !== -1) {\n        curReplaced = cur.replace(self.botname,\"{yourname}\");\n      }\n      else if (curNormalized.search(usernameRegExp) !== -1) {\n        curReplaced = cur.replace(self.username,\"{myname}\");\n      }\n\n      if (endingWords.indexOf(prev) != -1) {\n        self.sentences.push(compact(lastSentence));\n        lastSentence = \"\";\n      }\n      lastSentence = lastSentence + \" \" + curReplaced;\n      return cur;\n    });\n    self.sentences.push(compact(lastSentence));\n    return this.sentences;\n  },\n  // Get the tokens of one sentence\n  getTokens : function (sentenceIndex) {\n    var s = 0;\n    if(typeof sentenceIndex === 'number') s = sentenceIndex;\n    return this.sentences[s].split(' ');\n  }\n};\n\nmodule.exports = Tokenizer;","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\treturn createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"wordcount\"];","/** @type {Record<string, number>} */\nexport const afinn165 = {\n  abandon: -2,\n  abandoned: -2,\n  abandons: -2,\n  abducted: -2,\n  abduction: -2,\n  abductions: -2,\n  abhor: -3,\n  abhorred: -3,\n  abhorrent: -3,\n  abhors: -3,\n  abilities: 2,\n  ability: 2,\n  aboard: 1,\n  aborted: -1,\n  aborts: -1,\n  absentee: -1,\n  absentees: -1,\n  absolve: 2,\n  absolved: 2,\n  absolves: 2,\n  absolving: 2,\n  absorbed: 1,\n  abuse: -3,\n  abused: -3,\n  abuses: -3,\n  abusing: -3,\n  abusive: -3,\n  accept: 1,\n  acceptable: 1,\n  acceptance: 1,\n  accepted: 1,\n  accepting: 1,\n  accepts: 1,\n  accessible: 1,\n  accident: -2,\n  accidental: -2,\n  accidentally: -2,\n  accidents: -2,\n  acclaim: 2,\n  acclaimed: 2,\n  accolade: 2,\n  accomplish: 2,\n  accomplished: 2,\n  accomplishes: 2,\n  accomplishment: 2,\n  accomplishments: 2,\n  accusation: -2,\n  accusations: -2,\n  accuse: -2,\n  accused: -2,\n  accuses: -2,\n  accusing: -2,\n  ache: -2,\n  achievable: 1,\n  aching: -2,\n  acquit: 2,\n  acquits: 2,\n  acquitted: 2,\n  acquitting: 2,\n  acrimonious: -3,\n  active: 1,\n  adequate: 1,\n  admire: 3,\n  admired: 3,\n  admires: 3,\n  admiring: 3,\n  admit: -1,\n  admits: -1,\n  admitted: -1,\n  admonish: -2,\n  admonished: -2,\n  adopt: 1,\n  adopts: 1,\n  adorable: 3,\n  adoration: 3,\n  adore: 3,\n  adored: 3,\n  adores: 3,\n  adoring: 3,\n  adoringly: 3,\n  advanced: 1,\n  advantage: 2,\n  advantageous: 2,\n  advantageously: 2,\n  advantages: 2,\n  adventure: 2,\n  adventures: 2,\n  adventurous: 2,\n  adversary: -1,\n  advisable: 1,\n  affected: -1,\n  affection: 3,\n  affectionate: 3,\n  affectionateness: 3,\n  afflicted: -1,\n  affordable: 2,\n  affronted: -1,\n  aficionados: 2,\n  afraid: -2,\n  aggravate: -2,\n  aggravated: -2,\n  aggravates: -2,\n  aggravating: -2,\n  aggression: -2,\n  aggressions: -2,\n  aggressive: -2,\n  aggressiveness: -2,\n  aghast: -2,\n  agog: 2,\n  agonise: -3,\n  agonised: -3,\n  agonises: -3,\n  agonising: -3,\n  agonize: -3,\n  agonized: -3,\n  agonizes: -3,\n  agonizing: -3,\n  agree: 1,\n  agreeable: 2,\n  agreed: 1,\n  agreement: 1,\n  agrees: 1,\n  alarm: -2,\n  alarmed: -2,\n  alarmist: -2,\n  alarmists: -2,\n  alas: -1,\n  alert: -1,\n  alienation: -2,\n  alive: 1,\n  allegation: -2,\n  allegations: -2,\n  allergic: -2,\n  allow: 1,\n  ally: 2,\n  alone: -2,\n  altruistic: 2,\n  amaze: 2,\n  amazed: 2,\n  amazes: 2,\n  amazing: 4,\n  ambitious: 2,\n  ambivalent: -1,\n  amicable: 2,\n  amuse: 3,\n  amused: 3,\n  amusement: 3,\n  amusements: 3,\n  anger: -3,\n  angered: -3,\n  angers: -3,\n  angry: -3,\n  anguish: -3,\n  anguished: -3,\n  animosity: -2,\n  annoy: -2,\n  annoyance: -2,\n  annoyed: -2,\n  annoying: -2,\n  annoys: -2,\n  antagonistic: -2,\n  anti: -1,\n  anticipation: 1,\n  anxiety: -2,\n  anxious: -2,\n  apathetic: -3,\n  apathy: -3,\n  apeshit: -3,\n  apocalyptic: -2,\n  apologise: -1,\n  apologised: -1,\n  apologises: -1,\n  apologising: -1,\n  apologize: -1,\n  apologized: -1,\n  apologizes: -1,\n  apologizing: -1,\n  apology: -1,\n  appalled: -2,\n  appalling: -2,\n  appealing: 2,\n  appease: 2,\n  appeased: 2,\n  appeases: 2,\n  appeasing: 2,\n  applaud: 2,\n  applauded: 2,\n  applauding: 2,\n  applauds: 2,\n  applause: 2,\n  appreciate: 2,\n  appreciated: 2,\n  appreciates: 2,\n  appreciating: 2,\n  appreciation: 2,\n  apprehensive: -2,\n  appropriate: 2,\n  appropriately: 2,\n  approval: 2,\n  approved: 2,\n  approves: 2,\n  ardent: 1,\n  arrest: -2,\n  arrested: -3,\n  arrests: -2,\n  arrogant: -2,\n  arsehole: -4,\n  ashame: -2,\n  ashamed: -2,\n  ass: -4,\n  assassination: -3,\n  assassinations: -3,\n  assault: -2,\n  assaults: -2,\n  asset: 2,\n  assets: 2,\n  assfucking: -4,\n  asshole: -4,\n  astonished: 2,\n  astound: 3,\n  astounded: 3,\n  astounding: 3,\n  astoundingly: 3,\n  astounds: 3,\n  atrocious: -3,\n  atrocity: -3,\n  attack: -1,\n  attacked: -1,\n  attacking: -1,\n  attacks: -1,\n  attract: 1,\n  attracted: 1,\n  attracting: 2,\n  attraction: 2,\n  attractions: 2,\n  attractive: 2,\n  attractively: 2,\n  attractiveness: 2,\n  attracts: 1,\n  audacious: 3,\n  aura: 1,\n  authority: 1,\n  avenge: -2,\n  avenged: -2,\n  avenger: -2,\n  avengers: -2,\n  avenges: -2,\n  avenging: -2,\n  avert: -1,\n  averted: -1,\n  averts: -1,\n  avid: 2,\n  avoid: -1,\n  avoided: -1,\n  avoids: -1,\n  await: -1,\n  awaited: -1,\n  awaits: -1,\n  award: 3,\n  awarded: 3,\n  awards: 3,\n  awesome: 4,\n  awful: -3,\n  awkward: -2,\n  axe: -1,\n  axed: -1,\n  backed: 1,\n  backing: 2,\n  backs: 1,\n  bad: -3,\n  'bad luck': -2,\n  badass: -3,\n  badly: -3,\n  badness: -3,\n  bailout: -2,\n  balanced: 1,\n  bamboozle: -2,\n  bamboozled: -2,\n  bamboozles: -2,\n  ban: -2,\n  banish: -1,\n  bankrupt: -3,\n  bankruptcy: -3,\n  bankster: -3,\n  banned: -2,\n  barbarian: -2,\n  barbaric: -2,\n  barbarous: -2,\n  bargain: 2,\n  barrier: -2,\n  bastard: -5,\n  bastards: -5,\n  battle: -1,\n  battled: -1,\n  battles: -1,\n  battling: -2,\n  beaten: -2,\n  beatific: 3,\n  beating: -1,\n  beauties: 3,\n  beautiful: 3,\n  beautifully: 3,\n  beautify: 3,\n  beauty: 3,\n  befit: 2,\n  befitting: 2,\n  belittle: -2,\n  belittled: -2,\n  beloved: 3,\n  benefactor: 2,\n  benefactors: 2,\n  benefit: 2,\n  benefits: 2,\n  benefitted: 2,\n  benefitting: 2,\n  benevolent: 3,\n  bereave: -2,\n  bereaved: -2,\n  bereaves: -2,\n  bereaving: -2,\n  best: 3,\n  'best damn': 4,\n  betray: -3,\n  betrayal: -3,\n  betrayed: -3,\n  betraying: -3,\n  betrays: -3,\n  better: 2,\n  bias: -1,\n  biased: -2,\n  big: 1,\n  bitch: -5,\n  bitches: -5,\n  bitter: -2,\n  bitterest: -2,\n  bitterly: -2,\n  bizarre: -2,\n  blackmail: -3,\n  blackmailed: -3,\n  blackmailing: -3,\n  blackmails: -3,\n  blah: -2,\n  blame: -2,\n  blamed: -2,\n  blames: -2,\n  blaming: -2,\n  bless: 2,\n  blesses: 2,\n  blessing: 3,\n  blessings: 3,\n  blind: -1,\n  bliss: 3,\n  blissful: 3,\n  blithe: 2,\n  bloated: -1,\n  block: -1,\n  blockade: -2,\n  blockbuster: 3,\n  blocked: -1,\n  blocking: -1,\n  blocks: -1,\n  bloody: -3,\n  blurry: -2,\n  boastful: -2,\n  bold: 2,\n  boldly: 2,\n  bomb: -1,\n  boost: 1,\n  boosted: 1,\n  boosting: 1,\n  boosts: 1,\n  bore: -2,\n  bored: -2,\n  boring: -3,\n  bother: -2,\n  bothered: -2,\n  bothers: -2,\n  bothersome: -2,\n  boycott: -2,\n  boycotted: -2,\n  boycotting: -2,\n  boycotts: -2,\n  brainwashing: -3,\n  brave: 2,\n  braveness: 2,\n  bravery: 2,\n  bravura: 3,\n  breach: -2,\n  breached: -2,\n  breaches: -2,\n  breaching: -2,\n  breakthrough: 3,\n  breathtaking: 5,\n  bribe: -3,\n  bribed: -3,\n  bribes: -3,\n  bribing: -3,\n  bright: 1,\n  brightest: 2,\n  brightness: 1,\n  brilliant: 4,\n  brilliance: 3,\n  brilliances: 3,\n  brisk: 2,\n  broke: -1,\n  broken: -1,\n  brooding: -2,\n  brutal: -3,\n  brutally: -3,\n  bullied: -2,\n  bullshit: -4,\n  bully: -2,\n  bullying: -2,\n  bummer: -2,\n  buoyant: 2,\n  burden: -2,\n  burdened: -2,\n  burdening: -2,\n  burdens: -2,\n  burglar: -2,\n  burglary: -2,\n  calm: 2,\n  calmed: 2,\n  calming: 2,\n  calms: 2,\n  \"can't stand\": -3,\n  cancel: -1,\n  cancelled: -1,\n  cancelling: -1,\n  cancels: -1,\n  cancer: -1,\n  capabilities: 1,\n  capability: 1,\n  capable: 1,\n  captivated: 3,\n  care: 2,\n  carefree: 1,\n  careful: 2,\n  carefully: 2,\n  carefulness: 2,\n  careless: -2,\n  cares: 2,\n  caring: 2,\n  'cashing in': -2,\n  casualty: -2,\n  catastrophe: -3,\n  catastrophic: -4,\n  cautious: -1,\n  celebrate: 3,\n  celebrated: 3,\n  celebrates: 3,\n  celebrating: 3,\n  celebration: 3,\n  celebrations: 3,\n  censor: -2,\n  censored: -2,\n  censors: -2,\n  certain: 1,\n  chagrin: -2,\n  chagrined: -2,\n  challenge: -1,\n  champion: 2,\n  championed: 2,\n  champions: 2,\n  chance: 2,\n  chances: 2,\n  chaos: -2,\n  chaotic: -2,\n  charged: -3,\n  charges: -2,\n  charisma: 2,\n  charitable: 2,\n  charm: 3,\n  charming: 3,\n  charmingly: 3,\n  charmless: -3,\n  chastise: -3,\n  chastised: -3,\n  chastises: -3,\n  chastising: -3,\n  cheat: -3,\n  cheated: -3,\n  cheater: -3,\n  cheaters: -3,\n  cheating: -3,\n  cheats: -3,\n  cheer: 2,\n  cheered: 2,\n  cheerful: 2,\n  cheerfully: 2,\n  cheering: 2,\n  cheerless: -2,\n  cheers: 2,\n  cheery: 3,\n  cherish: 2,\n  cherished: 2,\n  cherishes: 2,\n  cherishing: 2,\n  chic: 2,\n  chide: -3,\n  chided: -3,\n  chides: -3,\n  chiding: -3,\n  childish: -2,\n  chilling: -1,\n  choke: -2,\n  choked: -2,\n  chokes: -2,\n  choking: -2,\n  clarifies: 2,\n  clarity: 2,\n  clash: -2,\n  classy: 3,\n  clean: 2,\n  cleaner: 2,\n  clear: 1,\n  cleared: 1,\n  clearly: 1,\n  clears: 1,\n  clever: 2,\n  clouded: -1,\n  clueless: -2,\n  cock: -5,\n  cocksucker: -5,\n  cocksuckers: -5,\n  cocky: -2,\n  coerced: -2,\n  coercion: -2,\n  collapse: -2,\n  collapsed: -2,\n  collapses: -2,\n  collapsing: -2,\n  collide: -1,\n  collides: -1,\n  colliding: -1,\n  collision: -2,\n  collisions: -2,\n  colluding: -3,\n  combat: -1,\n  combats: -1,\n  comedy: 1,\n  comfort: 2,\n  comfortable: 2,\n  comfortably: 2,\n  comforting: 2,\n  comforts: 2,\n  comic: 1,\n  commend: 2,\n  commended: 2,\n  commit: 1,\n  commitment: 2,\n  commits: 1,\n  committed: 1,\n  committing: 1,\n  compassion: 2,\n  compassionate: 2,\n  compelled: 1,\n  competencies: 1,\n  competent: 2,\n  competitive: 2,\n  complacent: -2,\n  complain: -2,\n  complained: -2,\n  complaining: -2,\n  complains: -2,\n  complaint: -2,\n  complaints: -2,\n  complicating: -2,\n  compliment: 2,\n  complimented: 2,\n  compliments: 2,\n  comprehensive: 2,\n  concerned: -2,\n  conciliate: 2,\n  conciliated: 2,\n  conciliates: 2,\n  conciliating: 2,\n  condemn: -2,\n  condemnation: -2,\n  condemned: -2,\n  condemns: -2,\n  confidence: 2,\n  confident: 2,\n  confidently: 2,\n  conflict: -2,\n  conflicting: -2,\n  conflictive: -2,\n  conflicts: -2,\n  confuse: -2,\n  confused: -2,\n  confusing: -2,\n  congrats: 2,\n  congratulate: 2,\n  congratulation: 2,\n  congratulations: 2,\n  consent: 2,\n  consents: 2,\n  consolable: 2,\n  conspiracy: -3,\n  constipation: -2,\n  constrained: -2,\n  contagion: -2,\n  contagions: -2,\n  contagious: -1,\n  contaminant: -2,\n  contaminants: -2,\n  contaminate: -2,\n  contaminated: -2,\n  contaminates: -2,\n  contaminating: -2,\n  contamination: -2,\n  contaminations: -2,\n  contempt: -2,\n  contemptible: -2,\n  contemptuous: -2,\n  contemptuously: -2,\n  contend: -1,\n  contender: -1,\n  contending: -1,\n  contentious: -2,\n  contestable: -2,\n  controversial: -2,\n  controversially: -2,\n  controversies: -2,\n  controversy: -2,\n  convicted: -2,\n  convince: 1,\n  convinced: 1,\n  convinces: 1,\n  convivial: 2,\n  cool: 1,\n  'cool stuff': 3,\n  cornered: -2,\n  corpse: -1,\n  corrupt: -3,\n  corrupted: -3,\n  corrupting: -3,\n  corruption: -3,\n  corrupts: -3,\n  costly: -2,\n  courage: 2,\n  courageous: 2,\n  courageously: 2,\n  courageousness: 2,\n  courteous: 2,\n  courtesy: 2,\n  'cover-up': -3,\n  coward: -2,\n  cowardly: -2,\n  coziness: 2,\n  cramp: -1,\n  crap: -3,\n  crappy: -3,\n  crash: -2,\n  crazier: -2,\n  craziest: -2,\n  crazy: -2,\n  creative: 2,\n  crestfallen: -2,\n  cried: -2,\n  cries: -2,\n  crime: -3,\n  crimes: -3,\n  criminal: -3,\n  criminals: -3,\n  criminate: -3,\n  criminated: -3,\n  criminates: -3,\n  crisis: -3,\n  critic: -2,\n  criticise: -2,\n  criticised: -2,\n  criticises: -2,\n  criticising: -2,\n  criticism: -2,\n  criticize: -2,\n  criticized: -2,\n  criticizes: -2,\n  criticizing: -2,\n  critics: -2,\n  critique: -2,\n  crowding: -1,\n  crude: -1,\n  cruel: -3,\n  cruelty: -3,\n  crush: -1,\n  crushed: -2,\n  crushes: -1,\n  crushing: -1,\n  cry: -1,\n  crying: -2,\n  cunning: 2,\n  cunt: -5,\n  curious: 1,\n  curse: -1,\n  cut: -1,\n  cutback: -2,\n  cutbacks: -2,\n  cute: 2,\n  cuts: -1,\n  cutting: -1,\n  cynic: -2,\n  cynical: -2,\n  cynicism: -2,\n  damage: -3,\n  damaged: -3,\n  damages: -3,\n  damaging: -3,\n  damn: -2,\n  'damn cute': 3,\n  'damn good': 4,\n  damned: -4,\n  damnit: -4,\n  danger: -2,\n  dangerous: -2,\n  dangerously: -2,\n  daredevil: 2,\n  daring: 2,\n  darkest: -2,\n  darkness: -1,\n  dauntless: 2,\n  dazzling: 3,\n  dead: -3,\n  deadening: -2,\n  deadlock: -2,\n  deadly: -3,\n  deafening: -1,\n  dear: 2,\n  dearly: 3,\n  death: -2,\n  deaths: -2,\n  debonair: 2,\n  debt: -2,\n  deceit: -3,\n  deceitful: -3,\n  deceive: -3,\n  deceived: -3,\n  deceives: -3,\n  deceiving: -3,\n  deception: -3,\n  deceptive: -3,\n  decisive: 1,\n  dedicated: 2,\n  dedication: 2,\n  defeat: -2,\n  defeated: -2,\n  defect: -3,\n  defective: -3,\n  defects: -3,\n  defender: 2,\n  defenders: 2,\n  defenseless: -2,\n  defer: -1,\n  deferring: -1,\n  defiant: -1,\n  deficient: -2,\n  deficiency: -2,\n  deficiencies: -2,\n  deficit: -2,\n  deformed: -2,\n  deformities: -2,\n  deformity: -2,\n  defraud: -3,\n  defrauds: -3,\n  deft: 2,\n  defunct: -2,\n  degrade: -2,\n  degraded: -2,\n  degrades: -2,\n  dehumanize: -2,\n  dehumanized: -2,\n  dehumanizes: -2,\n  dehumanizing: -2,\n  deject: -2,\n  dejected: -2,\n  dejecting: -2,\n  dejects: -2,\n  delay: -1,\n  delayed: -1,\n  delectable: 3,\n  delicious: 3,\n  delight: 3,\n  delighted: 3,\n  delightful: 3,\n  delightfully: 3,\n  delighting: 3,\n  delights: 3,\n  demand: -1,\n  demanded: -1,\n  demanding: -1,\n  demands: -1,\n  demonstration: -1,\n  demoralize: -2,\n  demoralized: -2,\n  demoralizes: -2,\n  demoralizing: -2,\n  denial: -2,\n  denials: -2,\n  denied: -2,\n  denier: -2,\n  deniers: -2,\n  denies: -2,\n  denounce: -2,\n  denounces: -2,\n  dent: -2,\n  deny: -2,\n  denying: -2,\n  deplore: -3,\n  deplored: -3,\n  deplores: -3,\n  deploring: -3,\n  deport: -2,\n  deported: -2,\n  deporting: -2,\n  deports: -2,\n  deportation: -2,\n  deportations: -2,\n  depressed: -2,\n  depressing: -2,\n  deprivation: -3,\n  derail: -2,\n  derailed: -2,\n  derails: -2,\n  derelict: -2,\n  deride: -2,\n  derided: -2,\n  derides: -2,\n  deriding: -2,\n  derision: -2,\n  desirable: 2,\n  desire: 1,\n  desired: 2,\n  desirous: 2,\n  despair: -3,\n  despairing: -3,\n  despairs: -3,\n  desperate: -3,\n  desperately: -3,\n  despondent: -3,\n  destroy: -3,\n  destroyed: -3,\n  destroying: -3,\n  destroys: -3,\n  destruction: -3,\n  destructive: -3,\n  detached: -1,\n  detain: -2,\n  detained: -2,\n  detention: -2,\n  deteriorate: -2,\n  deteriorated: -2,\n  deteriorates: -2,\n  deteriorating: -2,\n  determined: 2,\n  deterrent: -2,\n  detract: -1,\n  detracted: -1,\n  detracts: -1,\n  devastate: -2,\n  devastated: -2,\n  devastating: -2,\n  devastation: -2,\n  devastations: -2,\n  devoted: 3,\n  devotion: 2,\n  devotional: 2,\n  diamond: 1,\n  dick: -4,\n  dickhead: -4,\n  die: -3,\n  died: -3,\n  difficult: -1,\n  diffident: -2,\n  dignity: 2,\n  dilemma: -1,\n  dilligence: 2,\n  dipshit: -3,\n  dire: -3,\n  direful: -3,\n  dirt: -2,\n  dirtier: -2,\n  dirtiest: -2,\n  dirty: -2,\n  disabilities: -2,\n  disability: -2,\n  disabling: -1,\n  disadvantage: -2,\n  disadvantaged: -2,\n  disagree: -2,\n  disagreeable: -2,\n  disagreement: -2,\n  disappear: -1,\n  disappeared: -1,\n  disappears: -1,\n  disappoint: -2,\n  disappointed: -2,\n  disappointing: -2,\n  disappointment: -2,\n  disappointments: -2,\n  disappoints: -2,\n  disapproval: -2,\n  disapprovals: -2,\n  disapprove: -2,\n  disapproved: -2,\n  disapproves: -2,\n  disapproving: -2,\n  disaster: -2,\n  disasters: -2,\n  disastrous: -3,\n  disbelieve: -2,\n  discard: -1,\n  discarded: -1,\n  discarding: -1,\n  discards: -1,\n  discernment: 2,\n  discomfort: -2,\n  disconsolate: -2,\n  disconsolation: -2,\n  discontented: -2,\n  discord: -2,\n  discounted: -1,\n  discouraged: -2,\n  discredited: -2,\n  discriminate: -2,\n  discriminated: -2,\n  discriminates: -2,\n  discriminating: -2,\n  discriminatory: -2,\n  disdain: -2,\n  disease: -1,\n  diseases: -1,\n  disgrace: -2,\n  disgraced: -2,\n  disguise: -1,\n  disguised: -1,\n  disguises: -1,\n  disguising: -1,\n  disgust: -3,\n  disgusted: -3,\n  disgustful: -3,\n  disgusting: -3,\n  disheartened: -2,\n  dishonest: -2,\n  disillusioned: -2,\n  disinclined: -2,\n  disjointed: -2,\n  dislike: -2,\n  disliked: -2,\n  dislikes: -2,\n  dismal: -2,\n  dismayed: -2,\n  dismissed: -2,\n  disorder: -2,\n  disorders: -2,\n  disorganized: -2,\n  disoriented: -2,\n  disparage: -2,\n  disparaged: -2,\n  disparages: -2,\n  disparaging: -2,\n  displeased: -2,\n  displeasure: -2,\n  disproportionate: -2,\n  dispute: -2,\n  disputed: -2,\n  disputes: -2,\n  disputing: -2,\n  disqualified: -2,\n  disquiet: -2,\n  disregard: -2,\n  disregarded: -2,\n  disregarding: -2,\n  disregards: -2,\n  disrespect: -2,\n  disrespected: -2,\n  disrupt: -2,\n  disrupted: -2,\n  disrupting: -2,\n  disruption: -2,\n  disruptions: -2,\n  disruptive: -2,\n  disrupts: -2,\n  dissatisfied: -2,\n  distasteful: -2,\n  distinguished: 2,\n  distort: -2,\n  distorted: -2,\n  distorting: -2,\n  distorts: -2,\n  distract: -2,\n  distracted: -2,\n  distraction: -2,\n  distracts: -2,\n  distress: -2,\n  distressed: -2,\n  distresses: -2,\n  distressing: -2,\n  distrust: -3,\n  distrustful: -3,\n  disturb: -2,\n  disturbed: -2,\n  disturbing: -2,\n  disturbs: -2,\n  dithering: -2,\n  diverting: -1,\n  dizzy: -1,\n  dodging: -2,\n  dodgy: -2,\n  'does not work': -3,\n  dolorous: -2,\n  donate: 2,\n  donated: 2,\n  donates: 2,\n  donating: 2,\n  donation: 2,\n  'dont like': -2,\n  doom: -2,\n  doomed: -2,\n  doubt: -1,\n  doubted: -1,\n  doubtful: -1,\n  doubting: -1,\n  doubts: -1,\n  douche: -3,\n  douchebag: -3,\n  dour: -2,\n  downcast: -2,\n  downer: -2,\n  downhearted: -2,\n  downside: -2,\n  drag: -1,\n  dragged: -1,\n  drags: -1,\n  drained: -2,\n  dread: -2,\n  dreaded: -2,\n  dreadful: -3,\n  dreading: -2,\n  dream: 1,\n  dreams: 1,\n  dreary: -2,\n  droopy: -2,\n  drop: -1,\n  dropped: -1,\n  drown: -2,\n  drowned: -2,\n  drowns: -2,\n  drudgery: -2,\n  drunk: -2,\n  dubious: -2,\n  dud: -2,\n  dull: -2,\n  dumb: -3,\n  dumbass: -3,\n  dump: -1,\n  dumped: -2,\n  dumps: -1,\n  dupe: -2,\n  duped: -2,\n  dupery: -2,\n  durable: 2,\n  dying: -3,\n  dysfunction: -2,\n  eager: 2,\n  earnest: 2,\n  ease: 2,\n  easy: 1,\n  ecstatic: 4,\n  eerie: -2,\n  eery: -2,\n  effective: 2,\n  effectively: 2,\n  effectiveness: 2,\n  effortlessly: 2,\n  elated: 3,\n  elation: 3,\n  elegant: 2,\n  elegantly: 2,\n  embarrass: -2,\n  embarrassed: -2,\n  embarrasses: -2,\n  embarrassing: -2,\n  embarrassment: -2,\n  embezzlement: -3,\n  embittered: -2,\n  embrace: 1,\n  emergency: -2,\n  empathetic: 2,\n  empower: 2,\n  empowerment: 2,\n  emptiness: -1,\n  empty: -1,\n  enchanted: 2,\n  encourage: 2,\n  encouraged: 2,\n  encouragement: 2,\n  encourages: 2,\n  encouraging: 2,\n  endorse: 2,\n  endorsed: 2,\n  endorsement: 2,\n  endorses: 2,\n  enemies: -2,\n  enemy: -2,\n  energetic: 2,\n  engage: 1,\n  engages: 1,\n  engrossed: 1,\n  engrossing: 3,\n  enjoy: 2,\n  enjoyable: 2,\n  enjoyed: 2,\n  enjoying: 2,\n  enjoys: 2,\n  enlighten: 2,\n  enlightened: 2,\n  enlightening: 2,\n  enlightens: 2,\n  ennui: -2,\n  enrage: -2,\n  enraged: -2,\n  enrages: -2,\n  enraging: -2,\n  enrapture: 3,\n  enslave: -2,\n  enslaved: -2,\n  enslaves: -2,\n  ensure: 1,\n  ensuring: 1,\n  enterprising: 1,\n  entertaining: 2,\n  enthral: 3,\n  enthusiastic: 3,\n  entitled: 1,\n  entrusted: 2,\n  envies: -1,\n  envious: -2,\n  'environment-friendly': 2,\n  envy: -1,\n  envying: -1,\n  erroneous: -2,\n  error: -2,\n  errors: -2,\n  escape: -1,\n  escapes: -1,\n  escaping: -1,\n  esteem: 2,\n  esteemed: 2,\n  ethical: 2,\n  euphoria: 3,\n  euphoric: 4,\n  evacuate: -1,\n  evacuated: -1,\n  evacuates: -1,\n  evacuating: -1,\n  evacuation: -1,\n  evergreen: 2,\n  evergreens: 2,\n  evergreening: -3,\n  eviction: -1,\n  evil: -3,\n  exacerbate: -2,\n  exacerbated: -2,\n  exacerbates: -2,\n  exacerbating: -2,\n  exaggerate: -2,\n  exaggerated: -2,\n  exaggerates: -2,\n  exaggerating: -2,\n  exasparate: -2,\n  exasperated: -2,\n  exasperates: -2,\n  exasperating: -2,\n  excellence: 3,\n  excellent: 3,\n  excite: 3,\n  excited: 3,\n  excitement: 3,\n  exciting: 3,\n  exclude: -1,\n  excluded: -2,\n  exclusion: -1,\n  exclusive: 2,\n  excruciatingly: -1,\n  excuse: -1,\n  exempt: -1,\n  exhausted: -2,\n  exhilarated: 3,\n  exhilarates: 3,\n  exhilarating: 3,\n  exonerate: 2,\n  exonerated: 2,\n  exonerates: 2,\n  exonerating: 2,\n  expand: 1,\n  expands: 1,\n  expel: -2,\n  expelled: -2,\n  expelling: -2,\n  expels: -2,\n  expertly: 2,\n  exploit: -2,\n  exploited: -2,\n  exploiting: -2,\n  exploits: -2,\n  exploration: 1,\n  explorations: 1,\n  expose: -1,\n  exposed: -1,\n  exposes: -1,\n  exposing: -1,\n  exquisite: 3,\n  extend: 1,\n  extends: 1,\n  extremist: -2,\n  extremists: -2,\n  exuberant: 4,\n  exultant: 3,\n  exultantly: 3,\n  fabulous: 4,\n  fabulously: 4,\n  fad: -2,\n  fag: -3,\n  faggot: -3,\n  faggots: -3,\n  fail: -2,\n  failed: -2,\n  failing: -2,\n  fails: -2,\n  failure: -2,\n  failures: -2,\n  fainthearted: -2,\n  fair: 2,\n  fairness: 2,\n  faith: 1,\n  faithful: 3,\n  fake: -3,\n  faker: -3,\n  fakes: -3,\n  faking: -3,\n  fallen: -2,\n  falling: -1,\n  false: -1,\n  falsely: -2,\n  falsified: -3,\n  falsify: -3,\n  fame: 1,\n  famine: -2,\n  famous: 2,\n  fan: 3,\n  fantastic: 4,\n  farce: -1,\n  fascinate: 3,\n  fascinated: 3,\n  fascinates: 3,\n  fascinating: 3,\n  fascination: 3,\n  fascist: -2,\n  fascists: -2,\n  fatal: -3,\n  fatalities: -3,\n  fatality: -3,\n  fatigue: -2,\n  fatigued: -2,\n  fatigues: -2,\n  fatiguing: -2,\n  favor: 2,\n  favorable: 2,\n  favorably: 2,\n  favored: 2,\n  favorite: 2,\n  favorited: 2,\n  favorites: 2,\n  favors: 2,\n  favour: 2,\n  favourable: 2,\n  favourably: 2,\n  favoured: 2,\n  favourite: 2,\n  favourited: 2,\n  favourites: 2,\n  favours: 2,\n  fear: -2,\n  fearful: -2,\n  fearfully: -2,\n  fearing: -2,\n  fearless: 2,\n  fearlessness: 2,\n  fearsome: -2,\n  'fed up': -3,\n  feeble: -2,\n  feeling: 1,\n  felonies: -3,\n  felony: -3,\n  fertile: 2,\n  fervent: 2,\n  fervid: 2,\n  festive: 2,\n  fever: -2,\n  fiasco: -3,\n  fidgety: -2,\n  fight: -1,\n  fighting: -2,\n  fine: 2,\n  fines: -2,\n  finest: 3,\n  fire: -2,\n  fired: -2,\n  firing: -2,\n  fit: 1,\n  fitness: 1,\n  filth: -2,\n  filthy: -2,\n  flagship: 2,\n  flaw: -2,\n  flawed: -3,\n  flawless: 2,\n  flawlessly: 2,\n  flaws: -2,\n  flees: -1,\n  flop: -2,\n  flops: -2,\n  flu: -2,\n  flustered: -2,\n  focused: 2,\n  fond: 2,\n  fondness: 2,\n  fool: -2,\n  foolish: -2,\n  fools: -2,\n  forbid: -1,\n  forbidden: -2,\n  forbidding: -2,\n  forced: -1,\n  foreclosure: -2,\n  foreclosures: -2,\n  forefront: 1,\n  forget: -1,\n  forgetful: -2,\n  forgettable: -1,\n  forgive: 1,\n  forgiving: 1,\n  forgot: -1,\n  forgotten: -1,\n  fortune: 2,\n  fortunate: 2,\n  fortunately: 2,\n  foul: -3,\n  frantic: -1,\n  fraud: -4,\n  frauds: -4,\n  fraudster: -4,\n  fraudsters: -4,\n  fraudulence: -4,\n  fraudulent: -4,\n  freak: -2,\n  free: 1,\n  freedom: 2,\n  freedoms: 2,\n  frenzy: -3,\n  fresh: 1,\n  friend: 1,\n  friendliness: 2,\n  friendly: 2,\n  friendship: 2,\n  fright: -2,\n  frightened: -2,\n  frightening: -3,\n  frikin: -2,\n  frisky: 2,\n  frowning: -1,\n  fruitless: -2,\n  frustrate: -2,\n  frustrated: -2,\n  frustrates: -2,\n  frustrating: -2,\n  frustration: -2,\n  ftw: 3,\n  fuck: -4,\n  fucked: -4,\n  fucker: -4,\n  fuckers: -4,\n  fuckface: -4,\n  fuckhead: -4,\n  fuckin: -4,\n  fucking: -4,\n  'fucking amazing': 4,\n  'fucking beautiful': 4,\n  'fucking cute': 4,\n  'fucking fantastic': 4,\n  'fucking good': 4,\n  'fucking great': 4,\n  'fucking hot': 2,\n  'fucking love': 4,\n  'fucking loves': 4,\n  'fucking perfect': 4,\n  fucktard: -4,\n  fud: -3,\n  fuked: -4,\n  fuking: -4,\n  fulfill: 2,\n  fulfilled: 2,\n  fulfillment: 2,\n  fulfills: 2,\n  fuming: -2,\n  fun: 4,\n  funeral: -1,\n  funerals: -1,\n  funky: 2,\n  funnier: 4,\n  funny: 4,\n  furious: -3,\n  futile: -2,\n  gag: -2,\n  gagged: -2,\n  gain: 2,\n  gained: 2,\n  gaining: 2,\n  gains: 2,\n  gallant: 3,\n  gallantly: 3,\n  gallantry: 3,\n  'game-changing': 3,\n  garbage: -1,\n  gem: 3,\n  generous: 2,\n  generously: 2,\n  genial: 3,\n  ghastly: -2,\n  ghost: -1,\n  giddy: -2,\n  gift: 2,\n  glad: 3,\n  glamorous: 3,\n  glamourous: 3,\n  glee: 3,\n  gleeful: 3,\n  gloom: -1,\n  gloomy: -2,\n  glorious: 2,\n  glory: 2,\n  glum: -2,\n  god: 1,\n  goddamn: -3,\n  godsend: 4,\n  gold: 2,\n  good: 3,\n  goodlooking: 3,\n  goodmorning: 1,\n  goodness: 3,\n  goodwill: 3,\n  goofiness: -2,\n  goofy: -2,\n  grace: 1,\n  graceful: 2,\n  gracious: 3,\n  grand: 3,\n  grant: 1,\n  granted: 1,\n  granting: 1,\n  grants: 1,\n  grateful: 3,\n  gratification: 2,\n  grave: -2,\n  gray: -1,\n  grisly: -2,\n  gr8: 3,\n  great: 3,\n  greater: 3,\n  greatest: 3,\n  greed: -3,\n  greedy: -2,\n  'green wash': -3,\n  'green washing': -3,\n  greenwash: -3,\n  greenwasher: -3,\n  greenwashers: -3,\n  greenwashing: -3,\n  greet: 1,\n  greeted: 1,\n  greeting: 1,\n  greetings: 2,\n  greets: 1,\n  grey: -1,\n  grief: -2,\n  grieved: -2,\n  grim: -2,\n  gripping: 2,\n  groan: -2,\n  groaned: -2,\n  groaning: -2,\n  groans: -2,\n  gross: -2,\n  growing: 1,\n  growth: 2,\n  growths: 2,\n  gruesome: -3,\n  guarantee: 1,\n  guilt: -3,\n  guilty: -3,\n  gullibility: -2,\n  gullible: -2,\n  gun: -1,\n  ha: 2,\n  hacked: -1,\n  haha: 3,\n  hahaha: 3,\n  hahahah: 3,\n  hail: 2,\n  hailed: 2,\n  hallelujah: 3,\n  handpicked: 1,\n  handsome: 3,\n  hapless: -2,\n  haplessness: -2,\n  happiest: 3,\n  happiness: 3,\n  happy: 3,\n  harass: -3,\n  harassed: -3,\n  harasses: -3,\n  harassing: -3,\n  harassment: -3,\n  hard: -1,\n  hardier: 2,\n  hardship: -2,\n  hardy: 2,\n  harm: -2,\n  harmed: -2,\n  harmful: -2,\n  harming: -2,\n  harmony: 2,\n  harmonious: 2,\n  harmoniously: 2,\n  harms: -2,\n  harried: -2,\n  harsh: -2,\n  harsher: -2,\n  harshest: -2,\n  harshly: -2,\n  hate: -3,\n  hated: -3,\n  hater: -3,\n  haters: -3,\n  hates: -3,\n  hating: -3,\n  hatred: -3,\n  haunt: -1,\n  haunted: -2,\n  haunting: 1,\n  haunts: -1,\n  havoc: -2,\n  hazardous: -3,\n  headache: -2,\n  healthy: 2,\n  heartbreaking: -3,\n  heartbroken: -3,\n  heartfelt: 3,\n  heartless: -2,\n  heartwarming: 3,\n  heaven: 2,\n  heavenly: 4,\n  heavyhearted: -2,\n  hehe: 2,\n  hell: -4,\n  hellish: -2,\n  help: 2,\n  helpful: 2,\n  helping: 2,\n  helpless: -2,\n  helps: 2,\n  hero: 2,\n  heroes: 2,\n  heroic: 3,\n  hesitant: -2,\n  hesitate: -2,\n  hid: -1,\n  hide: -1,\n  hideous: -3,\n  hides: -1,\n  hiding: -1,\n  highlight: 2,\n  hilarious: 2,\n  hinder: -2,\n  hindrance: -2,\n  hoax: -2,\n  hollow: -1,\n  homeless: -2,\n  homesick: -2,\n  homicide: -2,\n  homicides: -2,\n  honest: 2,\n  honor: 2,\n  honored: 2,\n  honoring: 2,\n  honour: 2,\n  honoured: 2,\n  honouring: 2,\n  hooligan: -2,\n  hooliganism: -2,\n  hooligans: -2,\n  hope: 2,\n  hopeful: 2,\n  hopefully: 2,\n  hopeless: -2,\n  hopelessness: -2,\n  hopes: 2,\n  hoping: 2,\n  horrendous: -3,\n  horrid: -3,\n  horrible: -3,\n  horrific: -3,\n  horrified: -3,\n  hospitalized: -2,\n  hostile: -2,\n  huckster: -2,\n  hug: 2,\n  huge: 1,\n  hugs: 2,\n  humane: 2,\n  humble: 1,\n  humbug: -2,\n  humerous: 3,\n  humiliated: -3,\n  humiliation: -3,\n  humor: 2,\n  humorous: 2,\n  humour: 2,\n  humourous: 2,\n  hunger: -2,\n  hurrah: 5,\n  hurt: -2,\n  hurting: -2,\n  hurts: -2,\n  hypocritical: -2,\n  hysteria: -3,\n  hysterical: -3,\n  hysterics: -3,\n  icky: -3,\n  idiocy: -3,\n  idiot: -3,\n  idiotic: -3,\n  ignorance: -2,\n  ignorant: -2,\n  ignore: -1,\n  ignored: -2,\n  ignores: -1,\n  ill: -2,\n  'ill-fated': -2,\n  illegal: -3,\n  illegally: -3,\n  illegitimate: -3,\n  illiteracy: -2,\n  illness: -2,\n  illnesses: -2,\n  illogical: -2,\n  imaginative: 2,\n  imbecile: -3,\n  immobilized: -1,\n  immortal: 2,\n  immune: 1,\n  impair: -2,\n  impaired: -2,\n  impairing: -2,\n  impairment: -2,\n  impairs: -2,\n  impatient: -2,\n  impeachment: -3,\n  impeachments: -3,\n  impede: -2,\n  impeded: -2,\n  impedes: -2,\n  impeding: -2,\n  impedingly: -2,\n  imperfect: -2,\n  importance: 2,\n  important: 2,\n  impose: -1,\n  imposed: -1,\n  imposes: -1,\n  imposing: -1,\n  imposter: -2,\n  impotent: -2,\n  impress: 3,\n  impressed: 3,\n  impresses: 3,\n  impressive: 3,\n  imprisoned: -2,\n  imprisonment: -2,\n  improper: -2,\n  improperly: -2,\n  improve: 2,\n  improved: 2,\n  improvement: 2,\n  improves: 2,\n  improving: 2,\n  inability: -2,\n  inaction: -2,\n  inadequate: -2,\n  inadvertently: -2,\n  inappropriate: -2,\n  incapable: -2,\n  incapacitated: -2,\n  incapacitates: -2,\n  incapacitating: -2,\n  incense: -2,\n  incensed: -2,\n  incenses: -2,\n  incensing: -2,\n  incoherent: -2,\n  incompetence: -2,\n  incompetent: -2,\n  incomplete: -1,\n  incomprehensible: -2,\n  inconsiderate: -2,\n  inconvenience: -2,\n  inconvenient: -2,\n  increase: 1,\n  increased: 1,\n  indecisive: -2,\n  indestructible: 2,\n  indicted: -2,\n  indifference: -2,\n  indifferent: -2,\n  indignant: -2,\n  indignation: -2,\n  indoctrinate: -2,\n  indoctrinated: -2,\n  indoctrinates: -2,\n  indoctrinating: -2,\n  inediable: -2,\n  inexorable: -3,\n  inexcusable: -3,\n  ineffective: -2,\n  ineffectively: -2,\n  ineffectual: -2,\n  inefficiency: -2,\n  inefficient: -2,\n  inefficiently: -2,\n  inept: -2,\n  ineptitude: -2,\n  infantile: -2,\n  infantilized: -2,\n  infatuated: 2,\n  infatuation: 2,\n  infect: -2,\n  infected: -2,\n  infecting: -2,\n  infection: -2,\n  infections: -2,\n  infectious: -2,\n  infects: -2,\n  inferior: -2,\n  infest: -2,\n  infested: -2,\n  infesting: -2,\n  infests: -2,\n  inflamed: -2,\n  inflict: -2,\n  inflicted: -2,\n  inflicting: -2,\n  inflicts: -2,\n  influential: 2,\n  infract: -2,\n  infracted: -2,\n  infracting: -2,\n  infracts: -2,\n  infringement: -2,\n  infuriate: -2,\n  infuriated: -2,\n  infuriates: -2,\n  infuriating: -2,\n  inhibit: -1,\n  inhuman: -2,\n  injured: -2,\n  injuries: -2,\n  injury: -2,\n  injustice: -2,\n  innovate: 1,\n  innovates: 1,\n  innovation: 1,\n  innovative: 2,\n  inoperative: -2,\n  inquisition: -2,\n  inquisitive: 2,\n  insane: -2,\n  insanity: -2,\n  insecure: -2,\n  insensitive: -2,\n  insensitivity: -2,\n  insignificant: -2,\n  insipid: -2,\n  insolvent: -2,\n  insomnia: -2,\n  inspiration: 2,\n  inspirational: 2,\n  inspire: 2,\n  inspired: 2,\n  inspires: 2,\n  inspiring: 3,\n  insufficiency: -2,\n  insufficient: -2,\n  insufficiently: -2,\n  insult: -2,\n  insulted: -2,\n  insulting: -2,\n  insults: -2,\n  intact: 2,\n  integrity: 2,\n  intelligent: 2,\n  intense: 1,\n  interest: 1,\n  interested: 2,\n  interesting: 2,\n  interests: 1,\n  interrogated: -2,\n  interrupt: -2,\n  interrupted: -2,\n  interrupting: -2,\n  interruption: -2,\n  interrupts: -2,\n  intimacy: 2,\n  intimidate: -2,\n  intimidated: -2,\n  intimidates: -2,\n  intimidating: -2,\n  intimidation: -2,\n  intransigence: -2,\n  intransigency: -2,\n  intricate: 2,\n  intrigues: 1,\n  invasion: -1,\n  invincible: 2,\n  invite: 1,\n  inviting: 1,\n  invulnerable: 2,\n  irate: -3,\n  ironic: -1,\n  irony: -1,\n  irrational: -1,\n  irreparable: -2,\n  irreproducible: -2,\n  irresistible: 2,\n  irresistibly: 2,\n  irresolute: -2,\n  irresponsible: -2,\n  irresponsibly: -2,\n  irreversible: -1,\n  irreversibly: -1,\n  irritate: -3,\n  irritated: -3,\n  irritates: -3,\n  irritating: -3,\n  isolated: -1,\n  itchy: -2,\n  jackass: -4,\n  jackasses: -4,\n  jailed: -2,\n  jaunty: 2,\n  jealous: -2,\n  jealousy: -2,\n  jeopardy: -2,\n  jerk: -3,\n  jesus: 1,\n  jewel: 1,\n  jewels: 1,\n  jocular: 2,\n  join: 1,\n  joke: 2,\n  jokes: 2,\n  jolly: 2,\n  jovial: 2,\n  joy: 3,\n  joyful: 3,\n  joyfully: 3,\n  joyless: -2,\n  joyous: 3,\n  jubilant: 3,\n  jumpy: -1,\n  justice: 2,\n  justifiably: 2,\n  justified: 2,\n  keen: 1,\n  kickback: -3,\n  kickbacks: -3,\n  kidnap: -2,\n  kidnapped: -2,\n  kidnapping: -2,\n  kidnappings: -2,\n  kidnaps: -2,\n  kill: -3,\n  killed: -3,\n  killing: -3,\n  kills: -3,\n  kind: 2,\n  'kind of': 0,\n  kinder: 2,\n  kindness: 2,\n  kiss: 2,\n  kudos: 3,\n  lack: -2,\n  lackadaisical: -2,\n  lag: -1,\n  lagged: -2,\n  lagging: -2,\n  lags: -2,\n  lame: -2,\n  landmark: 2,\n  lapse: -1,\n  lapsed: -1,\n  laugh: 1,\n  laughed: 1,\n  laughing: 1,\n  laughs: 1,\n  laughting: 1,\n  launched: 1,\n  lawl: 3,\n  lawsuit: -2,\n  lawsuits: -2,\n  lazy: -1,\n  leadership: 1,\n  leading: 2,\n  leak: -1,\n  leaked: -1,\n  leave: -1,\n  legal: 1,\n  legally: 1,\n  lenient: 1,\n  lethal: -2,\n  lethality: -2,\n  lethargic: -2,\n  lethargy: -2,\n  liar: -3,\n  liars: -3,\n  libelous: -2,\n  lied: -2,\n  lifeless: -1,\n  lifesaver: 4,\n  lighthearted: 1,\n  likable: 2,\n  like: 2,\n  likeable: 2,\n  liked: 2,\n  likers: 2,\n  likes: 2,\n  liking: 2,\n  limitation: -1,\n  limited: -1,\n  limits: -1,\n  litigation: -1,\n  litigious: -2,\n  lively: 2,\n  livid: -2,\n  lmao: 4,\n  lmfao: 4,\n  loathe: -3,\n  loathed: -3,\n  loathes: -3,\n  loathing: -3,\n  loathsome: -3,\n  lobbied: -2,\n  lobby: -2,\n  lobbying: -2,\n  lobbyist: -2,\n  lobbyists: -2,\n  lol: 3,\n  lolol: 4,\n  lololol: 4,\n  lolololol: 4,\n  lonely: -2,\n  lonesome: -2,\n  longing: -1,\n  lool: 3,\n  loom: -1,\n  loomed: -1,\n  looming: -1,\n  looms: -1,\n  loool: 3,\n  looool: 3,\n  loose: -3,\n  looses: -3,\n  loser: -3,\n  losing: -3,\n  loss: -3,\n  losses: -3,\n  lost: -3,\n  lousy: -2,\n  lovable: 3,\n  love: 3,\n  loved: 3,\n  lovelies: 3,\n  lovely: 3,\n  loves: 3,\n  loving: 2,\n  'loving-kindness': 3,\n  lowest: -1,\n  loyal: 3,\n  loyalty: 3,\n  luck: 3,\n  luckily: 3,\n  lucky: 3,\n  lucrative: 3,\n  ludicrous: -3,\n  lugubrious: -2,\n  lunatic: -3,\n  lunatics: -3,\n  lurk: -1,\n  lurking: -1,\n  lurks: -1,\n  luxury: 2,\n  macabre: -2,\n  mad: -3,\n  maddening: -3,\n  'made-up': -1,\n  madly: -3,\n  madness: -3,\n  magnificent: 3,\n  maladaption: -2,\n  maldevelopment: -2,\n  maltreatment: -2,\n  mandatory: -1,\n  manipulated: -1,\n  manipulating: -1,\n  manipulation: -1,\n  manslaughter: -3,\n  marvel: 3,\n  marvelous: 3,\n  marvels: 3,\n  masterpiece: 4,\n  masterpieces: 4,\n  matter: 1,\n  matters: 1,\n  mature: 2,\n  meaningful: 2,\n  meaningless: -2,\n  medal: 3,\n  mediocrity: -3,\n  meditative: 1,\n  melancholy: -2,\n  memorable: 1,\n  memoriam: -2,\n  menace: -2,\n  menaced: -2,\n  menaces: -2,\n  mercy: 2,\n  merry: 3,\n  mesmerizing: 3,\n  mess: -2,\n  messed: -2,\n  'messing up': -2,\n  methodical: 2,\n  methodically: 2,\n  mindless: -2,\n  miracle: 4,\n  mirth: 3,\n  mirthful: 3,\n  mirthfully: 3,\n  misbehave: -2,\n  misbehaved: -2,\n  misbehaves: -2,\n  misbehaving: -2,\n  misbranding: -3,\n  miscast: -2,\n  mischief: -1,\n  mischiefs: -1,\n  misclassified: -2,\n  misclassifies: -2,\n  misclassify: -2,\n  misconduct: -2,\n  misconducted: -2,\n  misconducting: -2,\n  misconducts: -2,\n  miserable: -3,\n  miserably: -3,\n  misery: -2,\n  misfire: -2,\n  misfortune: -2,\n  misgiving: -2,\n  misinformation: -2,\n  misinformed: -2,\n  misinterpreted: -2,\n  mislead: -3,\n  misleaded: -3,\n  misleading: -3,\n  misleads: -3,\n  misplace: -2,\n  misplaced: -2,\n  misplaces: -2,\n  misplacing: -2,\n  mispricing: -3,\n  misread: -1,\n  misreport: -2,\n  misreported: -2,\n  misreporting: -2,\n  misreports: -2,\n  misrepresent: -2,\n  misrepresentation: -2,\n  misrepresentations: -2,\n  misrepresented: -2,\n  misrepresenting: -2,\n  misrepresents: -2,\n  miss: -2,\n  missed: -2,\n  missing: -2,\n  mistake: -2,\n  mistaken: -2,\n  mistakes: -2,\n  mistaking: -2,\n  misunderstand: -2,\n  misunderstanding: -2,\n  misunderstands: -2,\n  misunderstood: -2,\n  misuse: -2,\n  misused: -2,\n  misuses: -2,\n  misusing: -2,\n  moan: -2,\n  moaned: -2,\n  moaning: -2,\n  moans: -2,\n  mock: -2,\n  mocked: -2,\n  mocking: -2,\n  mocks: -2,\n  modernize: 2,\n  modernized: 2,\n  modernizes: 2,\n  modernizing: 2,\n  mongering: -2,\n  monopolize: -2,\n  monopolized: -2,\n  monopolizes: -2,\n  monopolizing: -2,\n  monotone: -1,\n  moody: -1,\n  mope: -1,\n  moping: -1,\n  moron: -3,\n  motherfucker: -5,\n  motherfucking: -5,\n  motivate: 1,\n  motivated: 2,\n  motivating: 2,\n  motivation: 1,\n  mourn: -2,\n  mourned: -2,\n  mournful: -2,\n  mourning: -2,\n  mourns: -2,\n  muddy: -2,\n  mumpish: -2,\n  murder: -2,\n  murderer: -2,\n  murdering: -3,\n  murderous: -3,\n  murders: -2,\n  murky: -2,\n  myth: -1,\n  n00b: -2,\n  naive: -2,\n  narcissism: -2,\n  nasty: -3,\n  natural: 1,\n  naïve: -2,\n  needy: -2,\n  negative: -2,\n  negativity: -2,\n  neglect: -2,\n  neglected: -2,\n  neglecting: -2,\n  neglects: -2,\n  nerves: -1,\n  nervous: -2,\n  nervously: -2,\n  nice: 3,\n  nifty: 2,\n  niggas: -5,\n  nigger: -5,\n  no: -1,\n  'no fun': -3,\n  noble: 2,\n  noblest: 2,\n  noisy: -1,\n  'non-approved': -2,\n  nonsense: -2,\n  noob: -2,\n  nosey: -2,\n  'not good': -2,\n  'not working': -3,\n  notable: 2,\n  noticeable: 2,\n  notorious: -2,\n  novel: 2,\n  numb: -1,\n  nurturing: 2,\n  nuts: -3,\n  obliterate: -2,\n  obliterated: -2,\n  obnoxious: -3,\n  obscene: -2,\n  obscenity: -2,\n  obsessed: 2,\n  obsolete: -2,\n  obstacle: -2,\n  obstacles: -2,\n  obstinate: -2,\n  obstruct: -2,\n  obstructed: -2,\n  obstructing: -2,\n  obstruction: -2,\n  obstructs: -2,\n  odd: -2,\n  offence: -2,\n  offences: -2,\n  offend: -2,\n  offended: -2,\n  offender: -2,\n  offending: -2,\n  offends: -2,\n  offense: -2,\n  offenses: -2,\n  offensive: -2,\n  offensively: -2,\n  offline: -1,\n  oks: 2,\n  ominous: 3,\n  'once-in-a-lifetime': 3,\n  oops: -2,\n  opportunities: 2,\n  opportunity: 2,\n  oppressed: -2,\n  oppression: -2,\n  oppressions: -2,\n  oppressive: -2,\n  optimism: 2,\n  optimistic: 2,\n  optionless: -2,\n  ostracize: -2,\n  ostracized: -2,\n  ostracizes: -2,\n  ouch: -2,\n  outage: -2,\n  outages: -2,\n  outbreak: -2,\n  outbreaks: -2,\n  outcry: -2,\n  outmaneuvered: -2,\n  outnumbered: -2,\n  outrage: -3,\n  outraged: -3,\n  outrageous: -3,\n  outreach: 2,\n  outstanding: 5,\n  overjoyed: 4,\n  overload: -1,\n  overlooked: -1,\n  overprotective: -2,\n  overran: -2,\n  overreact: -2,\n  overreacted: -2,\n  overreacting: -2,\n  overreaction: -2,\n  overreacts: -2,\n  oversell: -2,\n  overselling: -2,\n  oversells: -2,\n  oversight: -1,\n  oversimplification: -2,\n  oversimplified: -2,\n  oversimplifies: -2,\n  oversimplify: -2,\n  oversold: -2,\n  overstatement: -2,\n  overstatements: -2,\n  overweight: -1,\n  overwrought: -3,\n  oxymoron: -1,\n  pain: -2,\n  pained: -2,\n  painful: -2,\n  panic: -3,\n  panicked: -3,\n  panics: -3,\n  paradise: 3,\n  paradox: -1,\n  pardon: 2,\n  pardoned: 2,\n  pardoning: 2,\n  pardons: 2,\n  parley: -1,\n  passion: 1,\n  passionate: 2,\n  passive: -1,\n  passively: -1,\n  pathetic: -2,\n  pay: -1,\n  peace: 2,\n  peaceful: 2,\n  peacefully: 2,\n  penalize: -2,\n  penalized: -2,\n  penalizes: -2,\n  penalizing: -2,\n  penalty: -2,\n  pensive: -1,\n  perfect: 3,\n  perfected: 2,\n  perfection: 3,\n  perfectly: 3,\n  perfects: 2,\n  peril: -2,\n  perjury: -3,\n  perpetrated: -2,\n  perpetrator: -2,\n  perpetrators: -2,\n  perplexed: -2,\n  persecute: -2,\n  persecuted: -2,\n  persecutes: -2,\n  persecuting: -2,\n  perturbed: -2,\n  pervert: -3,\n  pesky: -2,\n  pessimism: -2,\n  pessimistic: -2,\n  petrified: -2,\n  philanthropy: 2,\n  phobic: -2,\n  picturesque: 2,\n  pileup: -1,\n  pillage: -2,\n  pique: -2,\n  piqued: -2,\n  piss: -4,\n  pissed: -4,\n  pissing: -3,\n  piteous: -2,\n  pitied: -1,\n  pity: -2,\n  plague: -3,\n  plagued: -3,\n  plagues: -3,\n  plaguing: -3,\n  playful: 2,\n  pleasant: 3,\n  please: 1,\n  pleased: 3,\n  pleasurable: 3,\n  pleasure: 3,\n  plodding: -2,\n  poignant: 2,\n  pointless: -2,\n  poised: -2,\n  poison: -2,\n  poisoned: -2,\n  poisons: -2,\n  polished: 2,\n  polite: 2,\n  politeness: 2,\n  pollutant: -2,\n  pollute: -2,\n  polluted: -2,\n  polluter: -2,\n  polluters: -2,\n  pollutes: -2,\n  pollution: -2,\n  poor: -2,\n  poorer: -2,\n  poorest: -2,\n  poorly: -2,\n  popular: 3,\n  popularity: 3,\n  positive: 2,\n  positively: 2,\n  possessive: -2,\n  'post-traumatic': -2,\n  postpone: -1,\n  postponed: -1,\n  postpones: -1,\n  postponing: -1,\n  poverty: -1,\n  powerful: 2,\n  powerless: -2,\n  praise: 3,\n  praised: 3,\n  praises: 3,\n  praising: 3,\n  pray: 1,\n  praying: 1,\n  prays: 1,\n  prblm: -2,\n  prblms: -2,\n  predatory: -2,\n  prepared: 1,\n  pressure: -1,\n  pressured: -2,\n  pretend: -1,\n  pretending: -1,\n  pretends: -1,\n  pretty: 1,\n  prevent: -1,\n  prevented: -1,\n  preventing: -1,\n  prevents: -1,\n  prick: -5,\n  prison: -2,\n  prisoner: -2,\n  prisoners: -2,\n  privileged: 2,\n  proactive: 2,\n  problem: -2,\n  problems: -2,\n  profit: 2,\n  profitable: 2,\n  profiteer: -2,\n  profits: 2,\n  progress: 2,\n  prohibit: -1,\n  prohibits: -1,\n  prominent: 2,\n  promise: 1,\n  promised: 1,\n  promises: 1,\n  promote: 1,\n  promoted: 1,\n  promotes: 1,\n  promoting: 1,\n  promptly: 1,\n  propaganda: -2,\n  prosecute: -1,\n  prosecuted: -2,\n  prosecutes: -1,\n  prosecution: -1,\n  prospect: 1,\n  prospects: 1,\n  prosperity: 3,\n  prosperous: 3,\n  protect: 1,\n  protected: 1,\n  protects: 1,\n  protest: -2,\n  protesters: -2,\n  protesting: -2,\n  protests: -2,\n  proud: 2,\n  proudly: 2,\n  provoke: -1,\n  provoked: -1,\n  provokes: -1,\n  provoking: -1,\n  prudence: 2,\n  pseudoscience: -3,\n  psychopathic: -2,\n  punish: -2,\n  punished: -2,\n  punishes: -2,\n  punishing: -2,\n  punitive: -2,\n  pure: 1,\n  purest: 1,\n  purposeful: 2,\n  pushy: -1,\n  puzzled: -2,\n  quaking: -2,\n  qualities: 2,\n  quality: 2,\n  questionable: -2,\n  questioned: -1,\n  questioning: -1,\n  racism: -3,\n  racist: -3,\n  racists: -3,\n  rage: -2,\n  rageful: -2,\n  rainy: -1,\n  rant: -3,\n  ranter: -3,\n  ranters: -3,\n  rants: -3,\n  rape: -4,\n  raped: -4,\n  rapist: -4,\n  rapture: 2,\n  raptured: 2,\n  raptures: 2,\n  rapturous: 4,\n  rash: -2,\n  ratified: 2,\n  reach: 1,\n  reached: 1,\n  reaches: 1,\n  reaching: 1,\n  reassure: 1,\n  reassured: 1,\n  reassures: 1,\n  reassuring: 2,\n  rebel: -2,\n  rebellion: -2,\n  rebels: -2,\n  recession: -2,\n  reckless: -2,\n  recognition: 2,\n  recommend: 2,\n  recommended: 2,\n  recommends: 2,\n  redeemed: 2,\n  refine: 1,\n  refined: 1,\n  refines: 1,\n  refreshingly: 2,\n  refuse: -2,\n  refused: -2,\n  refuses: -2,\n  refusing: -2,\n  regret: -2,\n  regretful: -2,\n  regrets: -2,\n  regretted: -2,\n  regretting: -2,\n  reigning: 1,\n  reject: -1,\n  rejected: -1,\n  rejecting: -1,\n  rejection: -2,\n  rejects: -1,\n  rejoice: 4,\n  rejoiced: 4,\n  rejoices: 4,\n  rejoicing: 4,\n  relaxed: 2,\n  relentless: -1,\n  reliability: 2,\n  reliable: 2,\n  reliably: 2,\n  reliant: 2,\n  relieve: 1,\n  relieved: 2,\n  relieves: 1,\n  relieving: 2,\n  relishing: 2,\n  remarkable: 2,\n  remorse: -2,\n  repellent: -2,\n  repercussion: -2,\n  repercussions: -2,\n  reprimand: -2,\n  reprimanded: -2,\n  reprimanding: -2,\n  reprimands: -2,\n  repulse: -1,\n  repulsed: -2,\n  repulsive: -2,\n  rescue: 2,\n  rescued: 2,\n  rescues: 2,\n  resentful: -2,\n  resign: -1,\n  resigned: -1,\n  resigning: -1,\n  resigns: -1,\n  resolute: 2,\n  resolution: 2,\n  resolve: 2,\n  resolved: 2,\n  resolves: 2,\n  resolving: 2,\n  respect: 2,\n  respected: 2,\n  respects: 2,\n  responsibility: 1,\n  responsible: 2,\n  responsive: 2,\n  restful: 2,\n  restless: -2,\n  restore: 1,\n  restored: 1,\n  restores: 1,\n  restoring: 1,\n  restrict: -2,\n  restricted: -2,\n  restricting: -2,\n  restriction: -2,\n  restrictive: -1,\n  restricts: -2,\n  retained: -1,\n  retard: -2,\n  retarded: -2,\n  retreat: -1,\n  revenge: -2,\n  revengeful: -2,\n  revered: 2,\n  revive: 2,\n  revives: 2,\n  revolting: -2,\n  reward: 2,\n  rewarded: 2,\n  rewarding: 2,\n  rewards: 2,\n  rich: 2,\n  richly: 2,\n  ridiculous: -3,\n  rig: -1,\n  rigged: -1,\n  'right direction': 3,\n  righteousness: 2,\n  rightful: 2,\n  rightfully: 2,\n  rigorous: 3,\n  rigorously: 3,\n  riot: -2,\n  riots: -2,\n  rise: 1,\n  rises: 1,\n  risk: -2,\n  risks: -2,\n  risky: -2,\n  riveting: 3,\n  rob: -2,\n  robber: -2,\n  robed: -2,\n  robing: -2,\n  robs: -2,\n  robust: 2,\n  rofl: 4,\n  roflcopter: 4,\n  roflmao: 4,\n  romance: 2,\n  romantical: 2,\n  romantically: 2,\n  rose: 1,\n  rotfl: 4,\n  rotflmfao: 4,\n  rotflol: 4,\n  rotten: -3,\n  rude: -2,\n  ruin: -2,\n  ruined: -2,\n  ruining: -2,\n  ruins: -2,\n  sabotage: -2,\n  sad: -2,\n  sadden: -2,\n  saddened: -2,\n  sadly: -2,\n  safe: 1,\n  safely: 1,\n  safer: 2,\n  safety: 1,\n  salient: 1,\n  salute: 2,\n  saluted: 2,\n  salutes: 2,\n  saluting: 2,\n  salvation: 2,\n  sappy: -1,\n  sarcastic: -2,\n  satisfied: 2,\n  savange: -2,\n  savanges: -2,\n  save: 2,\n  saved: 2,\n  savings: 1,\n  scam: -2,\n  scams: -2,\n  scandal: -3,\n  scandalous: -3,\n  scandals: -3,\n  scapegoat: -2,\n  scapegoats: -2,\n  scare: -2,\n  scared: -2,\n  scar: -2,\n  scars: -2,\n  scary: -2,\n  sceptical: -2,\n  scold: -2,\n  scoop: 3,\n  scorn: -2,\n  scornful: -2,\n  scream: -2,\n  screamed: -2,\n  screaming: -2,\n  screams: -2,\n  screwed: -2,\n  'screwed up': -3,\n  scum: -3,\n  scumbag: -4,\n  seamless: 2,\n  seamlessly: 2,\n  secure: 2,\n  secured: 2,\n  secures: 2,\n  sedition: -2,\n  seditious: -2,\n  seduced: -1,\n  'self-abuse': -2,\n  'self-confident': 2,\n  'self-contradictory': -2,\n  'self-deluded': -2,\n  selfish: -3,\n  selfishness: -3,\n  sentence: -2,\n  sentenced: -2,\n  sentences: -2,\n  sentencing: -2,\n  serene: 2,\n  settlement: 1,\n  settlements: 1,\n  severe: -2,\n  severely: -2,\n  sexist: -2,\n  sexistic: -2,\n  sexy: 3,\n  shaky: -2,\n  shame: -2,\n  shamed: -2,\n  shameful: -2,\n  share: 1,\n  shared: 1,\n  shares: 1,\n  shattered: -2,\n  shit: -4,\n  shithead: -4,\n  shitty: -3,\n  shock: -2,\n  shocked: -2,\n  shocking: -2,\n  shocks: -2,\n  shoody: -2,\n  shoot: -1,\n  'short-sighted': -2,\n  'short-sightedness': -2,\n  shortage: -2,\n  shortages: -2,\n  shrew: -4,\n  shy: -1,\n  sick: -2,\n  sickness: -2,\n  'side-effect': -2,\n  'side-effects': -2,\n  sigh: -2,\n  significance: 1,\n  significant: 1,\n  silencing: -1,\n  silly: -1,\n  simplicity: 1,\n  sin: -2,\n  sincere: 2,\n  sincerely: 2,\n  sincerest: 2,\n  sincerity: 2,\n  sinful: -3,\n  singleminded: -2,\n  sinister: -2,\n  sins: -2,\n  skeptic: -2,\n  skeptical: -2,\n  skepticism: -2,\n  skeptics: -2,\n  slam: -2,\n  slash: -2,\n  slashed: -2,\n  slashes: -2,\n  slashing: -2,\n  slave: -3,\n  slavery: -3,\n  slaves: -3,\n  sleeplessness: -2,\n  slick: 2,\n  slicker: 2,\n  slickest: 2,\n  slip: -1,\n  sloppy: -2,\n  sluggish: -2,\n  slumping: -1,\n  slut: -5,\n  smart: 1,\n  smarter: 2,\n  smartest: 2,\n  smear: -2,\n  smile: 2,\n  smiled: 2,\n  smiles: 2,\n  smiling: 2,\n  smog: -2,\n  smuggle: -2,\n  smuggled: -2,\n  smuggling: -2,\n  smuggles: -2,\n  sneaky: -1,\n  sneeze: -2,\n  sneezed: -2,\n  sneezes: -2,\n  sneezing: -2,\n  snub: -2,\n  snubbed: -2,\n  snubbing: -2,\n  snubs: -2,\n  sobering: 1,\n  solemn: -1,\n  solid: 2,\n  solidarity: 2,\n  solidified: 2,\n  solidifies: 2,\n  solidify: 2,\n  solidifying: 2,\n  solution: 1,\n  solutions: 1,\n  solve: 1,\n  solved: 1,\n  solves: 1,\n  solving: 1,\n  somber: -2,\n  'some kind': 0,\n  'son-of-a-bitch': -5,\n  soothe: 3,\n  soothed: 3,\n  soothing: 3,\n  sophisticated: 2,\n  sore: -1,\n  sorrow: -2,\n  sorrowful: -2,\n  sorry: -1,\n  spacious: 1,\n  spam: -2,\n  spammer: -3,\n  spammers: -3,\n  spamming: -2,\n  spark: 1,\n  sparkle: 3,\n  sparkles: 3,\n  sparkling: 3,\n  spearhead: 2,\n  speculative: -2,\n  spirit: 1,\n  spirited: 2,\n  spiritless: -2,\n  spiteful: -2,\n  splendid: 3,\n  spoiled: -2,\n  spoilt: -2,\n  spotless: 2,\n  sprightly: 2,\n  squander: -2,\n  squandered: -2,\n  squandering: -2,\n  squanders: -2,\n  squelched: -1,\n  stab: -2,\n  stabbed: -2,\n  stable: 2,\n  stabs: -2,\n  stall: -2,\n  stalled: -2,\n  stalling: -2,\n  stamina: 2,\n  stampede: -2,\n  stank: -2,\n  startled: -2,\n  startling: 3,\n  starve: -2,\n  starved: -2,\n  starves: -2,\n  starving: -2,\n  steadfast: 2,\n  steal: -2,\n  stealing: -2,\n  steals: -2,\n  stereotype: -2,\n  stereotyped: -2,\n  stifled: -1,\n  stimulate: 1,\n  stimulated: 1,\n  stimulates: 1,\n  stimulating: 2,\n  stingy: -2,\n  stink: -2,\n  stinked: -2,\n  stinker: -2,\n  stinking: -2,\n  stinks: -2,\n  stinky: -2,\n  stole: -2,\n  stolen: -2,\n  stop: -1,\n  stopped: -1,\n  stopping: -1,\n  stops: -1,\n  stout: 2,\n  straight: 1,\n  strange: -1,\n  strangely: -1,\n  strangled: -2,\n  strength: 2,\n  strengthen: 2,\n  strengthened: 2,\n  strengthening: 2,\n  strengthens: 2,\n  strengths: 2,\n  stress: -1,\n  stressed: -2,\n  stressor: -2,\n  stressors: -2,\n  stricken: -2,\n  strike: -1,\n  strikers: -2,\n  strikes: -1,\n  strong: 2,\n  stronger: 2,\n  strongest: 2,\n  struck: -1,\n  struggle: -2,\n  struggled: -2,\n  struggles: -2,\n  struggling: -2,\n  stubborn: -2,\n  stuck: -2,\n  stunned: -2,\n  stunning: 4,\n  stupid: -2,\n  stupidity: -3,\n  stupidly: -2,\n  suave: 2,\n  subpoena: -2,\n  substantial: 1,\n  substantially: 1,\n  subversive: -2,\n  succeed: 3,\n  succeeded: 3,\n  succeeding: 3,\n  succeeds: 3,\n  success: 2,\n  successful: 3,\n  successfully: 3,\n  suck: -3,\n  sucks: -3,\n  sue: -2,\n  sued: -2,\n  sueing: -2,\n  sues: -2,\n  suffer: -2,\n  suffered: -2,\n  sufferer: -2,\n  sufferers: -2,\n  suffering: -2,\n  suffers: -2,\n  suicidal: -2,\n  suicide: -2,\n  suicides: -2,\n  suing: -2,\n  suitable: 2,\n  suited: 2,\n  sulking: -2,\n  sulky: -2,\n  sullen: -2,\n  sunshine: 2,\n  super: 3,\n  superb: 5,\n  superior: 2,\n  support: 2,\n  supported: 2,\n  supporter: 1,\n  supporters: 1,\n  supporting: 1,\n  supportive: 2,\n  supports: 2,\n  supreme: 4,\n  survived: 2,\n  surviving: 2,\n  survivor: 2,\n  suspect: -1,\n  suspected: -1,\n  suspecting: -1,\n  suspects: -1,\n  suspend: -1,\n  suspended: -1,\n  suspicious: -2,\n  sustainability: 1,\n  sustainable: 2,\n  sustainably: 2,\n  swear: -2,\n  swearing: -2,\n  swears: -2,\n  sweet: 2,\n  sweeter: 3,\n  sweetest: 3,\n  swift: 2,\n  swiftly: 2,\n  swindle: -3,\n  swindles: -3,\n  swindling: -3,\n  sympathetic: 2,\n  sympathy: 2,\n  taint: -2,\n  tainted: -2,\n  talent: 2,\n  tard: -2,\n  tarnish: -2,\n  tarnished: -2,\n  tarnishes: -2,\n  tears: -2,\n  tender: 2,\n  tenderness: 2,\n  tense: -2,\n  tension: -1,\n  terrible: -3,\n  terribly: -3,\n  terrific: 4,\n  terrifically: 4,\n  terrified: -3,\n  terror: -3,\n  terrorist: -2,\n  terrorists: -2,\n  terrorize: -3,\n  terrorized: -3,\n  terrorizes: -3,\n  thank: 2,\n  thankful: 2,\n  thanks: 2,\n  thorny: -2,\n  thoughtful: 2,\n  thoughtless: -2,\n  threat: -2,\n  threaten: -2,\n  threatened: -2,\n  threatening: -2,\n  threatens: -2,\n  threats: -2,\n  thrilled: 5,\n  thwart: -2,\n  thwarted: -2,\n  thwarting: -2,\n  thwarts: -2,\n  timid: -2,\n  timorous: -2,\n  tired: -2,\n  tits: -2,\n  tolerance: 2,\n  tolerant: 2,\n  toothless: -2,\n  top: 2,\n  tops: 2,\n  torn: -2,\n  torture: -4,\n  tortured: -4,\n  tortures: -4,\n  torturing: -4,\n  totalitarian: -2,\n  totalitarianism: -2,\n  tout: -2,\n  touted: -2,\n  touting: -2,\n  touts: -2,\n  toxic: -3,\n  tragedies: -2,\n  tragedy: -2,\n  tragic: -2,\n  tranquil: 2,\n  transgress: -2,\n  transgressed: -2,\n  transgresses: -2,\n  transgressing: -2,\n  trap: -1,\n  trapped: -2,\n  traps: -1,\n  trauma: -3,\n  traumatic: -3,\n  travesty: -2,\n  treason: -3,\n  treasonous: -3,\n  treasure: 2,\n  treasures: 2,\n  trembling: -2,\n  tremor: -2,\n  tremors: -2,\n  tremulous: -2,\n  tribulation: -2,\n  tribute: 2,\n  tricked: -2,\n  trickery: -2,\n  triumph: 4,\n  triumphant: 4,\n  troll: -2,\n  trouble: -2,\n  troubled: -2,\n  troubles: -2,\n  troubling: -2,\n  true: 2,\n  trust: 1,\n  trusted: 2,\n  trusts: 1,\n  tumor: -2,\n  twat: -5,\n  tyran: -3,\n  tyrannic: -3,\n  tyrannical: -3,\n  tyrannically: -3,\n  tyrans: -3,\n  ubiquitous: 2,\n  ugh: -2,\n  ugliness: -3,\n  ugly: -3,\n  unable: -2,\n  unacceptable: -2,\n  unappeasable: -2,\n  unappreciated: -2,\n  unapproved: -2,\n  unattractive: -2,\n  unavailable: -1,\n  unavailing: -2,\n  unaware: -2,\n  unbearable: -2,\n  unbelievable: -1,\n  unbelieving: -1,\n  unbiased: 2,\n  uncertain: -1,\n  unclear: -1,\n  uncomfortable: -2,\n  unconcerned: -2,\n  unconfirmed: -1,\n  unconvinced: -1,\n  uncredited: -1,\n  undecided: -1,\n  undercooked: -2,\n  underestimate: -1,\n  underestimated: -1,\n  underestimates: -1,\n  underestimating: -1,\n  undermine: -2,\n  undermined: -2,\n  undermines: -2,\n  undermining: -2,\n  underperform: -2,\n  underperformed: -2,\n  underperforming: -2,\n  underperforms: -2,\n  undeserving: -2,\n  undesirable: -2,\n  uneasy: -2,\n  unemployed: -1,\n  unemployment: -2,\n  unequal: -1,\n  unequaled: 2,\n  unethical: -2,\n  uneventful: -2,\n  unfair: -2,\n  unfavorable: -2,\n  unfit: -2,\n  unfitted: -2,\n  unfocused: -2,\n  unforgivable: -3,\n  unforgiving: -2,\n  unfulfilled: -2,\n  unfunny: -2,\n  ungenerous: -2,\n  ungrateful: -3,\n  unhappy: -2,\n  unhappiness: -2,\n  unhealthy: -2,\n  unhygienic: -2,\n  unified: 1,\n  unimaginative: -2,\n  unimpressed: -2,\n  uninspired: -2,\n  unintelligent: -2,\n  unintentional: -2,\n  uninvolving: -2,\n  united: 1,\n  unjust: -2,\n  unlikely: -1,\n  unlovable: -2,\n  unloved: -2,\n  unmatched: 1,\n  unmotivated: -2,\n  unoriginal: -2,\n  unparliamentary: -2,\n  unpleasant: -2,\n  unpleasantness: -2,\n  unprofessional: -2,\n  unravel: 1,\n  unreleting: -2,\n  unresearched: -2,\n  unsafe: -2,\n  unsatisfied: -2,\n  unscientific: -2,\n  unsecured: -2,\n  unselfish: 2,\n  unsettled: -1,\n  unsold: -1,\n  unsophisticated: -2,\n  unsound: -2,\n  unstable: -2,\n  unstoppable: 2,\n  unsuccessful: -2,\n  unsuccessfully: -2,\n  unsupported: -2,\n  unsure: -1,\n  untarnished: 2,\n  untrue: -2,\n  unwanted: -2,\n  unworthy: -2,\n  uplifting: 2,\n  uproar: -3,\n  upset: -2,\n  upsets: -2,\n  upsetting: -2,\n  uptight: -2,\n  urgent: -1,\n  useful: 2,\n  usefulness: 2,\n  useless: -2,\n  uselessness: -2,\n  vague: -2,\n  validate: 1,\n  validated: 1,\n  validates: 1,\n  validating: 1,\n  vapid: -2,\n  verdict: -1,\n  verdicts: -1,\n  vested: 1,\n  vexation: -2,\n  vexing: -2,\n  vibrant: 3,\n  vicious: -2,\n  victim: -3,\n  victimization: -3,\n  victimize: -3,\n  victimized: -3,\n  victimizes: -3,\n  victimizing: -3,\n  victims: -3,\n  victor: 3,\n  victors: 3,\n  victory: 3,\n  victories: 3,\n  vigilant: 3,\n  vigor: 3,\n  vile: -3,\n  vindicate: 2,\n  vindicated: 2,\n  vindicates: 2,\n  vindicating: 2,\n  violate: -2,\n  violated: -2,\n  violates: -2,\n  violating: -2,\n  violation: -2,\n  violations: -2,\n  violence: -3,\n  'violence-related': -3,\n  violent: -3,\n  violently: -3,\n  virtuous: 2,\n  virulent: -2,\n  vision: 1,\n  visionary: 3,\n  visioning: 1,\n  visions: 1,\n  vitality: 3,\n  vitamin: 1,\n  vitriolic: -3,\n  vivacious: 3,\n  vividly: 2,\n  vociferous: -1,\n  vomit: -3,\n  vomited: -3,\n  vomiting: -3,\n  vomits: -3,\n  vulnerability: -2,\n  vulnerable: -2,\n  walkout: -2,\n  walkouts: -2,\n  wanker: -3,\n  want: 1,\n  war: -2,\n  warfare: -2,\n  warm: 1,\n  warmhearted: 2,\n  warmness: 2,\n  warmth: 2,\n  warn: -2,\n  warned: -2,\n  warning: -3,\n  warnings: -3,\n  warns: -2,\n  waste: -1,\n  wasted: -2,\n  wasting: -2,\n  wavering: -1,\n  weak: -2,\n  weakened: -2,\n  weakness: -2,\n  weaknesses: -2,\n  wealth: 3,\n  wealthier: 2,\n  wealthy: 2,\n  weary: -2,\n  weep: -2,\n  weeping: -2,\n  weird: -2,\n  welcome: 2,\n  welcomed: 2,\n  welcomes: 2,\n  'well-being': 2,\n  'well-championed': 3,\n  'well-developed': 2,\n  'well-established': 2,\n  'well-focused': 2,\n  'well-groomed': 2,\n  'well-proportioned': 2,\n  whimsical: 1,\n  whitewash: -3,\n  whore: -4,\n  wicked: -2,\n  widowed: -1,\n  willingness: 2,\n  win: 4,\n  winner: 4,\n  winning: 4,\n  wins: 4,\n  winwin: 3,\n  wisdom: 1,\n  wish: 1,\n  wishes: 1,\n  wishing: 1,\n  withdrawal: -3,\n  wits: 2,\n  woebegone: -2,\n  woeful: -3,\n  won: 3,\n  wonderful: 4,\n  wonderfully: 4,\n  woo: 3,\n  woohoo: 3,\n  wooo: 4,\n  woow: 4,\n  worn: -1,\n  worried: -3,\n  worries: -3,\n  worry: -3,\n  worrying: -3,\n  worse: -3,\n  worsen: -3,\n  worsened: -3,\n  worsening: -3,\n  worsens: -3,\n  worshiped: 3,\n  worst: -3,\n  worth: 2,\n  worthless: -2,\n  worthy: 2,\n  wow: 4,\n  wowow: 4,\n  wowww: 4,\n  wrathful: -3,\n  wreck: -2,\n  wrenching: -2,\n  wrong: -2,\n  wrongdoing: -2,\n  wrongdoings: -2,\n  wronged: -2,\n  wrongful: -2,\n  wrongfully: -2,\n  wrongly: -2,\n  wtf: -4,\n  wtff: -4,\n  wtfff: -4,\n  xo: 3,\n  xoxo: 3,\n  xoxoxo: 4,\n  xoxoxoxo: 4,\n  yeah: 1,\n  yearning: 1,\n  yeees: 2,\n  yes: 1,\n  youthful: 2,\n  yucky: -2,\n  yummy: 3,\n  zealot: -2,\n  zealots: -2,\n  zealous: 2\n}\n","var characterWeight = 4.71\nvar sentenceWeight = 0.5\nvar base = 21.43\n\n/**\n * @typedef {Object.<string, number>} AutomatedReadabilityCounts\n * @property {number} sentence\n * @property {number} word\n * @property {number} character\n */\n\n/**\n * Given an object containing the number of words (`word`), the number of sentences (`sentence`), and the number of characters  (`character`) in a document, returns the grade level associated with the document.\n *\n * @param {AutomatedReadabilityCounts} counts\n * @return {number}\n */\nexport function automatedReadability(counts) {\n  if (!counts || !counts.sentence || !counts.word || !counts.character) {\n    return Number.NaN\n  }\n\n  return (\n    characterWeight * (counts.character / counts.word) +\n    sentenceWeight * (counts.word / counts.sentence) -\n    base\n  )\n}\n","export var hedges = [\n  'a bit',\n  'about',\n  'actually',\n  'allege',\n  'alleged',\n  'almost',\n  'almost never',\n  'always',\n  'and all that',\n  'and so forth',\n  'apparent',\n  'apparently',\n  'appear',\n  'appear to be',\n  'appeared',\n  'appears',\n  'approximately',\n  'around',\n  'assume',\n  'assumed',\n  'assumes',\n  'assumption',\n  'at least',\n  'basically',\n  'be sure',\n  'believe',\n  'believed',\n  'believes',\n  'bunch',\n  'can',\n  'certain',\n  'certainly',\n  'clear',\n  'clearly',\n  'conceivably',\n  'consider',\n  'considered',\n  'considers',\n  'consistent with',\n  'could',\n  'couple',\n  'definite',\n  'definitely',\n  'diagnostic',\n  \"don't know\",\n  'doubt',\n  'doubtful',\n  'effectively',\n  'estimate',\n  'estimated',\n  'estimates',\n  'et cetera',\n  'evidently',\n  'fairly',\n  'few',\n  'find',\n  'finds',\n  'found',\n  'frequently',\n  'generally',\n  'guess',\n  'guessed',\n  'guesses',\n  'hopefully',\n  \"if i'm understanding you correctly\",\n  'improbable',\n  'in general',\n  'in my mind',\n  'in my opinion',\n  'in my understanding',\n  'in my view',\n  'inconclusive',\n  'indicate',\n  'kind of',\n  'largely',\n  'like',\n  'likely',\n  'little',\n  'look like',\n  'looks like',\n  'mainly',\n  'many',\n  'may',\n  'maybe',\n  'might',\n  'more or less',\n  'most',\n  'mostly',\n  'much',\n  'must',\n  'my impression',\n  'my thinking is',\n  'my understanding is',\n  'necessarily',\n  'occasionally',\n  'often',\n  'overall',\n  'partially',\n  'perhaps',\n  'possibility',\n  'possible',\n  'possibly',\n  'practically',\n  'presumable',\n  'presumably',\n  'pretty',\n  'probability',\n  'probable',\n  'probably',\n  'quite',\n  'quite clearly',\n  'rare',\n  'rarely',\n  'rather',\n  'read',\n  'really',\n  'roughly',\n  'say',\n  'says',\n  'seem',\n  'seemed',\n  'seems',\n  'seldom',\n  'several',\n  'should',\n  'so far',\n  'some',\n  'somebody',\n  'somehow',\n  'someone',\n  'something',\n  'something or other',\n  'sometimes',\n  'somewhat',\n  'somewhere',\n  'sort of',\n  'speculate',\n  'speculated',\n  'speculates',\n  'suggest',\n  'suggested',\n  'suggestive',\n  'suggests',\n  'suppose',\n  'supposed',\n  'supposedly',\n  'supposes',\n  'surely',\n  'tend',\n  'their impression',\n  'think',\n  'thinks',\n  'thought',\n  'understand',\n  'understands',\n  'understood',\n  'unlikely',\n  'unsure',\n  'usually',\n  'virtually',\n  'will',\n  'would'\n]\n","export var emoji = {\n  '💯': 3,\n  ':100:': 3,\n  '😠': -3,\n  ':angry:': -3,\n  '😧': -3,\n  ':anguished:': -3,\n  '😲': 2,\n  ':astonished:': 2,\n  '🖤': 3,\n  ':black_heart:': 3,\n  '💙': 3,\n  ':blue_heart:': 3,\n  '😊': 2,\n  ':blush:': 2,\n  '💔': -3,\n  ':broken_heart:': -3,\n  '👏': 3,\n  ':clap:': 3,\n  '🤡': 0,\n  ':clown_face:': 0,\n  '😰': -2,\n  ':cold_sweat:': -2,\n  '😖': -2,\n  ':confounded:': -2,\n  '😕': -2,\n  ':confused:': -2,\n  '🤠': 2,\n  ':cowboy_hat_face:': 2,\n  '🤞': 2,\n  ':crossed_fingers:': 2,\n  '😢': -2,\n  ':cry:': -2,\n  '😿': -2,\n  ':crying_cat_face:': -2,\n  '💘': 3,\n  ':cupid:': 3,\n  '😞': -2,\n  ':disappointed:': -2,\n  '😥': -1,\n  ':disappointed_relieved:': -1,\n  '😵': -1,\n  ':dizzy_face:': -1,\n  '🤤': 0,\n  ':drooling_face:': 0,\n  '😑': 0,\n  ':expressionless:': 0,\n  '🤕': -2,\n  ':face_with_head_bandage:': -2,\n  '🤒': -1,\n  ':face_with_thermometer:': -1,\n  '😨': -2,\n  ':fearful:': -2,\n  '😳': -2,\n  ':flushed:': -2,\n  '😦': -1,\n  ':frowning:': -1,\n  '☹️': -2,\n  ':frowning_face:': -2,\n  '🖕': -4,\n  ':middle_finger:': -4,\n  '👻': -1,\n  ':ghost:': -1,\n  '💝': 3,\n  ':gift_heart:': 3,\n  '💚': 3,\n  ':green_heart:': 3,\n  '😬': -2,\n  ':grimacing:': -2,\n  '😁': 2,\n  ':grin:': 2,\n  '😀': 2,\n  ':grinning:': 2,\n  '🤝': 1,\n  ':handshake:': 1,\n  '❤️': 3,\n  ':heart:': 3,\n  '😍': 3,\n  ':heart_eyes:': 3,\n  '😻': 3,\n  ':heart_eyes_cat:': 3,\n  '💓': 3,\n  ':heartbeat:': 3,\n  '💗': 3,\n  ':heartpulse:': 3,\n  '🤗': 2,\n  ':hugs:': 2,\n  '😯': -1,\n  ':hushed:': -1,\n  '👿': -4,\n  ':imp:': -4,\n  '😇': 3,\n  ':innocent:': 3,\n  '😂': 3,\n  ':joy:': 3,\n  '😹': 3,\n  ':joy_cat:': 3,\n  '💋': 2,\n  ':kiss:': 2,\n  '😗': 2,\n  ':kissing:': 2,\n  '😽': 2,\n  ':kissing_cat:': 2,\n  '😚': 2,\n  ':kissing_closed_eyes:': 2,\n  '😘': 3,\n  ':kissing_heart:': 3,\n  '😙': 2,\n  ':kissing_smiling_eyes:': 2,\n  '😆': 1,\n  ':laughing:': 1,\n  '👄': 2,\n  ':lips:': 2,\n  '🤥': -2,\n  ':lying_face:': -2,\n  '😷': -1,\n  ':mask:': -1,\n  '🤑': 0,\n  ':money_mouth_face:': 0,\n  '🤢': -2,\n  ':nauseated_face:': -2,\n  '🤓': -1,\n  ':nerd_face:': -1,\n  '😐': 0,\n  ':neutral_face:': 0,\n  '😶': 0,\n  ':no_mouth:': 0,\n  '👌': 2,\n  ':ok_hand:': 2,\n  '😮': -2,\n  ':open_mouth:': -2,\n  '😔': -1,\n  ':pensive:': -1,\n  '😣': -2,\n  ':persevere:': -2,\n  '😾': -4,\n  ':pouting_cat:': -4,\n  '🙏': 1,\n  ':pray:': 1,\n  '👊': -1,\n  ':fist_oncoming:': -1,\n  '💜': 3,\n  ':purple_heart:': 3,\n  '😡': -4,\n  ':rage:': -4,\n  '🙌': 4,\n  ':raised_hands:': 4,\n  '☺️': 2,\n  ':relaxed:': 2,\n  '😌': 2,\n  ':relieved:': 2,\n  '💞': 3,\n  ':revolving_hearts:': 3,\n  '🤣': 4,\n  ':rofl:': 4,\n  '🙄': -1,\n  ':roll_eyes:': -1,\n  '😱': -3,\n  ':scream:': -3,\n  '🙀': -3,\n  ':scream_cat:': -3,\n  '💩': -3,\n  ':hankey:': -3,\n  '💀': -2,\n  ':skull:': -2,\n  '☠️': -2,\n  ':skull_and_crossbones:': -2,\n  '😴': 0,\n  ':sleeping:': 0,\n  '😪': 0,\n  ':sleepy:': 0,\n  '🙁': -1,\n  ':slightly_frowning_face:': -1,\n  '🙂': 1,\n  ':slightly_smiling_face:': 1,\n  '😄': 2,\n  ':smile:': 2,\n  '😸': 2,\n  ':smile_cat:': 2,\n  '😃': 2,\n  ':smiley:': 2,\n  '😺': 2,\n  ':smiley_cat:': 2,\n  '😈': -3,\n  ':smiling_imp:': -3,\n  '😏': 2,\n  ':smirk:': 2,\n  '😼': 2,\n  ':smirk_cat:': 2,\n  '🤧': -2,\n  ':sneezing_face:': -2,\n  '😭': -3,\n  ':sob:': -3,\n  '💖': 3,\n  ':sparkling_heart:': 3,\n  '😛': 1,\n  ':stuck_out_tongue:': 1,\n  '😝': 0,\n  ':stuck_out_tongue_closed_eyes:': 0,\n  '😜': -1,\n  ':stuck_out_tongue_winking_eye:': -1,\n  '😎': 1,\n  ':sunglasses:': 1,\n  '😓': -1,\n  ':sweat:': -1,\n  '😅': 2,\n  ':sweat_smile:': 2,\n  '🤔': -1,\n  ':thinking:': -1,\n  '👎': -2,\n  ':-1:': -2,\n  '👍': 2,\n  ':+1:': 2,\n  '😫': -2,\n  ':tired_face:': -2,\n  '😤': 0,\n  ':triumph:': 0,\n  '💕': 3,\n  ':two_hearts:': 3,\n  '😒': -2,\n  ':unamused:': -2,\n  '🙃': 0,\n  ':upside_down_face:': 0,\n  '✌️': 2,\n  ':v:': 2,\n  '😩': -2,\n  ':weary:': -2,\n  '😉': 3,\n  ':wink:': 3,\n  '😟': -3,\n  ':worried:': -3,\n  '💛': 3,\n  ':yellow_heart:': 3,\n  '😋': 3,\n  ':yum:': 3,\n  '🤐': -1,\n  ':zipper_mouth_face:': -1\n}\n","/**\n * @typedef {Object} Polarity\n * @property {number} polarity\n * @property {number} positivity\n * @property {number} negativity\n * @property {Array.<string>} positive\n * @property {Array.<string>} negative\n *\n * @typedef {Object.<string, number>} Inject\n */\n\nimport {afinn165} from 'afinn-165'\nimport {emoji} from './emoji.js'\n\nexport var polarities = {}\n\nvar own = {}.hasOwnProperty\n\ninject(afinn165)\ninject(emoji)\n\n/**\n * Get a polarity result from given values, optionally with one time injections.\n *\n * @param {Array.<string>} values\n * @param {Inject} inject\n * @returns {Polarity}\n */\nexport function polarity(values, inject) {\n  var words = values || []\n  var index = words.length === 0 ? 1 : words.length\n  var positivity = 0\n  var negativity = 0\n  /** @type {Array.<string>} */\n  var positive = []\n  /** @type {Array.<string>} */\n  var negative = []\n  /** @type {string} */\n  var value\n  /** @type {number} */\n  var weight\n\n  while (index--) {\n    value = words[index]\n    weight = getPolarity(value, inject)\n\n    if (!weight) {\n      continue\n    }\n\n    if (weight > 0) {\n      positive.push(value)\n      positivity += weight\n    } else {\n      negative.push(value)\n      negativity += weight\n    }\n  }\n\n  return {\n    polarity: positivity + negativity,\n    positivity,\n    negativity,\n    positive,\n    negative\n  }\n}\n\n/**\n * Inject values on the `polarities` object.\n *\n * @param {Inject} values\n */\nexport function inject(values) {\n  /** @type {string} */\n  var value\n\n  for (value in values) {\n    if (own.call(values, value)) {\n      polarities[value] = values[value]\n    }\n  }\n}\n\n/**\n * Get the polarity of a word.\n *\n * @param {string} value\n * @param {Inject} inject\n */\nfunction getPolarity(value, inject) {\n  if (own.call(polarities, value)) {\n    return polarities[value]\n  }\n\n  if (inject && own.call(inject, value)) {\n    return inject[value]\n  }\n\n  return 0\n}\n","export var weasels = [\n  'a lot',\n  'about',\n  'acts',\n  'again',\n  'all',\n  'almost',\n  'already',\n  'also',\n  'anyway',\n  'appeared',\n  'appears',\n  'are a number',\n  'arguably',\n  'back',\n  'be able to',\n  'began',\n  'believed',\n  'better',\n  'bit',\n  'clearly',\n  'close',\n  'combats',\n  'completely',\n  'considered',\n  'could',\n  'decided',\n  'down',\n  'effective',\n  'efficient',\n  'enough',\n  'even',\n  'ever',\n  'exceedingly',\n  'excellent',\n  'expert',\n  'experts',\n  'extremely',\n  'fairly',\n  'far',\n  'felt',\n  'few',\n  'gains',\n  'heard',\n  'helps',\n  'huge',\n  'improved',\n  'interestingly',\n  'is a number',\n  'is like',\n  'just',\n  'knew',\n  'largely',\n  'like',\n  'linked to',\n  'literally',\n  'looked',\n  'looks',\n  'lots',\n  'many',\n  'might',\n  'most',\n  'mostly',\n  'not rocket science',\n  'noticed',\n  'often',\n  'only',\n  'outside the box',\n  'over',\n  'own',\n  'pretty',\n  'probably',\n  'quite',\n  'rather',\n  'real',\n  'realised',\n  'realized',\n  'really',\n  'recognised',\n  'recognized',\n  'relatively',\n  'remarkably',\n  'reportedly',\n  'saw',\n  'seemed',\n  'seems',\n  'several',\n  'significantly',\n  'smelled',\n  'so',\n  'some',\n  'somehow',\n  'sort',\n  'started',\n  'still',\n  'substantially',\n  'supports',\n  'supposed',\n  'surprisingly',\n  'that',\n  'then',\n  'thought',\n  'tiny',\n  'touched',\n  'understood',\n  'up',\n  'useful',\n  'various',\n  'vast',\n  'very',\n  'virtually',\n  'wanted',\n  'watched',\n  'well',\n  'wished',\n  'wondered',\n  'works'\n]\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './components/sidebar';\n// import './hoc/add-classes';\n// import './format-types/highlight';\n// import './hooks/subscribe';\n"],"names":["debounce","__","PluginSidebar","PanelBody","PanelRow","registerPlugin","dispatch","useSelect","useEffect","useMemo","useCallback","addProblems","check","readingScore","ALLOWED_BLOCKS","TYPES","AccessPanel","blocks","select","getBlocks","content","getEditedPostAttribute","score","sentences","words","characters","paragraphs","letters","polarity","readingTime","contentBlocks","filter","block","includes","name","blocksWithProblems","blockData","map","blockId","clientId","attributes","length","problems","adverbs","passive","simpler","weasels","hedges","readability","reduce","acc","concat","type","updateProblems","forEach","__experimentalRemoveAnnotationsBySource","index","offset","__experimentalAddAnnotation","source","blockClientId","richTextIdentifier","range","start","end","Math","round","level","render","exceptions","list","value","replace","store","text","expression","RegExp","join","matches","matchAll","match","Boolean","message","weasel","replacements","action","flow","so","stripTags","stripAstrals","stripHTMComments","stripSpaces","stripHTMLEntities","stripped","split","word","replacement","find","toLocaleLowerCase","tokenize","line","sentence","accumulator","currentValue","currentIndex","count","characterCounter","automatedReadability","push","wordCount","characterCount","alphaNumericCharacters","character","polarityScore","minutes","wordsPerMinute","console","log","removeProblem","createReduxStore","register","reducer","selectors","actions","STORE_NAME","combineReducers","btoa","window","state","Array","isArray","problem","id","getProblems","getProblem","getBlockProblems","Tokenizer","tokenizer","setEntry","getSentences","getTokens","error","stripHTMLComments"],"sourceRoot":""}