{"version":3,"file":"js/editor.js","mappings":";;;;;;;;;;AAAY;;AAEZ;;AAEA,YAAY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACC;AAED;AACA;AACA;AAEA;AAEA,MAAM;AAAES,EAAAA,WAAW,EAAE;AAAEC,IAAAA,QAAQ,EAAEC;AAAZ;AAAf,IAAkDC,MAAxD;AAEO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAC1C,QAAM,CAACJ,QAAD,EAAWK,WAAX,IAA0BT,4DAAQ,CAACK,gBAAD,CAAxC;AAEA,QAAMK,YAAY,GAAGf,0DAAS,CAAEE,MAAD,IAAY;AAC7C,WAAOA,MAAM,CAAC,MAAD,CAAN,CAAec,eAAf,CAA+B,MAA/B,EAAuC,MAAvC,CAAP;AACA,GAFgC,EAE9B,EAF8B,CAA9B;AAIAZ,EAAAA,6DAAS,CAAC,MAAM;AAClB,QAAIW,YAAJ,EAAkB;AACjB,YAAM;AAAEE,QAAAA,cAAc,EAAER;AAAlB,UAA+BM,YAArC;AACAD,MAAAA,WAAW,CAACL,QAAD,CAAX;AACA;AACD,GALW,EAKT,CAACM,YAAD,CALS,CAAT;AAOA,SACI,kEAAC,gEAAD;AACI,aAAS,EAAGhB,iDAAU,CAAE,6BAAF,EAAiC;AAAE,oBAAcU,QAAQ,CAACS,YAAT,KAA0B;AAA1C,KAAjC,CAD1B;AAEI,MAAE,EAAC,+BAFP;AAGI,QAAI,EAAC,MAHT;AAII,SAAK,EAAC,MAJV;AAKI,WAAO,EAAG,MAAM;AACZjB,MAAAA,yDAAQ,CAAE,MAAF,CAAR,CAAmBkB,gBAAnB,CAAqC,MAArC,EAA6C,MAA7C,EAAqD;AACjDF,QAAAA,cAAc,EAAE,EACZ,GAAGR,QADS;AAEZS,UAAAA,YAAY,EAAET,QAAQ,CAACS,YAAT,KAA0B,GAA1B,GAAgC,GAAhC,GAAsC;AAFxC;AADiC,OAArD;;AAOA,UAAIT,QAAQ,CAACS,YAAT,KAA0B,GAA9B,EAAmC;AAC/BZ,QAAAA,wEAAiB;AACpB,OAFD,MAEO;AACH,cAAMc,aAAa,GAAGlB,uDAAM,CAAC,uBAAD,CAAN,CAAgCmB,WAAhC,EAAtB;AACAd,QAAAA,qEAAc,CAACa,aAAD,CAAd;AACH;AACJ;AAnBL,IADJ;AAuBH,CArCM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbP;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA,MAAM;AAAEZ,EAAAA,WAAW,EAAE;AAAEC,IAAAA,QAAQ,EAAE8B;AAAZ;AAAf,IAAwD5B,MAA9D;AAEO,MAAM6B,WAAW,GAAG,MAAM;AAChC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrC,4DAAQ,CAACkC,sBAAD,CAA9C;AAEA,QAAMxB,YAAY,GAAGf,0DAAS,CAAEE,MAAD,IAAY;AAC1C,WAAOA,MAAM,CAAC,MAAD,CAAN,CAAec,eAAf,CAA+B,MAA/B,EAAuC,MAAvC,CAAP;AACA,GAF6B,EAE3B,EAF2B,CAA9B;AAIAZ,EAAAA,6DAAS,CAAC,MAAM;AACf,QAAIW,YAAJ,EAAkB;AACjB,YAAM;AAAEE,QAAAA;AAAF,UAAqBF,YAA3B;AACA2B,MAAAA,cAAc,CAACzB,cAAD,CAAd;AACA;AACD,GALQ,EAKN,CAACF,YAAD,CALM,CAAT;AAOA,QAAM;AACL4B,IAAAA,WADK;AAELC,IAAAA,KAFK;AAGLC,IAAAA;AAHK,MAIF7C,0DAAS,CAAEE,MAAD,IAAYA,MAAM,CAACoC,yCAAD,CAAN,CAAcQ,cAAd,EAAb,CAJb;AAMA,QAAMC,QAAQ,GAAG/C,0DAAS,CAAEE,MAAD,IAAY;AACtC,UAAM8C,eAAe,GAAG9C,MAAM,CAACoC,yCAAD,CAAN,CAAcjB,WAAd,EAAxB;AAEA,WAAO;AACN4B,MAAAA,MAAM,EAAED,eAAe,CAACE,MAAhB,CAAuB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,KAAK,QAAvB;AAAA,OAAvB,CADF;AAENC,MAAAA,MAAM,EAAEJ,eAAe,CAACE,MAAhB,CAAuB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,KAAK,QAAvB;AAAA,OAAvB,CAFF;AAGNE,MAAAA,KAAK,EAAEL,eAAe,CAACE,MAAhB,CAAuB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,KAAK,OAAvB;AAAA,OAAvB,CAHD;AAING,MAAAA,MAAM,EAAEN,eAAe,CAACE,MAAhB,CAAuB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,KAAK,QAAvB;AAAA,OAAvB,CAJF;AAKNI,MAAAA,SAAS,EAAEP,eAAe,CAACE,MAAhB,CAAuB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,KAAK,WAAvB;AAAA,OAAvB,CALL;AAMNK,MAAAA,QAAQ,EAAER,eAAe,CAACE,MAAhB,CAAuB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,KAAK,UAAvB;AAAA,OAAvB,CANJ;AAONM,MAAAA,MAAM,EAAET,eAAe,CAACE,MAAhB,CAAuB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,KAAK,QAAvB;AAAA,OAAvB,CAPF;AAQNO,MAAAA,OAAO,EAAEV,eAAe,CAACE,MAAhB,CAAuB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,KAAK,SAAvB;AAAA,OAAvB,CARH;AASNQ,MAAAA,WAAW,EAAEX,eAAe,CAACE,MAAhB,CAAuB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,CAACS,QAAL,CAAc,aAAd,CAAd;AAAA,OAAvB,CATP;AAUNC,MAAAA,OAAO,EAAEb,eAAe,CAACE,MAAhB,CAAuB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,KAAK,SAAvB;AAAA,OAAvB;AAVH,KAAP;AAYA,GAfyB,CAA1B;AAiBA,SACC,kEAAC,+DAAD;AACC,QAAI,EAAC,gBADN;AAEC,QAAI,EAAC,MAFN;AAGC,SAAK,EAAE7B,mDAAE,CAAC,kBAAD,EAAqB,gBAArB;AAHV,KA2CC,kEAAC,4DAAD;AAAW,SAAK,EAAEA,mDAAE,CAAC,aAAD,EAAgB,gBAAhB;AAApB,KAEEqB,WAAW,IAAIC,KAAf,IAAwBC,QAAxB,GACC,kIACC,kEAAC,2DAAD,QACC,+FADD,EAEC;AAAI,SAAK,EAAE;AAACiB,MAAAA,MAAM,EAAE;AAAT;AAAX,KAAyB,CAACnB,WAAW,IAAI,CAAhB,KAAsB,CAAtB,GAA2B,GACnDoB,IAAI,CAACC,KAAL,CAAWrB,WAAX,CAAwB,UAASoB,IAAI,CAACC,KAAL,CAAYrB,WAAW,IAAI,CAA3B,IAAiC,CAAjC,GAAqC,GAArC,GAA2C,EAC5E,EAFwB,GAEpB,oBAFL,CAFD,CADD,EAOC,kEAAC,2DAAD,QACC,wFADD,EAEC;AAAI,SAAK,EAAE;AAACmB,MAAAA,MAAM,EAAE;AAAT;AAAX,KAAyBlB,KAAK,IAAI,CAAlC,CAFD,CAPD,EAWC,kEAAC,2DAAD,QACC,2FADD,EAEC;AAAI,SAAK,EAAE;AAACkB,MAAAA,MAAM,EAAE;AAAT;AAAX,KAAyBjB,QAAQ,IAAI,CAArC,CAFD,CAXD,CADD,GAkBC,kEAAC,0DAAD,OApBH,CA3CD,EAmEC,kEAAC,4DAAD;AAAW,SAAK,EAAEvB,mDAAE,CAAC,aAAD,EAAgB,gBAAhB;AAApB,KAEE2C,MAAM,CAACC,IAAP,CAAY9B,8DAAZ,EAAoC+B,GAApC,CAAyChB,IAAD,IACvCJ,QAAQ,CAACI,IAAD,CAAR,CAAeiB,MAAf,GACC,kEAAC,2DAAD;AAAU,OAAG,EAAEjB;AAAf,KACC,kEAAC,gEAAD;AACC,SAAK,EAAEf,8DAAsB,CAACe,IAAD,CAAtB,CAA6BkB,KADrC;AAEC,QAAI,EAAEjC,8DAAsB,CAACe,IAAD,CAAtB,CAA6BmB,IAA7B,CAAkCvB,QAAQ,CAACI,IAAD,CAAR,CAAeiB,MAAjD,CAFP;AAGC,WAAO,EAAE3B,WAAW,CAACU,IAAD,CAAX,GAAoBV,WAAW,CAACU,IAAD,CAAX,KAAsB,GAA1C,GAAgD,IAH1D;AAIC,YAAQ,EAAGoB,OAAD,IAAa;AAEtBtE,MAAAA,yDAAQ,CAAE,MAAF,CAAR,CAAmBkB,gBAAnB,CAAqC,MAArC,EAA6C,MAA7C,EAAqD;AACpDF,QAAAA,cAAc,EAAE,EACf,GAAGwB,WADY;AAEf,WAACU,IAAD,GAAQoB,OAAO,GAAG,GAAH,GAAS;AAFT;AADoC,OAArD,EAKIC,IALJ,CAKS,UAAwB;AAAA,YAAvB;AAAEvD,UAAAA;AAAF,SAAuB;AAChCyB,QAAAA,cAAc,CAACzB,cAAD,CAAd;AACA,OAPD;AASA,OAACmB,8DAAsB,CAACe,IAAD,CAAtB,CAA6BsB,MAA7B,IAAuC,CAACtB,IAAD,CAAxC,EAAgDuB,OAAhD,CAAyDD,MAAD,IAAY;AACnE,YAAIF,OAAJ,EAAa;AACZ,gBAAMxB,QAAQ,GAAG7C,uDAAM,CAACoC,yCAAD,CAAN,CAAcqC,iBAAd,CAAgCF,MAAhC,CAAjB;AAEA1B,UAAAA,QAAQ,CAAC2B,OAAT,CAAiB,UAAiD;AAAA,gBAAhD;AAAEE,cAAAA,OAAF;AAAWC,cAAAA,SAAX;AAAsB1B,cAAAA,IAAtB;AAA4B2B,cAAAA,KAA5B;AAAmCC,cAAAA;AAAnC,aAAgD;;AACjE9E,YAAAA,yDAAQ,CAAC,kBAAD,CAAR,CAA6B+E,2BAA7B,CAAyD;AACxDP,cAAAA,MAAM,EAAG,mBAAkBtB,IAAK,EADwB;AAExD8B,cAAAA,aAAa,EAAEL,OAFyC;AAGxDM,cAAAA,kBAAkB,EAAE7C,oEAA4B,CAACwC,SAAD,CAHQ;AAIxDM,cAAAA,KAAK,EAAE;AACNC,gBAAAA,KAAK,EAAEN,KADD;AAENO,gBAAAA,GAAG,EAAEN;AAFC;AAJiD,aAAzD;AASA,WAVD;AAWA,SAdD,MAcO;AACN9E,UAAAA,yDAAQ,CAAE,kBAAF,CAAR,CAA+BqF,uCAA/B,CAAyE,mBAAkBb,MAAO,EAAlG;AACA;AACD,OAlBD;;AAoBA,UAAItB,IAAI,CAACS,QAAL,CAAc,aAAd,KAAgCW,OAApC,EAA6C;AAC5C,cAAMxB,QAAQ,GAAG7C,uDAAM,CAACoC,yCAAD,CAAN,CAAcjB,WAAd,EAAjB;AAEA0B,QAAAA,QAAQ,CACNG,MADF,CACS;AAAA,cAAC;AAAEC,YAAAA;AAAF,WAAD;AAAA,iBAAc,CAAEA,IAAI,CAACS,QAAL,CAAc,aAAd,CAAhB;AAAA,SADT,EAEEc,OAFF,CAEU,UAAiD;AAAA,cAAhD;AAAEE,YAAAA,OAAF;AAAWC,YAAAA,SAAX;AAAsB1B,YAAAA,IAAtB;AAA4B2B,YAAAA,KAA5B;AAAmCC,YAAAA;AAAnC,WAAgD;;AACzD9E,UAAAA,yDAAQ,CAAC,kBAAD,CAAR,CAA6B+E,2BAA7B,CAAyD;AACxDP,YAAAA,MAAM,EAAG,mBAAkBtB,IAAK,EADwB;AAExD8B,YAAAA,aAAa,EAAEL,OAFyC;AAGxDM,YAAAA,kBAAkB,EAAE7C,oEAA4B,CAACwC,SAAD,CAHQ;AAIxDM,YAAAA,KAAK,EAAE;AACNC,cAAAA,KAAK,EAAEN,KADD;AAENO,cAAAA,GAAG,EAAEN;AAFC;AAJiD,WAAzD;AASA,SAZF;AAaA;AACD;AApDF,IADD,CADD,GAyDI,IA1DL,CAFF,CAnED,CADD;AAsIA,CA3KM;;;;;;;;;;;;;;;;;;;;;ACfP;AAEO,MAAMQ,cAAc,GAAG,CAC7B,gBAD6B,EAE7B,cAF6B,EAG7B,WAH6B,EAI7B,YAJ6B,EAK7B,gBAL6B,EAM7B,YAN6B,EAO7B,iBAP6B,EAQ7B,mBAR6B,CAAvB;AAWA,MAAMlD,4BAA4B,GAAG;AAC3C,oBAAkB,SADyB;AAE3C,eAAa,QAF8B;AAG3C,gBAAc;AAH6B,CAArC;AAMA,MAAMmD,aAAa,GAAG,CAC5B,SAD4B,EAE5B,QAF4B,EAG5B,OAH4B,EAI5B,QAJ4B,EAK5B,SAL4B,EAM5B,kBAN4B,EAO5B,uBAP4B,EAQ5B,IAR4B,EAS5B,QAT4B,EAU5B,QAV4B,EAW5B,UAX4B,EAY5B,WAZ4B,CAAtB;AAeA,MAAMpD,sBAAsB,GAAG;AACrCyB,EAAAA,OAAO,EAAE;AACRQ,IAAAA,KAAK,EAAE/C,mDAAE,CAAC,eAAD,EAAkB,gBAAlB,CADD;AAERgD,IAAAA,IAAI,EAAGmB,MAAD,IAAa,GAAEA,MAAO;AAFpB,GAD4B;AAKrCxC,EAAAA,MAAM,EAAE;AACPoB,IAAAA,KAAK,EAAE/C,mDAAE,CAAC,SAAD,EAAY,gBAAZ,CADF;AAEPgD,IAAAA,IAAI,EAAGmB,MAAD,IAAa,GAAEA,MAAO;AAFrB,GAL6B;AASrCpC,EAAAA,KAAK,EAAE;AACNgB,IAAAA,KAAK,EAAE/C,mDAAE,CAAC,aAAD,EAAgB,gBAAhB,CADH;AAENgD,IAAAA,IAAI,EAAGmB,MAAD,IAAa,GAAEA,MAAO;AAFtB,GAT8B;AAarCrC,EAAAA,MAAM,EAAE;AACPiB,IAAAA,KAAK,EAAE/C,mDAAE,CAAC,cAAD,EAAiB,gBAAjB,CADF;AAEPgD,IAAAA,IAAI,EAAGmB,MAAD,IAAa,GAAEA,MAAO;AAFrB,GAb6B;AAiBrC/B,EAAAA,OAAO,EAAE;AACRW,IAAAA,KAAK,EAAE/C,mDAAE,CAAC,eAAD,EAAkB,gBAAlB,CADD;AAERgD,IAAAA,IAAI,EAAGmB,MAAD,IAAa,GAAEA,MAAO;AAFpB,GAjB4B;AAqBrC9B,EAAAA,WAAW,EAAE;AACZU,IAAAA,KAAK,EAAE/C,mDAAE,CAAC,aAAD,EAAgB,gBAAhB,CADG;AAEZgD,IAAAA,IAAI,EAAGmB,MAAD,IAAa,GAAEA,MAAO,8BAFhB;AAGZhB,IAAAA,MAAM,EAAE,CACP,kBADO,EAEP,uBAFO;AAHI,GArBwB;AA6BrCnB,EAAAA,MAAM,EAAE;AACPe,IAAAA,KAAK,EAAE/C,mDAAE,CAAC,cAAD,EAAiB,gBAAjB,CADF;AAEPgD,IAAAA,IAAI,EAAGmB,MAAD,IAAa,GAAEA,MAAO;AAFrB,GA7B6B;AAiCrChC,EAAAA,MAAM,EAAE;AACPY,IAAAA,KAAK,EAAE/C,mDAAE,CAAC,gBAAD,EAAmB,gBAAnB,CADF;AAEPgD,IAAAA,IAAI,EAAGmB,MAAD,IAAa,GAAEA,MAAO;AAFrB,GAjC6B;AAqCrCjC,EAAAA,QAAQ,EAAE;AACTa,IAAAA,KAAK,EAAE/C,mDAAE,CAAC,oBAAD,EAAuB,gBAAvB,CADA;AAETgD,IAAAA,IAAI,EAAGmB,MAAD,IAAa,GAAEA,MAAO;AAFnB,GArC2B;AAyCrClC,EAAAA,SAAS,EAAE;AACVc,IAAAA,KAAK,EAAE/C,mDAAE,CAAC,WAAD,EAAc,gBAAd,CADC;AAEVgD,IAAAA,IAAI,EAAGmB,MAAD,IAAa,GAAEA,MAAO;AAFlB;AAzC0B,CAA/B;AA+CA,MAAMC,aAAa,GAAG;AAC5BC,EAAAA,aAAa,EAAE,IADa;AAE5BC,EAAAA,SAAS,EAAE,KAFiB;AAG5B,KAAG3B,MAAM,CAACC,IAAP,CAAa9B,sBAAb,EAAsC+B,GAAtC,CAA6ChB,IAAF,KAAc;AAC3D,KAAEA,IAAF,GAAU;AADiD,GAAd,CAA3C;AAHyB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFP;AACA;AACA;AACA;AACA;CAGA;;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAMA,MAAM;AAAE3C,EAAAA,WAAW,EAAE;AAAEC,IAAAA,QAAQ,EAAE8B;AAAZ,GAAf;AAAqD0D,EAAAA;AAArD,IAA8DtF,MAApE;AAEA,IAAIuF,kBAAkB,GAAG,KAAzB;AACA,IAAIC,KAAK,GAAG,EAAZ;AAEO,SAASC,qBAAT,GAAiC;AACvC,SAAOlG,uDAAM,CAAE,mBAAF,CAAN,IAAiC,OAAOA,uDAAM,CAAE,mBAAF,CAAN,CAA8BmG,SAArC,KAAmD,UAApF,IACNnG,uDAAM,CAAE,kBAAF,CADA,IAC0B,OAAOD,yDAAQ,CAAE,kBAAF,CAAR,CAA+B+E,2BAAtC,KAAsE,UADvG;AAEA;AAEM,MAAMsB,cAAc,GAAG,MAAMH,KAAK,CAAC/B,MAAnC;AAEA,MAAMmC,eAAe,GAAIC,KAAD,IAAW;AACtC,MAAIA,KAAJ,EAAW;AACPL,IAAAA,KAAK,GAAG,CACJ;AACA,OAAGA,KAAK,CAACjD,MAAN,CAAesD,KAAD,IAAWA,KAAK,CAACC,QAAN,KAAmBD,KAAK,CAACC,QAAlD,CAFC,EAGJD,KAHI,CAAR;AAKH;AACJ,CARM;AAUA,MAAME,2BAA2B,GAAIF,KAAD,IAAW;AAClD,QAAM;AAAEC,IAAAA,QAAQ,EAAE7B,OAAZ;AAAqB+B,IAAAA,IAAI,EAAE9B,SAA3B;AAAsC+B,IAAAA,UAAU,EAAEC;AAAlD,MAAsEL,KAA5E;AAEA,QAAMM,SAAS,GAAGvB,+DAAA,CAAwBV,SAAxB,CAAlB;AACA,QAAMkC,SAAS,GAAG1E,oEAA4B,CAACwC,SAAD,CAA9C;;AAEA,MAAI,CAACiC,SAAL,EAAgB;AACZ,WAAO,EAAP;AACH;;AAEJ,QAAM/D,QAAQ,GAAGiD,oDAAK,CACrBa,eAAe,CAACE,SAAD,CADM,EAErB;AACCC,IAAAA,kBAAkB,EAAEnC,SAAS,KAAK;AADnC,GAFqB,CAAtB;;AAOG,MAAI,CAAC9B,QAAQ,CAACqB,MAAd,EAAsB;AAClB,WAAO,EAAP;AACH;;AAED,SAAOrB,QAAQ,CAACoB,GAAT,CAAc8C,OAAD,KAAc;AAC9BrC,IAAAA,OAD8B;AAE9BC,IAAAA,SAF8B;AAGpCgC,IAAAA,eAHoC;AAIpCK,IAAAA,YAAY,EAAEpB,gDAAI,EAJkB;AAKpCqB,IAAAA,EAAE,EAAElB,IAAI,CACN,GAAEgB,OAAO,CAAC9D,IAAK,IAAG8D,OAAO,CAACnC,KAAM,IAAGmC,OAAO,CAAClC,MAAO,IAAIkC,OAAO,CAACG,KAAO,EAD/D,CAL4B;AAQ9B,OAAGH;AAR2B,GAAd,CAAb,CAAP;AAUH,CA/BM;AAiCA,MAAM3G,iBAAiB,GAAG,YAAoB;AAAA,MAAnBsE,OAAmB,uEAAT,IAAS;;AACjD,QAAMyC,WAAW,GAAGnH,uDAAM,CAAC,kBAAD,CAAN,CACfoH,4BADe,GAEfpE,MAFe,CAGXqE,UAAD,IACI3C,OAAO,GAAG2C,UAAU,CAACtC,aAAX,KAA6BL,OAAhC,GAA0C,KAAI,IACrDY,yDAAA,CAAmBrC,IAAD,IAAW,mBAAkBA,IAAK,EAApD,EAAuDS,QAAvD,CAAgE2D,UAAU,CAAC9C,MAA3E,CALQ,CAApB;;AAQA4C,EAAAA,WAAW,CAAC3C,OAAZ,CAAqB6C,UAAU,IAAI;AAC/BtH,IAAAA,yDAAQ,CAAC,kBAAD,CAAR,CAA6BuH,8BAA7B,CAA6DD,UAAU,CAACJ,EAAxE;AACH,GAFD;AAGH,CAZM;AAcA,MAAMM,kBAAkB,GAAIC,MAAD,IAAY;AAC7C,QAAMC,aAAa,GAAGD,MAAM,CAACxE,MAAP,CAAgBsD,KAAD,IAAWjB,+DAAA,CAAwBiB,KAAK,CAACG,IAA9B,CAA1B,CAAtB;AAEA,SAAOgB,aAAa,CAACC,OAAd,CAAsBlB,2BAAtB,CAAP;AACA,CAJM;AAMA,MAAMnG,cAAc,GAAG,UAACa,aAAD,EAA0D;AAAA,MAA1C;AAAEqF,IAAAA,QAAQ,GAAG,IAAb;AAAmBoB,IAAAA,MAAM,GAAG;AAA5B,GAA0C,uEAAP,EAAO;;AACvF,MAAIpB,QAAJ,EAAc;AACbnG,IAAAA,iBAAiB,CAACmG,QAAD,CAAjB;AACA;;AAED,QAAMY,WAAW,GAAGjG,aAAa,CAAC8B,MAAd,CAAuB+D,OAAD,IACzCA,OAAO,CAACa,KAAR,KAAkB,SAAlB,IAA+B,CAACD,MAAM,CAACjE,QAAP,CAAgBqD,OAAO,CAACE,EAAxB,CADb,CAApB;AAGA,QAAMY,sBAAsB,GAAGV,WAAW,CAACnE,MAAZ,CAAqB+D,OAAD,IAAaA,OAAO,CAAC9D,IAAR,CAAaS,QAAb,CAAsB,aAAtB,CAAjC,CAA/B;AAEAmE,EAAAA,sBAAsB,CACpBrD,OADF,CACW6C,UAAD,IAAgB;AACxB,UAAM;AAAE3C,MAAAA,OAAF;AAAWC,MAAAA,SAAX;AAAsBqC,MAAAA,YAAtB;AAAoC/D,MAAAA,IAApC;AAA0C2B,MAAAA,KAA1C;AAAiDC,MAAAA;AAAjD,QAA4DwC,UAAlE;AACA,UAAM,CAACZ,IAAD,IAASxD,IAAI,CAAC6E,KAAL,CAAW,GAAX,CAAf;;AAEA,QAAOzF,sBAAsB,CAACoE,IAAD,CAAtB,GAA+BpE,sBAAsB,CAACoE,IAAD,CAAtB,KAAiC,GAAhE,GAAsE,IAA7E,EAAsF;AACrF1G,MAAAA,yDAAQ,CAAC,kBAAD,CAAR,CAA6B+E,2BAA7B,CAAyD;AACxDP,QAAAA,MAAM,EAAG,mBAAkBtB,IAAK,EADwB;AAExD8B,QAAAA,aAAa,EAAEL,OAFyC;AAGxDM,QAAAA,kBAAkB,EAAE7C,oEAA4B,CAACwC,SAAD,CAHQ;AAIxDM,QAAAA,KAAK,EAAE;AACNC,UAAAA,KAAK,EAAEN,KADD;AAENO,UAAAA,GAAG,EAAEN;AAFC,SAJiD;AAQxDoC,QAAAA,EAAE,EAAED;AARoD,OAAzD;AAUA;AACD,GAjBF;AAmBAG,EAAAA,WAAW,CACTnE,MADF,CACWqE,UAAD,IAAgB,CAAEA,UAAU,CAACpE,IAAX,CAAgBS,QAAhB,CAAyB,aAAzB,CAD5B,EAEEc,OAFF,CAEW6C,UAAD,IAAgB;AACxB,UAAM;AAAE3C,MAAAA,OAAF;AAAWC,MAAAA,SAAX;AAAsBqC,MAAAA,YAAtB;AAAoC/D,MAAAA,IAApC;AAA0C2B,MAAAA,KAA1C;AAAiDC,MAAAA;AAAjD,QAA4DwC,UAAlE;AACA,UAAM,CAACZ,IAAD,IAASxD,IAAI,CAAC6E,KAAL,CAAW,GAAX,CAAf;;AAEA,QAAOzF,sBAAsB,CAACoE,IAAD,CAAtB,GAA+BpE,sBAAsB,CAACoE,IAAD,CAAtB,KAAiC,GAAhE,GAAsE,IAA7E,EAAsF;AACrF1G,MAAAA,yDAAQ,CAAC,kBAAD,CAAR,CAA6B+E,2BAA7B,CAAyD;AACxDP,QAAAA,MAAM,EAAG,mBAAkBtB,IAAK,EADwB;AAExD8B,QAAAA,aAAa,EAAEL,OAFyC;AAGxDM,QAAAA,kBAAkB,EAAE7C,oEAA4B,CAACwC,SAAD,CAHQ;AAIxDM,QAAAA,KAAK,EAAE;AACNC,UAAAA,KAAK,EAAEN,KADD;AAENO,UAAAA,GAAG,EAAEN;AAFC,SAJiD;AAQxDoC,QAAAA,EAAE,EAAED;AARoD,OAAzD;AAUA;AACD,GAlBF;AAmBA,CAhDM;AAkDA,MAAMe,mBAAmB,GAAGlC,gDAAQ,CAAC,MAAM;AACjD,MAAIG,kBAAJ,EAAwB;AACvB;AACA;;AAEDA,EAAAA,kBAAkB,GAAG,IAArB;AACA,QAAMM,KAAK,GAAGL,KAAK,CAAC+B,KAAN,EAAd;;AAEA,MAAI,CAAC1B,KAAL,EAAY;AACXN,IAAAA,kBAAkB,GAAG,KAArB;AACA;AACA;;AAED,QAAM9E,aAAa,GAAGsF,2BAA2B,CAACF,KAAD,CAAjD;;AAEA,MAAIpF,aAAa,CAACgD,MAAlB,EAA0B;AACzB,UAAM;AAAEqC,MAAAA;AAAF,QAAeD,KAArB;AACA,UAAMzD,QAAQ,GAAG7C,uDAAM,CAACoC,yCAAD,CAAN,CAAcjB,WAAd,EAAjB;AAEApB,IAAAA,yDAAQ,CAACqC,yCAAD,CAAR,CAAgB6F,WAAhB,CAA4B,CAC3B,GAAGpF,QAAQ,CAACG,MAAT,CAAiB+D,OAAD,IAAaA,OAAO,CAACrC,OAAR,KAAoB6B,QAAjD,CADwB,EAE3B,GAAGrF,aAFwB,CAA5B;AAKAb,IAAAA,cAAc,CAACa,aAAD,EAAgB;AAAEqF,MAAAA;AAAF,KAAhB,CAAd;AACA;;AAEDP,EAAAA,kBAAkB,GAAG,KAArB;;AAEA,MAAIC,KAAK,CAAC/B,MAAV,EAAkB;AACjB6D,IAAAA,mBAAmB;AACnB;AACD,CAhC0C,EAgCxC,GAhCwC,CAApC;;;;;;;;;;;;;;AClJP;AACA;AACA;AACA;AACA;AACA;CAEA;AACA;AACA;;AACA;AAEA,+DAAe,UAACK,IAAD,EAA8C;AAAA,MAAvC;AAAEtB,IAAAA,kBAAkB,GAAG;AAAvB,GAAuC,uEAAP,EAAO;AACzD,QAAMuB,OAAO,GAAGF,wDAAK,CAACC,IAAD,EAAO;AAAEtB,IAAAA;AAAF,GAAP,CAArB;AACH,QAAM;AAAEwB,IAAAA;AAAF,MAAeJ,8CAAK,CAACG,OAAD,CAA1B;;AAEA,MAAI,CAACC,QAAQ,CAACpE,MAAd,EAAsB;AACrB,WAAO,EAAP;AACA;;AAED,SAAOoE,QAAQ,CAACrE,GAAT,CAAcsE,KAAD,IAAW;AAC9B,UAAM;AAAEC,MAAAA,MAAM,EAAEtB,KAAV;AAAiBuB,MAAAA,QAAQ,EAAE;AAAEvD,QAAAA,KAAK,EAAE;AAAEL,UAAAA,MAAM,EAAED;AAAV,SAAT;AAA4BO,QAAAA,GAAG,EAAE;AAAEN,UAAAA;AAAF;AAAjC,OAA3B;AAA0E6D,MAAAA,OAA1E;AAAmFC,MAAAA,KAAnF;AAA0FpE,MAAAA,MAA1F;AAAkGqE,MAAAA;AAAlG,QAA+GL,KAArH;AAEA,WAAO;AACNrB,MAAAA,KADM;AAENjE,MAAAA,IAAI,EAAEsB,MAAM,CAACsE,OAAP,CAAe,SAAf,EAA0B,EAA1B,CAFA;AAGNC,MAAAA,KAAK,EAAEH,KAAK,GAAG,SAAH,GAAe,YAHrB;AAIND,MAAAA,OAAO,EAAG,GAAGA,OAAO,CAACZ,KAAR,CAAe,OAAf,EAAyB,CAAzB,EAA4BiB,UAA5B,CAAwC,GAAxC,EAA6C,GAA7C,CAAoD,GAJ3D;AAKNC,MAAAA,YAAY,EAAEJ,QALR;AAMNhE,MAAAA,KANM;AAONC,MAAAA;AAPM,KAAP;AASA,GAZM,CAAP,CAR4D,CAsB5D;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACA,CAjCD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,SAASqD,KAAT,CAAehB,KAAf,EAAsBgD,MAAtB,EAA8B;AACjC,QAAMC,OAAO,GAAGC,YAAY,CAACF,MAAD,CAA5B;AACA,SAAOG,IAAI,CAACnD,KAAD,EAAQiD,OAAO,CAACnH,MAAhB,EAAwBsH,QAAQ,CAACH,OAAO,CAAC/B,IAAT,CAAhC,CAAX;AACH;;AAED,SAASkC,QAAT,CAAkBH,OAAlB,EAA2B;AACzB,SAAOhB,gDAAO,GACXoB,GADI,CACAnB,sDADA,EAEJmB,GAFI,CAEAlB,uDAFA,EAEgBc,OAFhB,EAGJI,GAHI,CAGAjB,0DAHA,EAGmBa,OAHnB,EAIJI,GAJI,CAIAhB,uDAJA,EAIgBY,OAJhB,EAKJI,GALI,CAKAf,0DALA,EAKmBW,OALnB,EAMJI,GANI,CAMAd,iEANA,EAMyBU,OANzB,EAOJI,GAPI,CAOAb,+DAPA,EAOuBS,OAPvB,EAQJI,GARI,CAQAZ,6DARA,EAQqBQ,OARrB,EASJI,GATI,CASAX,iEATA,EASyBO,OATzB,EAUJI,GAVI,CAUAV,uDAVA,EAUeM,OAVf,EAWJI,GAXI,CAWAT,yDAXA,EAWiBK,OAXjB,EAYJI,GAZI,CAYAR,0DAZA,EAYkBI,OAZlB,EAaJI,GAbI,CAaAP,4DAbA,EAaoBG,OAbpB,CAAP;AAcD;;AAED,SAASE,IAAT,CAAcnD,KAAd,EAAqBiD,OAArB,EAA8BK,SAA9B,EAAyC;AACvC,QAAMC,IAAI,GAAG,IAAIxB,yCAAJ,CAAU/B,KAAV,CAAb;AACA,QAAMwD,IAAI,GAAGF,SAAS,CAACD,GAAV,CAAcvH,MAAd,EAAsBmH,OAAtB,EAA+BjC,KAA/B,CAAqCuC,IAArC,CAAb;AAEAD,EAAAA,SAAS,CAACG,OAAV,CAAkBD,IAAlB,EAAwBD,IAAxB;AAEAvB,EAAAA,iDAAI,CAACuB,IAAD,CAAJ;AAEA,SAAOA,IAAP;AACD;;AAED,SAASL,YAAT,CAAsBD,OAAtB,EAA+B;AAC7B,MAAIS,KAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,QAAJ;;AAEA,MAAIC,KAAK,CAACC,OAAN,CAAcd,OAAd,CAAJ,EAA4B;AAC1BS,IAAAA,KAAK,GAAGT,OAAR;AACD,GAFD,MAEO,IAAIA,OAAJ,EAAa;AAClBS,IAAAA,KAAK,GAAGT,OAAO,CAACS,KAAhB;AACAC,IAAAA,IAAI,GAAGV,OAAO,CAACU,IAAf;AACAC,IAAAA,QAAQ,GAAGX,OAAO,CAACW,QAAnB;AACAC,IAAAA,QAAQ,GAAGZ,OAAO,CAACe,iBAAnB;AACD;;AAED,SAAO;AAAClI,IAAAA,MAAM,EAAE;AAAC4H,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAT;AAAwBzC,IAAAA,IAAI,EAAE;AAAC0C,MAAAA,QAAD;AAAWC,MAAAA;AAAX;AAA9B,GAAP;AACD;;AAED,SAAS/H,MAAT,GAA8B;AAAA,MAAdmH,OAAc,uEAAJ,EAAI;;AAC5B,MAAIA,OAAO,CAACS,KAAR,IAAiBT,OAAO,CAACU,IAA7B,EAAmC;AACjC,UAAM,IAAIM,KAAJ,CACJ,6DADI,CAAN;AAGD;;AAED,SAAOlB,mEAAoB,CAAC;AAC1BxD,IAAAA,IAAI,EAAE,MADoB;AAE1B2E,IAAAA,KAAK,EAAEC,OAAO,CAAClB,OAAO,CAACU,IAAT,CAFY;AAG1BS,IAAAA,MAAM,EAAEnB,OAAO,CAACU,IAHU;AAI1BU,IAAAA,OAAO,EAAEpB,OAAO,CAACS,KAJS;AAK1BrG,IAAAA,MAAM,EAAE,CAAC,iBAAD,EAAoB,oBAApB;AALkB,GAAD,CAA3B;AAOD;;;;;;;;;;;;;;;;;;;;;ACnFM,SAASlE,cAAT,CAAwB8G,WAAxB,EAAqC;AAC3C,SAAO;AACNlE,IAAAA,IAAI,EAAE,iBADA;AAENkE,IAAAA;AAFM,GAAP;AAIA;AAAA;AAEM,SAASqE,UAAT,CAAoBzE,OAApB,EAA6B;AACnC,SAAO;AACN9D,IAAAA,IAAI,EAAE,aADA;AAEN8D,IAAAA;AAFM,GAAP;AAIA;AAAA;AAEM,SAASkB,WAAT,CAAqBpF,QAArB,EAA+B;AACrC,SAAO;AACNI,IAAAA,IAAI,EAAE,cADA;AAENJ,IAAAA;AAFM,GAAP;AAIA;AAAA;AAEM,SAAS4I,aAAT,CAAuBhF,IAAvB,EAA6B;AACnC,SAAO;AACNxD,IAAAA,IAAI,EAAE,gBADA;AAENwD,IAAAA;AAFM,GAAP;AAIA;AAAA;AAEM,SAASiF,aAAT,CAAuBjF,IAAvB,EAA6B;AACnC,SAAO;AACNxD,IAAAA,IAAI,EAAE,gBADA;AAENwD,IAAAA;AAFM,GAAP;AAIA;AAAA;AAEM,SAASkF,iBAAT,CAA2BC,KAA3B,EAAkC;AACxC,SAAO;AACN3I,IAAAA,IAAI,EAAE,oBADA;AAEN2I,IAAAA;AAFM,GAAP;AAIA;AAAA;AAEM,SAASC,kBAAT,CAA4BtL,QAA5B,EAAsC;AAC5C,SAAO;AACN0C,IAAAA,IAAI,EAAE,sBADA;AAEN1C,IAAAA;AAFM,GAAP;AAIA;AAAA;;;;;;;;;;;;;;;;;;;;AC/CD;AAEA;AACA;AACA;;AACA;AACA;AACA;AAEA,MAAM4L,UAAU,GAAG,uBAAnB;AAEO,MAAM/J,KAAK,GAAG0J,iEAAgB,CAACK,UAAD,EAAa;AACjDH,EAAAA,OADiD;AAEjDC,EAAAA,SAFiD;AAGjDC,EAAAA,OAAOA,uCAAAA;AAH0C,CAAb,CAA9B;AAMPH,yDAAQ,CAAC3J,KAAD,CAAR;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA,MAAMiK,qBAAqB,GAAG;AAC7BC,EAAAA,YAAY,EAAE,IADe;AAE7BC,EAAAA,iBAAiB,EAAExI,MAAM,CAACC,IAAP,CAAY9B,8DAAZ,EAAoCsK,MAApC,CAA2C,CAACC,WAAD,EAAcxJ,IAAd,KAAuB;AACpFwJ,IAAAA,WAAW,CAACxJ,IAAD,CAAX,GAAoB,IAApB;AACA,WAAOwJ,WAAP;AACA,GAHkB,EAGhB,EAHgB,CAFU;AAM7BjF,EAAAA,MAAM,EAAE;AANqB,CAA9B;AASO,SAAS/D,WAAT,GAAoD;AAAA,MAA/BmE,KAA+B,uEAAvB;AAAEgE,IAAAA,KAAK,EAAE;AAAT,GAAuB;AAAA,MAARc,MAAQ;;AAC1D,UAAQA,MAAM,CAACzJ,IAAf;AACC,SAAK,oBAAL;AACC,aAAO,EACN,GAAG2E,KADG;AAENgE,QAAAA,KAAK,EAAEc,MAAM,CAACd;AAFR,OAAP;;AAID;AACC,aAAOhE,KAAP;AAPF;AASA;AAEM,SAAS/E,QAAT,GAAgD;AAAA,MAA9B+E,KAA8B,uEAAtB;AAAE+E,IAAAA,IAAI,EAAE;AAAR,GAAsB;AAAA,MAARD,MAAQ;;AACtD,UAAQA,MAAM,CAACzJ,IAAf;AACC,SAAK,cAAL;AACC,aAAO,EACN,GAAG2E,KADG;AAEN+E,QAAAA,IAAI,EAAED,MAAM,CAAC7J;AAFP,OAAP;;AAID,SAAK,gBAAL;AACC,aAAO,EACN,GAAG+E,KADG;AAEN+E,QAAAA,IAAI,EAAE/E,KAAK,CAAC+E,IAAN,CAAW3J,MAAX,CAAmB+D,OAAD,IAAaA,OAAO,CAACE,EAAR,KAAeyF,MAAM,CAACjG,IAArD;AAFA,OAAP;;AAID,SAAK,gBAAL;AACC,YAAMM,OAAO,GAAGa,KAAK,CAAC+E,IAAN,CAAWC,IAAX,CAAiB7F,OAAD,IAAaA,OAAO,CAACC,YAAR,KAAyB0F,MAAM,CAACjG,IAA7D,CAAhB;AAEA,aAAO,EACN,GAAGmB,KADG;AAEN+E,QAAAA,IAAI,EAAE,CACL,GAAG/E,KAAK,CAAC+E,IAAN,CAAW3J,MAAX,CAAmB+D,OAAD,IAAaA,OAAO,CAACC,YAAR,KAAyB0F,MAAM,CAACjG,IAA/D,CADE,EAEL,EACC,GAAGM,OADJ;AAECa,UAAAA,KAAK,EAAE;AAFR,SAFK;AAFA,OAAP;;AAUD;AACC,aAAOA,KAAP;AAzBF;AA2BA;AAEM,SAASiF,IAAT,GAAmE;AAAA,MAArDjF,KAAqD,uEAA7C;AAAErH,IAAAA,QAAQ,EAAE8L;AAAZ,GAA6C;AAAA,MAARK,MAAQ;;AACzE,UAAQA,MAAM,CAACzJ,IAAf;AACC,SAAK,sBAAL;AACC,aAAO,EACN,GAAG2E,KADG;AAENrH,QAAAA,QAAQ,EAAE,EACT,GAAGqH,KAAK,CAACrH,QADA;AAET,aAAGmM,MAAM,CAACnM;AAFD;AAFJ,OAAP;;AAOD;AACC,aAAOqH,KAAP;AAVF;AAYA;AAED,+DAAewE,gEAAe,CAAC;AAC9BvJ,EAAAA,QAD8B;AAE9BY,EAAAA,WAF8B;AAG9BoJ,EAAAA;AAH8B,CAAD,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAEA,MAAM;AAAE9G,EAAAA;AAAF,IAAWtF,MAAjB;AAEO,MAAMU,WAAW,GAAIyG,KAAD,IAAWA,KAAK,CAAC/E,QAAN,CAAe8J,IAA9C;AAEA,MAAMG,UAAU,GAAG,CAAClF,KAAD,EAAQX,EAAR,KAAeW,KAAK,CAAC/E,QAAN,CAAe8J,IAAf,CAAoBC,IAApB,CACrC;AAAA,MAAE;AAAE5F,IAAAA,YAAY,EAAE+F;AAAhB,GAAF;AAAA,SAAmCA,SAAS,KAAK9F,EAAjD;AAAA,CADqC,CAAlC;AAIA,MAAM+F,cAAc,GAAIpF,KAAD,IAAWA,KAAK,CAACT,WAAN,CAAkBwF,IAApD;AAEA,MAAMM,aAAa,GAAG,CAACrF,KAAD,EAAQX,EAAR,KAAeW,KAAK,CAACT,WAAN,CAAkBwF,IAAlB,CAAuBC,IAAvB,CACxC;AAAA,MAAE;AAAE5F,IAAAA;AAAF,GAAF;AAAA,SAAwBA,YAAY,KAAKC,EAAzC;AAAA,CADwC,CAArC;AAIA,MAAMiG,qBAAqB,GAAItF,KAAD,IAAW;AAC5C,QAAMT,WAAW,GAAGS,KAAK,EAAET,WAAP,EAAoBwF,IAAxC;;AAEA,MAAK,CAACxF,WAAW,EAAEjD,MAAnB,EAA4B;AACxB,UAAM;AAAEiJ,MAAAA;AAAF,QAAiBnN,uDAAM,CAAC,aAAD,CAAN,CAAsBoN,sBAAtB,CAA6C,MAA7C,KAAwD,EAA/E;;AAEA,QAAK,CAAED,UAAP,EAAoB;AAChB,aAAO,EAAP;AACH;;AAED,WAAOA,UAAP;AACH;;AAED,SAAOhG,WAAW,CACbnE,MADE,CACOqE,UAAD,IAAgBA,UAAU,CAACO,KAAX,KAAqB,SAD3C,EAEF3D,GAFE,CAGC;AAAA,QAAE;AAAEhB,MAAAA,IAAF;AAAQ2B,MAAAA,KAAR;AAAeC,MAAAA,MAAf;AAAuBqC,MAAAA;AAAvB,KAAF;AAAA,WACInB,IAAI,CACC,GAAG9C,IAAM,IAAI2B,KAAO,IAAIC,MAAQ,IAAIqC,KAAO,EAD5C,CADR;AAAA,GAHD,CAAP;AAQH,CArBM;AAuBA,MAAMmG,gBAAgB,GAAG,CAACzF,KAAD,EAAQlD,OAAR,KAAoBkD,KAAK,CAAC/E,QAAN,CAAe8J,IAAf,CAAoB3J,MAApB,CAChD;AAAA,MAAE;AAAE0B,IAAAA;AAAF,GAAF;AAAA,SAAmBA,OAAO,KAAKA,OAA/B;AAAA,CADgD,CAA7C;AAIA,MAAMD,iBAAiB,GAAG,CAACmD,KAAD,EAAQ3E,IAAR,KAAiB2E,KAAK,CAAC/E,QAAN,CAAe8J,IAAf,CAAoB3J,MAApB,CAC9C;AAAA,MAAE;AAAEC,IAAAA;AAAF,GAAF;AAAA,SAAgBA,IAAI,KAAKA,IAAzB;AAAA,CAD8C,CAA3C;AAIA,MAAML,cAAc,GAAIgF,KAAD,IAAWA,KAAK,CAACnE,WAAN,CAAkBmI,KAApD;AAEA,MAAM0B,eAAe,GAAI1F,KAAD,IAAWA,KAAK,CAACiF,IAAN,CAAWtM,QAA9C;;;;;;;;;;;;;;;;;;;;;ACjDP;AACA;AACA;AACC;AAED;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AASA,IAAImN,QAAQ,GAAG,EAAf;AAEA,MAAMC,0BAA0B,GAAG9H,gDAAQ,CAAEwC,OAAD,IAAa;AACxDtI,EAAAA,yDAAQ,CAACqC,yCAAD,CAAR,CAAgBuJ,iBAAhB,CAAkC8B,kEAAY,CAACpF,OAAD,CAA9C;AACA,CAF0C,EAExC,GAFwC,CAA3C;AAIAmF,2DAAQ,CAAC,MAAM;AACdD,EAAAA,0DAAS,CAAE,MAAM;AAChB,UAAMlF,OAAO,GAAGrI,uDAAM,CAAC,aAAD,CAAN,CAAsBoN,sBAAtB,CAA6C,SAA7C,CAAhB;AACA,UAAMQ,eAAe,GAAG,OAAOvF,OAAP,KAAmB,QAAnB,GAA8BA,OAAO,CAACQ,OAAR,CAAgB,eAAhB,EAAiC,EAAjC,CAA9B,GAAqE,EAA7F;AACA,UAAMhG,QAAQ,GAAG7C,uDAAM,CAACoC,yCAAD,CAAN,CAAcjB,WAAd,EAAjB;;AAEA,QAAI,CAACyM,eAAD,IAAqBA,eAAe,KAAKF,QAApB,IAAgC7K,QAAQ,CAACqB,MAAlE,EAA2E;AAC1E;AACA;;AAEDyJ,IAAAA,0BAA0B,CAACtF,OAAD,CAA1B;;AAEA,QAAI,CAACnC,4EAAqB,EAA1B,EAA8B;AAC7B;AACA;;AAED,UAAMsB,MAAM,GAAGxH,uDAAM,CAAC,mBAAD,CAAN,CAA4BmG,SAA5B,EAAf;;AAEA,QAAI,CAACtD,QAAQ,CAACqB,MAAV,IAAoBsD,MAAM,CAACtD,MAA/B,EAAuC;AACtC,YAAMhD,aAAa,GAAGqG,yEAAkB,CAACC,MAAD,CAAxC;;AAEA,UAAItG,aAAa,CAACgD,MAAlB,EAA0B;AACzB,cAAM2J,kBAAkB,GAAG7N,uDAAM,CAACoC,yCAAD,CAAN,CAAc8K,qBAAd,EAA3B;AAEAnN,QAAAA,yDAAQ,CAACqC,yCAAD,CAAR,CAAgB6F,WAAhB,CAA4B/G,aAA5B;AACAb,QAAAA,qEAAc,CAACa,aAAD,EAAgB;AAC7ByG,UAAAA,MAAM,EAAEkG;AADqB,SAAhB,CAAd;AAGA;AACD;;AAED,UAAMC,aAAa,GAAG9N,uDAAM,CAAC,mBAAD,CAAN,CAA4B+N,gBAA5B,EAAtB;;AAEA,QAAID,aAAJ,EAAmB;AAClBzH,MAAAA,sEAAe,CAACyH,aAAD,CAAf;AACA;;AAED,QAAI1H,qEAAc,KAAK,CAAvB,EAA0B;AACzB2B,MAAAA,0EAAmB;AACnB;;AAED2F,IAAAA,QAAQ,GAAGE,eAAX;AACA,GAzCQ,CAAT;AA0CA,CA3CO,CAAR;;;;;;;;;;;;;;;AC5BA;AACA;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AAEA;CAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACZ;AACA;AACA;AACA;;AAEAL,0DAAS,CAAC,MAAM;AACf,QAAMU,eAAe,GAAGC,QAAQ,CAACC,aAAT,CACvB,2CADuB,CAAxB,CADe,CAKf;;AACA,MAAIF,eAAe,IAAI,CAAC/H,4EAAqB,EAA7C,EAAiD;AAChD;AACA;;AAEDsH,EAAAA,2DAAQ,CAAC,MAAM;AACd,UAAMY,aAAa,GAAGF,QAAQ,CAACC,aAAT,CACrB,iCADqB,CAAtB,CADc,CAKd;;AACA,QAAI,CAACC,aAAL,EAAoB;AACnB;AACA;;AAED,UAAMC,aAAa,GAAGH,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAtB;AACAD,IAAAA,aAAa,CAACpH,EAAd,GAAmB,0CAAnB;AACAoH,IAAAA,aAAa,CAACE,KAAd,CAAoBC,OAApB,GAA8B,eAA9B;AAEAJ,IAAAA,aAAa,CAACK,WAAd,CAA0BJ,aAA1B;AAEAL,IAAAA,0DAAM,CACL,kEAAC,kFAAD,OADK,EAELE,QAAQ,CAACQ,cAAT,CAAwB,0CAAxB,CAFK,CAAN;AAIA,GApBO,CAAR;AAqBA,CA/BQ,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;CAEA;;AAEA,MAAM;AAAE3I,EAAAA;AAAF,IAAWtF,MAAjB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMqO,kBAAkB,GAAIC,OAAD,IAAaA,OAAO,CAACC,qBAAR,EAAxC;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,OAAO,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBnI,IAAAA;AAAnB,GAAsC;AACtD,QAAM,CAAC6G,kBAAD,EAAqBuB,qBAArB,IAA8CjP,4DAAQ,CAAE,IAAF,CAA5D;AAEA,QAAM;AAAEgN,IAAAA;AAAF,MAAiBrN,0DAAS,CAC9BE,MAAD,IAAYA,MAAM,CAAC,aAAD,CAAN,CAAsBoN,sBAAtB,CAA6C,MAA7C,KAAwD,EADrC,CAAhC;AAGA,QAAMiC,kBAAkB,GAAGvP,0DAAS,CACjCE,MAAF,IAAcA,MAAM,CAAE,uBAAF,CAAN,CAAkC8M,UAAlC,CAA8C9F,YAA9C,CADqB,CAApC;AAIA,QAAM;AAAEsI,IAAAA;AAAF,MAAeX,4DAAW,CAAC,aAAD,CAAhC;AAEAzO,EAAAA,6DAAS,CAAC,MAAM;AACf,QAAIiN,UAAJ,EAAgB;AACfiC,MAAAA,qBAAqB,CAACjC,UAAD,CAArB;AACA;AACD,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;AAMA,QAAM;AACL;AACA;AACAvI,IAAAA,KAHK;AAILC,IAAAA,MAJK;AAKL6D,IAAAA,OALK;AAMLzF,IAAAA,IANK;AAOLiE,IAAAA,KAPK,CAQL;;AARK,MASFmI,kBAAkB,IAAI,EAT1B;AAUA,QAAM,CAAEE,KAAF,IAAYtM,IAAI,EAAE6E,KAAN,CAAa,GAAb,KAAsB,EAAxC,CA5BsD,CA8BtD;AACA;AACA;AAEA;;AAEA,SACCoH,OAAO,IAAIxG,OAAX,GACC,kEAAC,0DAAD;AACC,aAAS,EAAI,6CAA4CzF,IAAK,EAD/D;AAEC,YAAQ,EAAC,YAFV;AAGC,iBAAa,EAAE,MAAM6L,kBAAkB,CAACK,MAAD;AAHxC,KAKC,8EAAMI,KAAN,CALD,EAMC,6EAAK7G,OAAL,CAND,EAOC,kEAAC,uDAAD;AAAM,WAAO,EAAC;AAAd,KAEE8G,KAAA,GACC,kEAAC,yDAAD;AACC,WAAO,EAAC,UADT;AAEC,WAAO,EAAG,MAAM;AACfG,MAAAA,OAAO,CAACC,GAAR,CAAa5P,uDAAM,CAAEoC,yCAAF,CAAN,CAAgB0K,UAAhB,CAA4B9F,YAA5B,CAAb;AACA;AAJF,KAMG5F,mDAAE,CAAE,SAAF,EAAa,gBAAb,CANL,CADD,GASI,CAXN,EAaC,kEAAC,yDAAD;AACC,WAAO,EAAC,WADT;AAEC,WAAO,EAAG,MAAM;AACfrB,MAAAA,yDAAQ,CAAEqC,yCAAF,CAAR,CAAkBsJ,aAAlB,CAAiC1E,YAAjC;;AACAjH,MAAAA,yDAAQ,CAAC,kBAAD,CAAR,CAA6BuH,8BAA7B,CAA6DN,YAA7D;;AAEAsI,MAAAA,QAAQ,CAAC;AACRO,QAAAA,IAAI,EAAE;AACL1C,UAAAA,UAAU,EAAE,CACX,GAAGU,kBADQ,EAEX9H,IAAI,CACF,GAAE9C,IAAK,IAAG2B,KAAM,IAAGC,MAAO,IAAIqC,KAAO,EADnC,CAFO;AADP;AADE,OAAD,CAAR;AAUA;AAhBF,KAkBG9F,mDAAE,CAAE,QAAF,EAAY,gBAAZ,CAlBL,CAbD,CAPD,CADD,GAiEI,IAlEL;AAoEA,CAxGD;;AA0GAmM,0DAAS,CAAC,MAAM;AAEfC,EAAAA,2DAAQ,CAAC,MAAM;AACd,UAAMsC,aAAa,GAAG5B,QAAQ,CAACC,aAAT,CAAuB,0BAAvB,CAAtB;AACA,UAAM4B,QAAQ,GAAG/P,uDAAM,CAAC,mBAAD,CAAN,CAA4B+P,QAA5B,EAAjB;;AAEA,QAAI,CAACD,aAAL,EAAoB;AACnB;AACA;;AAED,QAAIE,cAAc,GAAG9B,QAAQ,CAACQ,cAAT,CAAwB,gCAAxB,CAArB;AACA,UAAMW,kBAAkB,GAAGnB,QAAQ,CAACC,aAAT,CAC1B,4GAD0B,CAA3B;;AAIA,QAAI,CAACkB,kBAAD,IAAuB,CAACW,cAA5B,EAA4C;AAC3C;AACA;;AAED,QAAI,CAACA,cAAL,EAAqB;AACpBA,MAAAA,cAAc,GAAG9B,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAjB;AACA0B,MAAAA,cAAc,CAAC/I,EAAf,GAAoB,gCAApB;AAEA6I,MAAAA,aAAa,CAACG,OAAd,CAAsBD,cAAtB;AACA;;AAEDhC,IAAAA,0DAAM,CACL,kEAAC,OAAD;AACC,aAAO,EAAE,CAAC,CAACqB,kBAAF,IAAwB,CAACU,QADnC;AAEC,YAAM,EAAEV,kBAFT;AAGC,kBAAY,EAAEA,kBAAkB,EAAEpI,EAApB,EAAwB4B,OAAxB,CAAgC,kBAAhC,EAAoD,EAApD;AAHf,MADK,EAMLqF,QAAQ,CAACQ,cAAT,CAAwB,gCAAxB,CANK,CAAN;AAQA,GAhCO,CAAR;AAiCA,CAnCQ,CAAT;;;;;;;;;;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;;AACO,MAAMjB,YAAY,GAAIpF,OAAD,IAAa;AACrC,QAAMD,IAAI,GAAGD,kDAAK,CAACE,OAAD,CAAlB;AAEA,QAAMiI,UAAU,GAAGlI,IAAI,CAACS,OAAL,CAAa,OAAb,EAAsB,EAAtB,EAA0Bf,KAA1B,CAAgC,KAAhC,EAAuC9E,MAAvC,CAA+CuN,IAAD,IAAUA,IAAI,CAACrM,MAA7D,CAAnB;AACA,QAAM;AAAEsM,IAAAA;AAAF,MAAgBH,oDAAQ,CAACC,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAAD,CAA9B;AACA,QAAMC,KAAK,GAAGF,SAAS,CAAChE,MAAV,CAAiB,CAACC,WAAD,EAAckE,QAAd,KAA2B;AACtD,UAAM;AAAED,MAAAA;AAAF,QAAYL,oDAAQ,CAACM,QAAD,CAA1B;AAEAlE,IAAAA,WAAW,CAACmE,IAAZ,CAAiB,GAAGF,KAApB;AACA,WAAOjE,WAAP;AACH,GALa,EAKX,EALW,CAAd;AAOA,QAAMoE,SAAS,GAAGT,2DAAgB,CAAChI,IAAD,EAAO,OAAP,CAAlC;AACA,QAAM0I,cAAc,GAAGV,2DAAgB,CAAChI,IAAD,EAAO,6BAAP,CAAvC;AACA,QAAM2I,sBAAsB,GAAG3I,IAAI,CAACG,KAAL,CAAW,cAAX,CAA/B;AACA,QAAMyI,OAAO,GAAG5I,IAAI,CAACG,KAAL,CAAW,WAAX,GAAyBrE,MAAzB,IAAmC,CAAnD;AACA,QAAMxB,KAAK,GAAGwN,2EAAoB,CAAC;AAC/BS,IAAAA,QAAQ,EAAEH,SAAS,CAACtM,MADW;AAE/B+M,IAAAA,IAAI,EAAEJ,SAFyB;AAG/BK,IAAAA,SAAS,EAAEH,sBAAsB,EAAE7M,MAAxB,IAAkC;AAHd,GAAD,CAAlC;AAKA,QAAM;AAAEvB,IAAAA,QAAQ,EAAEwO;AAAZ,MAA8BxO,kDAAQ,CAAC+N,KAAD,CAA5C;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAc3O,oEAAW,CAAC2F,IAAD,EAAO;AAAEiJ,IAAAA,cAAc,EAAE;AAAlB,GAAP,CAA/B;AAEA,SAAO;AACHf,IAAAA,UAAU,EAAEA,UAAU,CAACpM,MADpB;AAEHsM,IAAAA,SAAS,EAAEA,SAAS,CAACtM,MAFlB;AAGHwM,IAAAA,KAAK,EAAEG,SAHJ;AAIHS,IAAAA,UAAU,EAAER,cAJT;AAKHpO,IAAAA,KAAK,EAAEmB,IAAI,CAACC,KAAL,CAAWpB,KAAX,CALJ;AAMHsO,IAAAA,OANG;AAOHrO,IAAAA,QAAQ,EAAEwO,aAPP;AAQH1O,IAAAA,WAAW,EAAE2O;AARV,GAAP;AAUH,CAlCM;;;;;;;;;;;;;;;ACtBP;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASG,YAAT,CAAuBnJ,IAAvB,EAA8B;AAC5C,SAAOA,IAAI,CAACS,OAAL,CAAc,iCAAd,EAAiD,EAAjD,CAAP;AACA;;;;;;;;;;;;;;;ACTD;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS2I,iBAAT,CAA2BpJ,IAA3B,EAAiC;AAC/C,SAAOA,IAAI,CAACS,OAAL,CAAc,kBAAd,EAAkC,EAAlC,CAAP;AACA;;;;;;;;;;;;;;;ACTD;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS4I,iBAAT,CAA4BrJ,IAA5B,EAAmC;AACjD,SAAOA,IAAI,CAACS,OAAL,CAAc,SAAd,EAAyB,EAAzB,CAAP;AACA;;;;;;;;;;;;;;;ACTD;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS6I,WAAT,CAAsBtJ,IAAtB,EAA6B;AAC3C,SAAOA,IAAI,CAACS,OAAL,CAAc,YAAd,EAA4B,GAA5B,CAAP;AACA;;;;;;;;;;;;;;;ACTD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS8I,SAAT,CAAmBvJ,IAAnB,EAAyBtB,kBAAzB,EAA6C;AAC3D,SAAOsB,IAAI,CACTW,UADK,CACO,WADP,EACoB,GADpB,EAELF,OAFK,CAEI,mBAFJ,EAEyB,EAFzB,EAGLA,OAHK,CAGI,mBAHJ,EAGyB,GAHzB,EAILf,KAJK,CAIE,oBAJF,EAIyB9E,MAJzB,CAIgCqI,OAJhC,EAIyCoF,IAJzC,CAI8C3J,kBAAkB,GAAG,GAAH,GAAS,EAJzE,CAAP;AAKA;;;;;;;;;;;;;;;;;;;;;;ACjBD;AAEA;AACA;AACA;AACA;AACA;AAEO,MAAMqB,KAAK,GAAG,UAACC,IAAD;AAAA,MAAO;AAAEtB,IAAAA,kBAAkB,GAAG;AAAvB,GAAP,uEAAuC,EAAvC;AAAA,SAA8CsB,IAAI,GAAI,GAC1EwJ,4CAAI,CACHC,4DADG,EAEHN,sDAFG,EAGHG,qDAHG,EAIHD,4DAJG,EAKHE,mDALG,CAAJ,CAMEvJ,IANF,EAMQtB,kBANR,CAOA,IARsE,GAQhE,EARc;AAAA,CAAd;;;;;;;;;;;;;;;;;ACRP;AAEO,MAAMuJ,QAAQ,GAAIjI,IAAD,IAAU;AACjC,QAAM2J,SAAS,GAAG,IAAID,2DAAJ,EAAlB;AACAC,EAAAA,SAAS,CAACC,QAAV,CAAmB5J,IAAnB;;AAEA,MAAI;AACH,WAAO;AACNoI,MAAAA,SAAS,EAAEuB,SAAS,CAACE,YAAV,EADL;AAENvB,MAAAA,KAAK,EAAEqB,SAAS,CAACG,SAAV;AAFD,KAAP;AAIA,GALD,CAKE,OAAMC,KAAN,EAAa;AACd,WAAO;AACN3B,MAAAA,SAAS,EAAE,CADL;AAENE,MAAAA,KAAK,EAAE;AAFD,KAAP;AAIA;AACD,CAfM;;;;;;;;;;ACFP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB;;AAEhB;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK,KAA6B;AAClC;AACA;AACA,GAAG,SAAS,IAA4E;AACxF;AACA,EAAE,iCAAqB,EAAE,mCAAE;AAC3B;AACA,GAAG;AAAA,kGAAC;AACJ,GAAG,KAAK,EAEN;AACF,CAAC;;;;;;;;;;;;ACzDY;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,4BAA4B,iDAAiD;;AAE7E;AACA,OAAO;AACP,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;;AAEA;AACA,MAAM,IAA6B;AACnC;AACA;;AAEA;AACA,OAAO,EAGJ;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;AC/HD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACjKA;AACA,MAAM,IAA0C;AAChD,IAAI,mCAAO;AACX;AACA,KAAK;AAAA,kGAAC;AACN,IAAI,KAAK,EAIN;AACH,EAAE;AACF,gBAAgB,mBAAO,CAAC,qEAAgB;AACxC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA,sEAAsE,mCAAmC;AACzG;;AAEA;AACA,CAAC;;;;;;;;;;;AChCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa,sEAAsE,qBAAM,EAAE,qBAAM,UAAU,qBAAM,EAAE,qBAAM,0BAA0B,cAAc,qDAAqD,cAAc,yCAAyC,gJAAgJ,wLAAwL,cAAc,4FAA4F,gBAAgB,YAAY,uUAAuU,gBAAgB,uBAAuB,0EAA0E,iGAAiG,uBAAuB,uBAAuB,sDAAsD,UAAU,qCAAqC,6VAA6V,UAAU,cAAc,aAAa,OAAO,sBAAsB,qBAAqB,0EAA0E,iGAAiG,wEAAwE,8DAA8D,sCAAsC,iBAAiB,KAA2B,EAAE,KAA0B,6CAA6C,qBAAqB,IAAI,CAAiB,CAAC;;;;;;;;;;;ACRlzE;;AAEZ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AClCY;;AAEZ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AClCA;;AAEA;AACA;AACA,MAAM,IAA0F;AAChG;AACA;AACA,IAAI,KAAK,EAQN;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc;AACd;AACA;AACA,8BAA8B,IAAI;AAClC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;ACtfD;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA,aAAa,6CAA6C;AAC1D;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,uCAAuC;AACvC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,KAAK;;AAEjC;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC7Ia;;AAEb;AACA,YAAY,mBAAO,CAAC,kFAAO;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,SAAS;AAC1D;AACA;AACA,kDAAkD,OAAO;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC7EA;;AAEA;AACA;AACA;;AAEA,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;;AAEf;AACA;AACA;;AAEA,cAAc;AACdnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,oFAAU;;AAEnC,OAAO,YAAY;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACtQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,sCAAI;;AAEpC;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,cAAc,kCAAkC;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;;AAEA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACvQA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACVY;;AAEZ,cAAc,mBAAO,CAAC,4DAAe;;AAErC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AClCY;;AAEZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA,+DAAe,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC;;;;;;;;;;;;;;;ACApI;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AClBqC;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,SAAS;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,0gBAA0gB;AAC1gB;AACA;AACA;AACA;;AAEA,OAAO,wDAAQ;AACf;AACA;;AAEA;AACA;;AAEA,+DAAe,SAAS;;;;;;;;;;;;;;AC7BG;AACY;;AAEvC;AACA;AACA,+CAA+C,+CAAG,KAAK;;AAEvD;AACA,mCAAmC;;AAEnC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;;AAEA,SAAS,yDAAS;AAClB;;AAEA,+DAAe,EAAE;;;;;;;;;;;;;ACvBc;;AAE/B;AACA,qCAAqC,sDAAU;AAC/C;;AAEA,+DAAe,QAAQ;;;;;;;;;;ACNvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACVA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA,WAAW,wBAAwxzGA;AACA;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,YAAY;AACZ;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjvDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,aAAa;AACb;AACO;AACP,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/3FO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3CA;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACznKA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC5CA;AACA,aAAa,uBAAuB;AACpC,aAAa,sBAAsB;AACnC,aAAa,yBAAyB;AACtC,aAAa,sBAAsB;AACnC,aAAa,uDAAuD;AACpE,aAAa,uDAAuD;AACpE,aAAa,cAAc;AAC3B,aAAa,uCAAuC;AACpD;AACA;AACA,cAAc,WAAW;AACzB,cAAc,QAAQ;AACtB;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,uBAAuB;AACrC,cAAc,0DAA0D;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iCAAiC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjIA;AACA,aAAa,wBAAwB;AACrC,aAAa,sBAAsB;AACnC,aAAa,yBAAyB;AACtC,aAAa,cAAc;AAC3B,aAAa,4BAA4B;AACzC;;AAEwC;;AAExC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM;AACV;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;;AAEA;AACA,uDAAuD,yDAAQ;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,yDAAQ;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9IA;AACA,aAAa,sBAAsB;AACnC,aAAa,yBAAyB;AACtC,aAAa,cAAc;AAC3B;AACA,aAAa,QAAQ;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;;AAEwC;;AAExC;AACA,WAAW,6BAA6B;AACxC,WAAW,kBAAkB,WAAW;AACxC;AACO;AACP,iDAAiD,yDAAQ;AACzD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AC9BA;AACA,aAAa,wBAAwB;AACrC,aAAa,sBAAsB;AACnC,aAAa,sBAAsB;AACnC,aAAa,yBAAyB;AACtC,aAAa,cAAc;AAC3B,aAAa,4BAA4B;AACzC,aAAa,4CAA4C;AACzD;AACA,aAAa,SAAS;AACtB,aAAa,oBAAoB,0BAA0B;AAC3D;AACA,aAAa,gBAAgB;AAC7B,aAAa,0BAA0B;AACvC;AACA,aAAa,4EAA4E;AACzF;;AAEsC;AACG;AACC;;AAE1C,cAAc;;AAEd;AACA,WAAW,MAAM;AACjB,WAAW,wBAAwB;AACnC,WAAW,SAAS;AACpB,WAAW,gCAAgC;AAC3C;AACO;AACP,aAAa,iCAAiC;AAC9C,kBAAkB;AAClB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA,wBAAwB,wBAAwB;AAChD,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,uDAAK;AACP,8BAA8B,QAAQ;;AAEtC;AACA;AACA;AACA,gCAAgC,2DAAS;AACzC;AACA;AACA;;AAEA,iBAAiB,0DAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,0DAAS;AACnB,YAAY,0DAAS;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,sBAAsB,0DAAS;;AAE/B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpJA;AACA,aAAa,yBAAyB;AACtC,aAAa,sBAAsB;AACnC;;AAEA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,sBAAsB;AACnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACvCsC;AACA;AACe;AACE;;AAEvD;AACO,2BAA2B,mDAAU;;AAE5C;AACA;AACA,EAAE,sDAAa;AACf;;AAEA;AACA,EAAE,uDAAc;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,4CAAQ;AACxB,YAAY,4CAAQ;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU,4CAAQ;;AAElB;AACA;AACA;;AAEA,yBAAyB,4CAAQ;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAQ;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4CAAQ;;AAE5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,wBAAwB,4CAAQ;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxRA;AACO,2gBAA2gB;AAC3gB;AACA,8CAA8C,GAAG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZqE;AACJ;AACA;AACF;AACR;AACZ;AACM;AACkB;AACX;AAC2C;AACtB;AACX;AACF;AACO;AACa;AACJ;AACZ;AACZ;AACtB;AAQhB;;AAEzB;;AAEA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,UAAU,4DAAe;AACzB;AACA,QAAQ,SAAS,6DAAgB;AACjC;AACA,QAAQ,SAAS,sDAAS;AAC1B;AACA,QAAQ;AACR;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4DAAe;AACzB;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yDAAa,EAAE,4CAA4C;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yDAAa;AACf;AACA,eAAe,2DAAc;AAC7B;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE,yDAAa;AACf;AACA,eAAe,oDAAO;AACtB;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA,EAAE,wFAAsB;AACxB,EAAE,oFAAoB;AACtB,EAAE,oFAAoB;AACtB,EAAE,kFAAmB;AACrB,EAAE,0EAAgB;AAClB,EAAE,8DAAU;AACZ,EAAE,oEAAa;AACf;;AAEA;AACA,EAAE,sFAAqB;AACvB,EAAE,4EAAgB;AAClB,EAAE,uHAAoC;AACtC,EAAE,iGAA0B;AAC5B,EAAE,sFAAqB;AACvB,EAAE,oFAAoB;AACtB,EAAE,2FAAuB;AACzB,EAAE,wGAA6B;AAC/B,EAAE,oGAA2B;AAC7B,EAAE,wFAAsB;AACxB,EAAE,4EAAgB;AAClB,EAAE,oEAAa;AACf;;AAEA;AACA,EAAE,wGAA6B;AAC/B,EAAE,oGAA2B;AAC7B,EAAE,4EAAgB;AAClB,EAAE,oEAAa;AACf;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,2BAA2B;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7a+C;;AAE/C;AACO;AACP;AACA;AACA;AACA,8BAA8B,+DAAgB;;AAE9C;;AAEA;AACA;;AAEA,YAAY;AACZ;AACA;;;;;;;;;;;;;;;;;;;AChBsC;AACiB;;AAEvD;AAC8C;;AAE9C;AACO,6BAA6B,uDAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,2CAA2C,8DAAiB,CAAC,4CAAQ;AACrE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,4BAA4B;AAC5B;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;AC1DsD;;AAEvD;AACA;AACO,kCAAkC,uDAAc;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;AC3BoD;;AAErD;AACA;AACO,oCAAoC,sDAAa;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;ACxBqC;AACiB;;AAEvD;AACA;AACO,2BAA2B,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,4CAAQ;;AAEtB,uCAAuC;AACvC;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;ACnDqC;AACiB;;AAEvD;AACA;AACA;AAC6C;;AAE7C;AACA;AACO,uBAAuB,uDAAc;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,6DAAgB,CAAC,4CAAQ;AAC/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;ACxCqC;AACiB;;AAEvD;AACO,2BAA2B,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,4CAAQ;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;AC3CqC;AACiB;AACX;;AAE5C;AACA;AACO,iCAAiC,uDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,4DAAe,CAAC,4CAAQ;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;ACjCqC;AACiB;;AAEvD;AAC8C;;AAE9C;AACA;AACO,2CAA2C,uDAAc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,8DAAiB,CAAC,4CAAQ;AACvC;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;ACpDqC;AACiB;;AAEvD;AACO,6BAA6B,uDAAc;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,4CAAQ;AACZ;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;AC7CqC;AACiB;AACZ;;AAE3C;AACO,uBAAuB,uDAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,4CAAQ;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,4CAAQ;;AAExB;AACA;AACA;AACA;AACA;;AAEA,eAAe,2DAAc;AAC7B;AACA;AACA,UAAU;AACV;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;ACrEqC;AACiB;;AAEvD;;AAEA;AACO,0BAA0B,uDAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,4CAAQ;AACZ;AACA,oBAAoB,4CAAQ;AAC5B;AACA;AACA;;AAEA;AACA,kBAAkB,4CAAQ;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;ACxDqC;AACiB;;AAEvD;AACiD;;AAEjD;AACO,2BAA2B,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA,UAAU,iEAAoB,CAAC,4CAAQ;AACvC;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;AChFsD;;AAEvD;AACA;AACO,4BAA4B,uDAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;ACnDqC;AACiB;;AAEvD;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACO,4BAA4B,uDAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,4CAAQ;AAC1B;;AAEA;AACA;AACA;AACA,gCAAgC,4CAAQ;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;AC1EqC;AACe;;AAErD;AACA;AACgD;;AAEhD;AACA;AACO,8BAA8B,sDAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,gEAAmB,CAAC,4CAAQ;AACrC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,4CAAQ;AAChB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,GAAG;AAC7B;AACA;AACA;AACA;AACA,QAAQ,4CAAQ;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;AC7FsD;;AAEvD;AACA;AACA;AACO,iBAAiB,uDAAc;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;AC5BoD;;AAErD;AACO,oBAAoB,sDAAa;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9BuD;;AAEvD;AACO,uBAAuB,uDAAc;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;ACXqC;;AAEtC;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,4CAAQ;AAClC;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AC5CO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7OA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,gBAAgB;AAC9B,cAAc,gBAAgB;AAC9B;AACA,aAAa,yBAAyB;AACtC;;AAEkC;AACF;;AAEzB;;AAEP,YAAY;;AAEZ,OAAO,+CAAQ;AACf,OAAO,4CAAK;;AAEZ;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA,aAAa,gBAAgB;AAC7B;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7CA;AACA,aAAa,sBAAsB;AACnC,aAAa,uBAAuB;AACpC,aAAa,mCAAmC;AAChD,aAAa,0IAA0I;AACvJ;;AAE2D;AACT;;AAElD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,aAAa;AACb;AACe;AACf,SAAS,mEAAqB;AAC9B,mBAAmB,QAAQ,+DAAa,OAAO;AAC/C;AACA;;;;;;;;;;;;;;;;;;;;AC3BA;AACA,aAAa,sBAAsB;AACnC,aAAa,0BAA0B;AACvC;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;;AAEsC;AACE;AACE;AACZ;;AAE9B;AACA;AACA;;AAEA,cAAc;;AAEd;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACe,wCAAwC;AACvD;AACA;;AAEA;AACA,IAAI,wDAAK;AACT,gCAAgC,UAAU;AAC1C,qBAAqB,yDAAQ;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD,2DAAS;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;;AAEA,cAAc,wBAAwB;AACtC;AACA,aAAa,wBAAwB;AACrC;AACA,aAAa,QAAQ;AACrB;;AAEA,cAAc,0CAAI;AAClB,iBAAiB,0CAAI;AACrB,oBAAoB,0CAAI;;AAExB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC/GA,WAAW,wBAAwB;AAC5B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA,aAAa,sBAAsB;AACnC;;AAEwC;AACL;AACK;AACgB;AACrB;AACD;;AAElC;AACA;;AAEA,yBAAyB,8CAAM;;AAE/B;AACA;AACA;AACA,UAAU;AACV;AACe;AACf;AACA,IAAI,qDAAM;AACV,qBAAqB,yDAAQ;AAC7B,uBAAuB,yDAAW,CAAC,8CAAM;;AAEzC;AACA;AACA;AACA,YAAY,oDAAS;AACrB;AACA,YAAY,oDAAS;AACrB,WAAW,OAAO,+DAAU,iBAAiB,6DAAQ,0BAA0B;AAC/E;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACxCA,WAAW,wBAAwB;AAC5B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvGoD;;AAErC;AACf,+DAAe,qDAAa;;;;;;;;;;;;;;;;;;;ACH5B;AACA,aAAa,sBAAsB;AACnC;;AAE+B;AAC/B;AAC0C;;AAE1C,WAAW,qCAAqC;AACzC,eAAe,uDAAY;;AAElC,WAAW,gDAAgD;AAC5C;AACf,uBAAuB,QAAQ,gDAAO,CAAC,uDAAY,EAAE;AACrD;;;;;;;;;;;;;;;ACdwC;AACJ;;AAEpC,uBAAuB,wDAAO,CAAC,gDAAQ;;AAEvC,+DAAe,cAAc;;;;;;;;;;;;;;ACL7B;AACA,aAAa,oCAAoC;AACjD;;AAEoC;;AAEpC,+DAAe,8CAAc;;;;;;;;;;;;;;;;ACN7B;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,cAAc;AAC5B,cAAc,UAAU;AACxB,cAAc,wBAAwB;AACtC,cAAc,wBAAwB;AACtC,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB;;AAEA,WAAW,WAAW;AACfiDAAiD;AACjD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,iDAAiD;AACjD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,0CAA0C;AAC1C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,0CAA0C;AAC1C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACplLA;AACA,aAAa,sBAAsB;AACnC,aAAa,0BAA0B;AACvC,aAAa,iCAAiC;AAC9C,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,uBAAuB;AACpC,aAAa,gCAAgC;AAC7C,aAAa,2BAA2B;AACxC;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,WAAW;AACzB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA,cAAc,UAAU;AACxB,cAAc,SAAS;AACvB;;AAEyC;AACN;AACK;AACL;AACS;AACP;;AAErC,cAAc;;AAEd,aAAa,sDAAO;AACpB,mBAAmB,sDAAO;AAC1B,oBAAoB,sDAAO;;AAE3B;AACA,WAAW,WAAW;AACtB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA,aAAa,yBAAyB;AACtC;AACA,aAAa,WAAW;AACxB;AACA,aAAa,UAAU;AACvB;AACA,aAAa,UAAU;AACvB;;AAEA;;AAEA,aAAa,4CAA4C;AACzD,sBAAsB;AACtB;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA,eAAe,UAAU;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,MAAM,uDAAK;AACX,mBAAmB,yBAAyB;AAC5C;;AAEA,QAAQ,qDAAM;AACd,QAAQ,qDAAM;;AAEd,mBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,kDAAI;;AAEnB;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA,iDAAiD,yDAAQ;AACzD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8CAA8C,0DAAS;AACvD,qCAAqC,0DAAS;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA,mBAAmB,yDAAQ;AAC3B,eAAe,oBAAoB;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,oDAAS;AACjB;AACA;AACA;AACA;AACA,uBAAuB,oDAAS;AAChC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;;;;;;;;;;;;;;ACrQO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnGO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACvEA;AACA,aAAa,sBAAsB;AACnC,aAAa,0BAA0B;AACvC,aAAa,sBAAsB;AACnC;AACA,aAAa,oBAAoB;AACjC;;AAEA;AAC2B;AACW;AACE;AACG;AACnB;AACE;;AAE1B;AACA;;AAEA,uBAAuB,oCAAC;AACxB,wBAAwB,sCAAE;;AAE1B;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACe;AACf;AACA,IAAI,wDAAK;AACT,gCAAgC,UAAU;AAC1C,qBAAqB,yDAAQ;AAC7B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,yDAAQ;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU,mCAAM;AAChB;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,yDAAQ;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA,gCAAgC,oDAAqB;AACrD;AACA;AACA,aAAa,gBAAgB;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA,aAAa,UAAU;AACvB;AACA,aAAa,UAAU;AACvB;AACA,aAAa,UAAU;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrNA;AACA,aAAa,sBAAsB;AACnC;;AAEA;AACA;AACA;AACA,cAAc,UAAU;AACxB;AACA;;AAEwD;AACrB;AACK;AACL;AACJ;AACF;AACE;;AAE/B,6BAA6B,4CAAO,KAAK,0CAAM,KAAK,4CAAO;;AAE3D;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACe,qCAAqC;AACpD;AACA;AACA;;AAEA;AACA,IAAI,qDAAM;AACV,qBAAqB,yDAAQ;AAC7B;;AAEA,WAAW,qDAAgB;AAC3B,eAAe,qDAAgB;AAC/B;;AAEA;AACA;AACA;AACA,YAAY,oDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO,+DAAU,iBAAiB,6DAAQ,0BAA0B;AAC/E;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA,aAAa,sBAAsB;AACnC,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,cAAc,UAAU;AACxB;AACA;;AAEmC;AACK;AACS;AACO;AAC1B;;AAE9B;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACe,mCAAmC;AAClD;AACA;AACA,wBAAwB,iDAAW,+BAA+B,0CAAI;;AAEtE;AACA,IAAI,qDAAM;AACV,gCAAgC,MAAM,IAAI,kEAAU;;AAEpD,gCAAgC,yDAAQ;AACxC;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO,+DAAU,iBAAiB,6DAAQ,0BAA0B;AAC/E;AACA;AACA,SAAS,QAAQ,yDAAQ;AACzB;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACjxNA;AACA,aAAa,gCAAgC;AAC7C;;AAEyB;AACQ;AACG;;AAEpC,4BAA4B,oDAAO;AACnC;AACA,MAAM;AACN,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,+DAAe,mBAAmB;;;;;;;;;;;;;;;;;;;;ACzBlC;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,wBAAwB;AACtC,eAAe,uEAAuE;AACtF,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB;AACA;AACA;AACA,cAAc,UAAU;AACxB;AACA,cAAc,OAAO;AACrB;AACA;;AAEmC;AACK;AACL;AACqB;;AAExD,cAAc;;AAEd;AACA,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,qDAAM;AACZ,MAAM,qDAAM;;AAEZ,iBAAiB,gCAAgC;AACjD;AACA;AACA,uBAAuB,yDAAQ;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+DAAU;AAC/B,mBAAmB,6DAAQ;AAC3B,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA,eAAe,wBAAwB;AACvC;AACA,eAAe,QAAQ;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;ACxHA;AACA,aAAa,gCAAgC;AAC7C;;AAEuC;;AAEvC,+DAAe,8CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNhC;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAE0D;AAClB;AACJ;AACoC;AAC3C;AACS;AACE;AACA;AACX;AACe;AACX;AACW;;AAE5C;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACe,uCAAuC;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,wDAAK;AACT,iBAAiB,yBAAyB;AAC1C;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,wDAAK;AACX,sBAAsB,yDAAQ;AAC9B;AACA,0BAA0B,kDAAQ;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,mDAAe;AAC3B;AACA;AACA;;AAEA;AACA,YAAY,0DAAkB;AAC9B;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,UAAU;AAC7B;AACA,qBAAqB,uEAAmB,CAAC,oEAAgB;AACzD,qBAAqB,2EAAoB;AACzC,qBAAqB,yDAAW;AAChC,sBAAsB,8CAAM;AAC5B,oBAAoB,yDAAW;AAC/B,qBAAqB,wDAAU;AAC/B,qBAAqB,8DAAa;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mDAAI;AACjB,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACpMA;AACA,aAAa,sBAAsB;AACnC,aAAa,0BAA0B;AACvC,aAAa,sBAAsB;AACnC;;AAEyC;AACN;AACK;AACP;AACE;AACY;AACS;AACtB;;AAElC;AACA,sDAAyB;;AAEzB;AACA;;AAEA,yBAAyB,8CAAM;;AAE/B;AACA;AACA;AACA,UAAU;AACV;AACe;AACf;AACA,IAAI,qDAAM;AACV,gCAAgC,UAAU;AAC1C,yBAAyB,8CAAM;AAC/B;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,MAAM,IAAI,gEAAS;;AAErD;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,+CAAkB,CAAC,0DAAS;AACrD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,gEAAS;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,+CAAkB,CAAC,0DAAS;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,yDAAQ;AACjC,yBAAyB,yDAAQ;;AAEjC,cAAc,+CAAkB,CAAC,yDAAQ;AACzC;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,oDAAS;AACzB;AACA,gBAAgB,oDAAS;AACzB;AACA,uBAAuB,+DAAU;AACjC,qBAAqB,6DAAQ;AAC7B,eAAe;AACf;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACzGA,WAAW,4BAA4B;AAChpIA;AACA,aAAa,sBAAsB;AACnC,aAAa,iCAAiC;AAC9C,cAAc,uDAAuD;AACrE;;AAEwC;AACI;AACY;;AAExD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACe;AACf;AACA,IAAI,wDAAK;AACT;AACA,iBAAiB,gBAAgB;AACjC;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;;AAEA;AACA,wBAAwB,yDAAQ;;AAEhC,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO,+DAAU,uBAAuB,6DAAQ,QAAQ;AACzE;AACA;AACA;AACA,wBAAwB,yDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,aAAa,kDAAI;AACjB,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACpHA;AACA,aAAa,sBAAsB;AACnC;AACA,aAAa,uDAAuD;AACpE;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;;AAEwC;AACF;AACD;;AAErC,iBAAiB,sDAAO;AACxB,mBAAmB,sDAAO;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACe,2CAA2C;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,uDAAK;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,yDAAQ;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;AC5HA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,cAAc,UAAU;AACxB;AACA;;AAEwC;AACL;AACA;AACqB;AAClB;;AAEtC;AACA;;AAEA,yBAAyB,kDAAQ;;AAEjC;AACA;AACA;AACA,UAAU;AACV;AACe,oCAAoC;AACnD;AACA;AACA;;AAEA;AACA,IAAI,qDAAM;AACV,sBAAsB,kDAAQ;AAC9B,qBAAqB,yDAAQ;AAC7B;;AAEA;AACA;AACA;AACA,0BAA0B,oDAAS;AACnC;AACA,gBAAgB,oDAAS;AACzB;AACA,gBAAgB,oDAAS;AACzB;AACA,WAAW,OAAO,+DAAU,iBAAiB,6DAAQ,0BAA0B;AAC/E;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACpDA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,SAAS;AACvp/BA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5BA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxiCiC;AACjC;AACyC;AACG;;AAE5C,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,GAAG;AAC/C,4CAA4C,GAAG;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACfnB,aAAa;AACb;AACO;AACP,eAAe,8CAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,gBAAgB;AAC7B;AACA,aAAa,4BAA4B;AACzC;AACA,aAAa,4BAA4B;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,wDAAW;AAC1B,WAAW,wDAAW;AACtB;;AAEA;AACA,aAAa,sCAAS;;AAEtB,eAAe,wDAAW;AAC1B,WAAW,wDAAW;AACtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzWO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7DA;AACA,aAAa,+DAA+D;AAC5E,aAAa,+BAA+B;AAC5C;AACA,aAAa,gCAAgC;AAC7C;AACA,aAAa,8BAA8B;AAC3C;AACA,cAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP,aAAa,mBAAmB;AAChC;AACA,aAAa,UAAU;AACvB,oBAAoB;;AAEpB;;AAEA,aAAa,KAAK;AAClB;AACA;AACA,eAAe,UAAU;AACzB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,eAAe,YAAY;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,WAAW,YAAY;AACvB,WAAW,UAAU;AACrB;AACO;AACP,aAAa,SAAS;AACtB;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ,aAAa,YAAY;AACzB,eAAe;AACf;AACA;AACA;AACA,eAAe,KAAK;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN,mCAAmC,OAAO;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/JA;AACA;AACA;AACA;AACA,eAAe,+CAA+C;AAC9D,WAAW,OAAO;AAClB,YAAY;AACZ;AACO;AACP;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA,eAAe,SAAS;AACxB;;AAEA;AACA;AACA,wEAAwE;AACxE;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC7BA;AACA,aAAa,sBAAsB;AACnC,aAAa,wBAAwB;AACrC,aAAa,uBAAuB;AACpC,aAAa,8BAA8B;AAC3C,aAAa,uBAAuB;AACpC,aAAa,sCAAsC;AACnD;AACA,aAAa,sCAAsC;AACnD,aAAa,+CAA+C;AAC5D,aAAa,4CAA4C;AACzD;AACA;AACA,cAAc,OAAO;AACrB;AACA,cAAc,UAAU;AACxB;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA,cAAc,UAAU;AACxB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA,cAAc,MAAM;AACpB;AACA,cAAc,UAAU;AACxB;AACA;AACA;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,uCAAuC;AACrD;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B,cAAc,SAAS;AACvB;;AAEuC;AACD;;AAEtC,cAAc;;AAEd;AACA,UAAU;AACV,aAAa;AACb;AACe;AACf;AACA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB;AACA;AACA,qBAAqB,wDAAQ;AAC7B;AACA;AACA,eAAe,wBAAwB;AACvC;AACA,eAAe,QAAQ;AACvB;;AAEA,IAAI,wDAAK;;AAET;;AAEA;AACA,eAAe,MAAM;AACrB,eAAe,aAAa;AAC5B,eAAe,aAAa;AAC5B;AACA;AACA,iBAAiB,aAAa;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,eAAe,SAAS;AACxB,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,eAAe,kBAAkB;AACjC,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA,aAAa,mBAAmB;AAChC;;AAEA;AACA,EAAE,wDAAK;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B,eAAe;AACf;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxZA;AACA,aAAa,sBAAsB;AACnC,aAAa,wBAAwB;AACrC,aAAa,8BAA8B;AAC3C,aAAa,kDAAkD;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA,WAAW,GAAG;AACd,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa;AACb;;AAE2E;;AAE9C;;AAEtB;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,eAAe;AAC9B,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,sEAAY;;AAElB;AACA,iBAAiB,MAAM;AACvB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrEA;AACA,aAAa,sBAAsB;AACnC,aAAa,iCAAiC;AAC9C,aAAa,4BAA4B;AACzC,aAAa,wBAAwB;AACrC,aAAa,qBAAqB;AAClC,aAAa,qBAAqB;AAClC,aAAa,wBAAwB;AACrC,aAAa,4BAA4B;AACzC,aAAa,0BAA0B;AACvC,aAAa,qBAAqB;AAClC,aAAa,uBAAuB;AACpC,aAAa,0BAA0B;AACvC,aAAa,8BAA8B;AAC3C;AACA;AACA,cAAc,MAAM;AACpB,cAAc,OAAO;AACrB;;AAEyB;AACO;AACL;AACU;AACR;AACF;;AAE3B;AACO;;AAEP,cAAc;;AAEd;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,8CAAM;AAC7B,aAAa,wBAAwB;AACrC;AACA,aAAa,yBAAyB;AACtC;AACA,aAAa,mBAAmB;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,WAAW;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,mCAAM,SAAS;;AAEpC;AACA;;AAEA;AACA,aAAa,gCAAgC;AAC7C,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,0BAA0B;AACvC,aAAa,YAAY;AACzB,eAAe;AACf;AACA;AACA,eAAe,mCAAmC;AAClD;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,iEAAiE;AACjE;;AAEA;;AAEA;AACA,eAAe,mCAAmC;AAClD,iBAAiB;AACjB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,+CAA+C;AAC/C;AACA;;AAEA;AACA,eAAe,8BAA8B;AAC7C,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB,0CAA0C;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,wDAAU,cAAc,wDAAU;AAC9C,kBAAkB,mCAAM;AACxB;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,MAAM;AACnB,aAAa,6BAA6B;AAC1C,aAAa,aAAa;AAC1B,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,6BAA6B;AAC5C,eAAe,wBAAwB;AACvC,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B,iBAAiB,MAAM;AACvB,iBAAiB,OAAO;AACxB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,sBAAsB;AACnC;AACA,eAAe,gBAAgB;AAC/B;AACA,eAAe,mBAAmB;AAClC;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,eAAe,YAAY;AAC3B,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;AACA,MAAM,2CAAI;AACV;AACA;AACA;AACA;;AAEA;AACA,aAAa,iBAAiB;AAC9B,aAAa,iBAAiB;AAC9B,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,8BAA8B;AAC7C,eAAe,wCAAwC;AACvD,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,qBAAqB,SAAS;AAC9B;;AAEA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,iBAAiB,sBAAsB;AACvC,iBAAiB,iBAAiB;AAClC,mBAAmB;AACnB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,0BAA0B;AACvC;AACA,eAAe,mBAAmB;AAClC;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,eAAe,sBAAsB;AACrC,iBAAiB;AACjB;AACA;AACA;AACA,MAAM,2CAAI;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,aAAa;AACb;AACA;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA,OAAO,wDAAU;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA;AACA,8CAA8C,wCAAK;AACnD;;AAEA;AACA,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA,sCAAsC,sCAAQ;AAC9C;;;;;;;;;;;;;;;;ACtlBe;AACf;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA,aAAa,sBAAsB;AACnC,aAAa,wBAAwB;AACrC;AACA,aAAa,8BAA8B;AAC3C,aAAa,+BAA+B;AAC5C,aAAa,8CAA8C;AAC3D;;AAEqC;;AAE9B;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,aAAa;AAC5B,eAAe,uFAAuF;AACtG,iBAAiB;AACjB;AACA;AACA,eAAe,sDAAO;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACpDA;AACA,aAAa,sBAAsB;AACnC,aAAa,wBAAwB;AACrC;AACA,aAAa,8BAA8B;AAC3C,aAAa,+BAA+B;AAC5C,aAAa,8CAA8C;AAC3D;;AAEqC;;AAE9B;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,aAAa;AAC5B,eAAe,uFAAuF;AACtG,iBAAiB;AACjB;AACA;AACA,eAAe,sDAAO;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACzDA;AACA,aAAa,sBAAsB;AACnC,aAAa,wBAAwB;AACrC;AACA,aAAa,QAAQ;AACrB,aAAa,yBAAyB;AACtC;AACA,aAAa,wFAAwF;AACrG;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,uBAAuB;AAClC,WAAW,uBAAuB;AAClC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA,WAAW,MAAM;AACjB,WAAW,uBAAuB;AAClC,WAAW,uBAAuB;AAClC,aAAa;AACb;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,uBAAuB;AAClC,WAAW,uBAAuB;AAClC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA,WAAW,SAAS;AACpB,WAAW,uBAAuB;AAClC,WAAW,uBAAuB;AAClC,aAAa;AACb;;AAEO;AACP;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,MAAM;AACrB;AACA,2DAA2D,0BAA0B;AACrF;AACA;AACA;AACA,eAAe,uBAAuB;AACtC,eAAe,uBAAuB;AACtC,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA,2DAA2D,0BAA0B;AACrF;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD,aAAa;AACb;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,YAAY;AACZ,aAAa,WAAW;AACxB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;AAEA;AACA,aAAa,MAAM;AACnB,eAAe;AACf;AACA;AACA,eAAe,QAAQ;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;;AAEA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,aAAa;AACb;AACA;AACA;;AAEA;AACA,YAAY;AACZ,aAAa,iBAAiB;AAC9B,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1PA;AACA,aAAa,0BAA0B;AACvC,aAAa,uBAAuB;AACpC;AACA,aAAa,gBAAgB;AAC7B;AACA,aAAa,QAAQ;AACrB,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB;AACA,aAAa,QAAQ;AACrB,cAAc,cAAc;AAC5B;;AAEO;AACA;;AAEP;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa;AACb;AACO;AACP,UAAU;AACV;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpDA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;ACNA;AACA,aAAa,sBAAsB;AACnC,aAAa,wBAAwB;AACrC,aAAa,8BAA8B;AAC3C;;AAEA;AACA,aAAa,oBAAoB;AACjC,aAAa,QAAQ;AACrB,aAAa,0DAA0D;AACvE,aAAa,8CAA8C;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA,WAAW,GAAG;AACd,WAAW,gBAAgB;AAC3B,aAAa;AACb;;AAEqC;AACL;;AAEhC;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;;AAEA;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,eAAe;AAC9B,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,sDAAO;AACtB;;AAEA;;AAEA;AACA,iBAAiB,MAAM;AACvB,iBAAiB,SAAS;AAC1B,iBAAiB,gBAAgB;AACjC;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA,mBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gDAAK;AACnB;AACA,WAAW;AACX;;AAEA;;AAEA;AACA,qBAAqB,aAAa;AAClC;AACA,qBAAqB,aAAa;AAClC;AACA,qBAAqB,QAAQ;AAC7B;AACA,qBAAqB,gBAAgB;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACnKA;AACA,aAAa,sBAAsB;AACnC,aAAa,wBAAwB;AACrC,aAAa,8BAA8B;AAC3C,aAAa,kDAAkD;AAC/D,aAAa,mCAAmC;AAChD;;AAE2E;;AAE9C;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,mCAAmC;AAClD,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,sEAAY;;AAElB;AACA,iBAAiB,MAAM;AACvB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxDA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;ACNA;AACA,aAAa,sBAAsB;AACnC,aAAa,wBAAwB;AACrC,aAAa,8BAA8B;AAC3C,aAAa,kCAAkC;AAC/C,aAAa,iCAAiC;AAC9C,aAAa,uCAAuC;AACpD,aAAa,yCAAyC;AACtD,aAAa,mCAAmC;AAChD;;AAEqC;AACL;;AAEhC;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,yCAAyC;AACxD,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,sDAAO;AACxB;;AAEA;;AAEA;AACA,iBAAiB,MAAM;AACvB,iBAAiB,SAAS;AAC1B,iBAAiB,gBAAgB;AACjC;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,mBAAmB,kBAAkB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gDAAK;AACnB;AACA,WAAW;AACX;;AAEA;;AAEA;AACA,qBAAqB,aAAa;AAClC;AACA,qBAAqB,aAAa;AAClC;AACA,qBAAqB,QAAQ;AAC7B;AACA,qBAAqB,gBAAgB;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACvJA;AACA,aAAa,uBAAuB;AACpC,aAAa,uBAAuB;AACpC;AACA,aAAa,8BAA8B;AAC3C,aAAa,iBAAiB;AAC9B,aAAa,8BAA8B;AAC3C;;AAEA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACO;AACP;AACA,aAAa,gBAAgB;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AC/EA;AACA,aAAa,sBAAsB;AACnC,aAAa,0BAA0B;AACvC,aAAa,uBAAuB;AACpC,aAAa,UAAU,8CAA8C;AACrE;;AAE+D;;AAExD;AACP;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,8BAA8B;AAC3C,aAAa,QAAQ;AACrB;AACA;AACA,eAAe,4BAA4B;AAC3C;AACA,eAAe,UAAU;AACzB;AACA;AACA,cAAc,yBAAyB;AACvC;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,gFAAiB;AACjC;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzJA;AACA,aAAa,uBAAuB;AACpC,aAAa,sBAAsB;AACnC,aAAa,0BAA0B;AACvC,aAAa,UAAU,8CAA8C;AACrE;;AAEA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,kBAAkB;AAC7B,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7DA;AACA,aAAa,uBAAuB;AACpC,aAAa,sCAAsC;AACnD;;AAEA,kBAAkB;;AAElB;AACA,cAAc,OAAO;AACrB,WAAW,GAAG;AACd,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA,aAAa,sBAAsB;AACnC,aAAa,0BAA0B;AACvC,aAAa,uBAAuB;AACpC,aAAa,2BAA2B,8CAA8C;AACtF,aAAa,kCAAkC;AAC/C,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC;AACA,aAAa,8FAA8F;AAC3G;AACA;AACA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc,QAAQ;AACtB,cAAc,eAAe;AAC7B,cAAc,YAAY;AAC1B,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,eAAe;AAC7B,cAAc,eAAe;AAC7B,cAAc,kBAAkB;AAChC,cAAc,yBAAyB;AACvC,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA,cAAc,wBAAwB,oBAAoB;AAC1D;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,wEAAwE;AACrF;;AAE8B;AACY;AACT;AACA;AACW;;AAE5C;AACA,KAAK,0BAA0B;AAC/B;AACA;;AAEO;AACP;AACA;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA,eAAe,cAAc;AAC7B;;AAEA;AACA;AACA,MAAM,sCAAsC,sCAAM;AAClD;AACA,iBAAiB;AACjB,MAAM,SAAS,iDAAK;AACpB,iBAAiB;AACjB,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,eAAe,iDAAQ;;AAEvB;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA,QAAQ,iDAAK;AACb,aAAa,qDAAS;AACtB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,qDAAY;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAS;AACzB;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,sDAAa;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAS;AACzB;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,qDAAY;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,kDAAS;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,sDAAa;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAS;AACzB;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,8BAA8B;AAC3C,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA,wBAAwB,uDAAY;;AAEpC;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,8BAA8B;AAC3C,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,8BAA8B;AAC3C,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA,4DAA4D,iDAAQ;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,cAAc;;AAErB;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,mBAAmB;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B,aAAa;AACb;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACzYA;AACA;AACA;AACO,cAAc;;AAErB;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;;AAEwC;;AAExC;;AAEA;AACA,WAAW,YAAY;AACvB;AACO;AACP;AACA;AACA,IAAI,UAAU,wDAAK;AACnB,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEwC;;;;;;;;;;;;;;;;ACrExC;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,KAAK;AACnB,cAAc,QAAQ;AACtB,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B;;AAEA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChrHA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACNA;CAGA;;AACA;CAIA;;AACA;AAEAlD,2DAAQ,CAAC,MAAM;AACX;AACJ;AACA;AACI4E,EAAAA,kEAAc,CAAC,gBAAD,EAAmB;AAC7BpE,IAAAA,MAAM,EAAE1L,iEAAWA;AADU,GAAnB,CAAd;AAGH,CAPO,CAAR,C","sources":["webpack://writers-blocks/./node_modules/array-iterate/index.js","webpack://writers-blocks/./src/js/components/editor-toolbar-button.js","webpack://writers-blocks/./src/js/components/panel/plugin.js","webpack://writers-blocks/./src/js/constants.js","webpack://writers-blocks/./src/js/decorators/gutenberg.js","webpack://writers-blocks/./src/js/parsers/index.js","webpack://writers-blocks/./src/js/parsers/retext/index.js","webpack://writers-blocks/./src/js/store/actions.js","webpack://writers-blocks/./src/js/store/index.js","webpack://writers-blocks/./src/js/store/reducer.js","webpack://writers-blocks/./src/js/store/selectors.js","webpack://writers-blocks/./src/js/subscribers/annotations.js","webpack://writers-blocks/./src/js/subscribers/index.js","webpack://writers-blocks/./src/js/subscribers/toolbar.js","webpack://writers-blocks/./src/js/subscribers/tooltip.js","webpack://writers-blocks/./src/js/utils/reading-score.js","webpack://writers-blocks/./src/js/utils/strip-astrals.js","webpack://writers-blocks/./src/js/utils/strip-html-comments.js","webpack://writers-blocks/./src/js/utils/strip-html-entities.js","webpack://writers-blocks/./src/js/utils/strip-spaces.js","webpack://writers-blocks/./src/js/utils/strip-tags.js","webpack://writers-blocks/./src/js/utils/strip-text.js","webpack://writers-blocks/./src/js/utils/tokenizer.js","webpack://writers-blocks/./node_modules/classnames/index.js","webpack://writers-blocks/./node_modules/extend/index.js","webpack://writers-blocks/./node_modules/format/format.js","webpack://writers-blocks/./node_modules/ms/index.js","webpack://writers-blocks/./node_modules/normalize-strings/index.js","webpack://writers-blocks/./node_modules/number-to-words/numberToWords.min.js","webpack://writers-blocks/./node_modules/parse-english/node_modules/nlcst-to-string/index.js","webpack://writers-blocks/./node_modules/parse-latin/node_modules/nlcst-to-string/index.js","webpack://writers-blocks/./node_modules/pluralize/pluralize.js","webpack://writers-blocks/./node_modules/reading-time/lib/reading-time.js","webpack://writers-blocks/./node_modules/sentence-tokenizer/lib/tokenizer.js","webpack://writers-blocks/./node_modules/sentence-tokenizer/node_modules/debug/src/browser.js","webpack://writers-blocks/./node_modules/sentence-tokenizer/node_modules/debug/src/common.js","webpack://writers-blocks/./node_modules/unified/node_modules/is-buffer/index.js","webpack://writers-blocks/./node_modules/unist-util-modify-children/index.js","webpack://writers-blocks/./node_modules/unist-util-visit-children/index.js","webpack://writers-blocks/./node_modules/uuid/dist/esm-browser/regex.js","webpack://writers-blocks/./node_modules/uuid/dist/esm-browser/rng.js","webpack://writers-blocks/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://writers-blocks/./node_modules/uuid/dist/esm-browser/v4.js","webpack://writers-blocks/./node_modules/uuid/dist/esm-browser/validate.js","webpack://writers-blocks/./node_modules/vfile/node_modules/is-buffer/index.js","webpack://writers-blocks/external window \"lodash\"","webpack://writers-blocks/external window [\"wp\",\"annotations\"]","webpack://writers-blocks/external window [\"wp\",\"components\"]","webpack://writers-blocks/external window [\"wp\",\"data\"]","webpack://writers-blocks/external window [\"wp\",\"domReady\"]","webpack://writers-blocks/external window [\"wp\",\"editPost\"]","webpack://writers-blocks/external window [\"wp\",\"element\"]","webpack://writers-blocks/external window [\"wp\",\"i18n\"]","webpack://writers-blocks/external window [\"wp\",\"plugins\"]","webpack://writers-blocks/external window [\"wp\",\"wordcount\"]","webpack://writers-blocks/./node_modules/afinn-165/index.js","webpack://writers-blocks/./node_modules/automated-readability/index.js","webpack://writers-blocks/./node_modules/bail/index.js","webpack://writers-blocks/./node_modules/coleman-liau/index.js","webpack://writers-blocks/./node_modules/cuss/index.js","webpack://writers-blocks/./node_modules/dale-chall-formula/index.js","webpack://writers-blocks/./node_modules/dale-chall/index.js","webpack://writers-blocks/./node_modules/fillers/index.js","webpack://writers-blocks/./node_modules/flesch/index.js","webpack://writers-blocks/./node_modules/gunning-fog/index.js","webpack://writers-blocks/./node_modules/hedges/index.js","webpack://writers-blocks/./node_modules/match-casing/index.js","webpack://writers-blocks/./node_modules/mdast-comment-marker/index.js","webpack://writers-blocks/./node_modules/nlcst-is-literal/index.js","webpack://writers-blocks/./node_modules/nlcst-normalize/index.js","webpack://writers-blocks/./node_modules/nlcst-search/index.js","webpack://writers-blocks/./node_modules/nlcst-to-string/index.js","webpack://writers-blocks/./node_modules/parse-english/index.js","webpack://writers-blocks/./node_modules/parse-latin/lib/expressions.js","webpack://writers-blocks/./node_modules/parse-latin/lib/index.js","webpack://writers-blocks/./node_modules/parse-latin/lib/parser.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/break-implicit-sentences.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/make-final-white-space-siblings.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/make-initial-white-space-siblings.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-affix-exceptions.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-affix-symbol.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-final-word-symbol.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-initial-digit-sentences.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-initial-lower-case-letter-sentences.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-initial-word-symbol.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-initialisms.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-inner-word-slash.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-inner-word-symbol.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-non-word-sentences.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-prefix-exceptions.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-remaining-full-stops.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/merge-words.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/patch-position.js","webpack://writers-blocks/./node_modules/parse-latin/lib/plugin/remove-empty-nodes.js","webpack://writers-blocks/./node_modules/parse-latin/lib/tokenizer.js","webpack://writers-blocks/./node_modules/polarity/emoji.js","webpack://writers-blocks/./node_modules/polarity/index.js","webpack://writers-blocks/./node_modules/quotation/index.js","webpack://writers-blocks/./node_modules/remark-message-control/index.js","webpack://writers-blocks/./node_modules/retext-contractions/index.js","webpack://writers-blocks/./node_modules/retext-contractions/list.js","webpack://writers-blocks/./node_modules/retext-diacritics/index.js","webpack://writers-blocks/./node_modules/retext-diacritics/schema.js","webpack://writers-blocks/./node_modules/retext-english/index.js","webpack://writers-blocks/./node_modules/retext-english/lib/index.js","webpack://writers-blocks/./node_modules/retext-equality/en.js","webpack://writers-blocks/./node_modules/retext-equality/index.js","webpack://writers-blocks/./node_modules/retext-equality/lib/en.js","webpack://writers-blocks/./node_modules/retext-equality/lib/factory.js","webpack://writers-blocks/./node_modules/retext-indefinite-article/lib/a.js","webpack://writers-blocks/./node_modules/retext-indefinite-article/lib/an.js","webpack://writers-blocks/./node_modules/retext-indefinite-article/lib/index.js","webpack://writers-blocks/./node_modules/retext-intensify/index.js","webpack://writers-blocks/./node_modules/retext-passive/index.js","webpack://writers-blocks/./node_modules/retext-passive/list.js","webpack://writers-blocks/./node_modules/retext-profanities/en.js","webpack://writers-blocks/./node_modules/retext-profanities/factory.js","webpack://writers-blocks/./node_modules/retext-profanities/index.js","webpack://writers-blocks/./node_modules/retext-readability/index.js","webpack://writers-blocks/./node_modules/retext-redundant-acronyms/index.js","webpack://writers-blocks/./node_modules/retext-redundant-acronyms/schema.js","webpack://writers-blocks/./node_modules/retext-repeated-words/index.js","webpack://writers-blocks/./node_modules/retext-sentence-spacing/index.js","webpack://writers-blocks/./node_modules/retext-simplify/index.js","webpack://writers-blocks/./node_modules/retext-simplify/patterns.js","webpack://writers-blocks/./node_modules/smog-formula/index.js","webpack://writers-blocks/./node_modules/spache-formula/index.js","webpack://writers-blocks/./node_modules/spache/index.js","webpack://writers-blocks/./node_modules/syllable/index.js","webpack://writers-blocks/./node_modules/syllable/problematic.js","webpack://writers-blocks/./node_modules/trough/index.js","webpack://writers-blocks/./node_modules/unherit/index.js","webpack://writers-blocks/./node_modules/unified-message-control/index.js","webpack://writers-blocks/./node_modules/unified-message-control/node_modules/unist-util-visit/index.js","webpack://writers-blocks/./node_modules/unified/lib/index.js","webpack://writers-blocks/./node_modules/unified/node_modules/is-plain-obj/index.js","webpack://writers-blocks/./node_modules/unist-util-find-after/index.js","webpack://writers-blocks/./node_modules/unist-util-find-before/index.js","webpack://writers-blocks/./node_modules/unist-util-is/index.js","webpack://writers-blocks/./node_modules/unist-util-position/index.js","webpack://writers-blocks/./node_modules/unist-util-visit-parents/color.browser.js","webpack://writers-blocks/./node_modules/unist-util-visit-parents/index.js","webpack://writers-blocks/./node_modules/unist-util-visit/index.js","webpack://writers-blocks/./node_modules/unist-util-visit/node_modules/unist-util-visit-parents/color.browser.js","webpack://writers-blocks/./node_modules/unist-util-visit/node_modules/unist-util-visit-parents/index.js","webpack://writers-blocks/./node_modules/vfile-location/index.js","webpack://writers-blocks/./node_modules/vfile-message/index.js","webpack://writers-blocks/./node_modules/vfile-message/node_modules/unist-util-stringify-position/index.js","webpack://writers-blocks/./node_modules/vfile-sort/index.js","webpack://writers-blocks/./node_modules/vfile/lib/index.js","webpack://writers-blocks/./node_modules/vfile/lib/minpath.browser.js","webpack://writers-blocks/./node_modules/vfile/lib/minproc.browser.js","webpack://writers-blocks/./node_modules/vfile/lib/minurl.browser.js","webpack://writers-blocks/./node_modules/vfile/lib/minurl.shared.js","webpack://writers-blocks/./node_modules/weasels/index.js","webpack://writers-blocks/webpack/bootstrap","webpack://writers-blocks/webpack/runtime/compat get default export","webpack://writers-blocks/webpack/runtime/define property getters","webpack://writers-blocks/webpack/runtime/global","webpack://writers-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://writers-blocks/webpack/runtime/make namespace object","webpack://writers-blocks/./src/js/editor.js"],"sourcesContent":["'use strict'\n\nmodule.exports = iterate\n\nvar own = {}.hasOwnProperty\n\nfunction iterate(values, callback, context) {\n  var index = -1\n  var result\n\n  if (!values) {\n    throw new Error('Iterate requires that |this| not be ' + values)\n  }\n\n  if (!own.call(values, 'length')) {\n    throw new Error('Iterate requires that |this| has a `length`')\n  }\n\n  if (typeof callback !== 'function') {\n    throw new Error('`callback` must be a function')\n  }\n\n  // The length might change, so we do not cache it.\n  while (++index < values.length) {\n    // Skip missing values.\n    if (!(index in values)) {\n      continue\n    }\n\n    result = callback.call(context, values[index], index, values)\n\n    // If `callback` returns a `number`, move `index` over to `number`.\n    if (typeof result === 'number') {\n      // Make sure that negative numbers do not break the loop.\n      if (result < 0) {\n        index = 0\n      }\n\n      index = result - 1\n    }\n  }\n}\n","/**\n * External dependencies\n */\n import classnames from 'classnames';\n\nimport { useSelect, dispatch, select } from '@wordpress/data';\nimport { ToolbarButton } from '@wordpress/components';\nimport { useEffect, useState } from '@wordpress/element';\n\nimport { removeAnnotations, addAnnotations } from '../decorators/gutenberg';\n\nconst { WB_SETTINGS: { settings: DEFAULT_SETTINGS } } = window;\n\nexport const EditorToolbarButton = (props) => {\n    const [settings, setSettings] = useState(DEFAULT_SETTINGS);\n\n    const siteSettings = useSelect((select) => {\n\t\treturn select('core').getEntityRecord('root', 'site');\n\t}, []);\n\n    useEffect(() => {\n\t\tif (siteSettings) {\n\t\t\tconst { writers_blocks: settings } = siteSettings;\n\t\t\tsetSettings(settings);\n\t\t}\n\t}, [siteSettings]);\n\n    return (\n        <ToolbarButton\n            className={ classnames( 'components-toolbar__control', { 'is-pressed': settings.editing_mode === '1' } ) }\n            id=\"writers-blocks-toolbar-button\"\n            icon='edit'\n            label='Edit'\n            onClick={ () => {\n                dispatch( 'core' ).saveEntityRecord( 'root', 'site', {\n                    writers_blocks: {\n                        ...settings,\n                        editing_mode: settings.editing_mode === \"1\" ? \"0\" : \"1\",\n                    }\n                } );\n\n                if (settings.editing_mode === \"1\") {\n                    removeAnnotations();\n                } else {\n                    const blockProblems = select('writers-blocks/editor').getProblems();\n                    addAnnotations(blockProblems);\n                }\n            } }\n        />\n    );\n};\n","import { __ } from '@wordpress/i18n';\nimport { PluginSidebar } from '@wordpress/edit-post';\nimport { PanelBody, PanelRow, ToggleControl, Spinner, Dropdown, Button, MenuGroup, MenuItem, DropdownMenu } from '@wordpress/components';\nimport { useSelect, select, dispatch } from '@wordpress/data';\nimport { Fragment, useEffect, useState } from '@wordpress/element';\nimport { moreVertical, edit } from '@wordpress/icons';\n\nimport {\n\tPROBLEM_TYPES_TO_LABEL,\n\tBLOCK_TYPE_CONTENT_ATTRIBUTE,\n} from '../../constants';\nimport { store } from '../../store';\n\nconst { WB_SETTINGS: { settings: SHOWN_ANNOTATION_TYPES } } = window;\n\nexport const PluginPanel = () => {\n\tconst [suggestions, setSuggestions] = useState(SHOWN_ANNOTATION_TYPES);\n\n\tconst siteSettings = useSelect((select) => {\n\t\treturn select('core').getEntityRecord('root', 'site');\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (siteSettings) {\n\t\t\tconst { writers_blocks } = siteSettings;\n\t\t\tsetSuggestions(writers_blocks);\n\t\t}\n\t}, [siteSettings]);\n\n\tconst {\n\t\treadingTime,\n\t\tscore,\n\t\tpolarity,\n\t} = useSelect((select) => select(store).getReadability());\n\n\tconst problems = useSelect((select) => {\n\t\tconst currentProblems = select(store).getProblems();\n\n\t\treturn {\n\t\t\tadverb: currentProblems.filter(({ type }) => type === 'adverb'),\n\t\t\tweasel: currentProblems.filter(({ type }) => type === 'weasel'),\n\t\t\thedge: currentProblems.filter(({ type }) => type === 'hedge'),\n\t\t\tfiller: currentProblems.filter(({ type }) => type === 'filler'),\n\t\t\tprofanity: currentProblems.filter(({ type }) => type === 'profanity'),\n\t\t\tequality: currentProblems.filter(({ type }) => type === 'equality'),\n\t\t\tcliche: currentProblems.filter(({ type }) => type === 'cliche'),\n\t\t\tpassive: currentProblems.filter(({ type }) => type === 'passive'),\n\t\t\treadability: currentProblems.filter(({ type }) => type.includes('readability')),\n\t\t\tsimpler: currentProblems.filter(({ type }) => type === 'simpler'),\n\t\t};\n\t});\n\n\treturn (\n\t\t<PluginSidebar\n\t\t\tname=\"writers-blocks\"\n\t\t\ticon=\"text\"\n\t\t\ttitle={__('Writer\\'s Blocks', 'writers-blocks')}\n\t\t>\n\t\t\t{/* <PanelRow className='components-panel__body-static'>\n\t\t\t\t<span>Settings</span>\n\t\t\t\t<DropdownMenu icon={ moreVertical } label=\"Select a direction\">\n\t\t\t\t\t{ ( { onClose } ) => (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\ticon={ edit }\n\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\tconst isEditingMode = suggestions.editing_mode === '1';\n\n\t\t\t\t\t\t\t\t\t\tdispatch( 'core' ).saveEntityRecord( 'root', 'site', {\n\t\t\t\t\t\t\t\t\t\t\twriters_blocks: {\n\t\t\t\t\t\t\t\t\t\t\t\t...suggestions,\n\t\t\t\t\t\t\t\t\t\t\t\tediting_mode: isEditingMode ? \"0\" : \"1\",\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} ).then(({ writers_blocks }) => {\n\t\t\t\t\t\t\t\t\t\t\tsetSuggestions(writers_blocks);\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tif (isEditingMode) {\n\t\t\t\t\t\t\t\t\t\t\tremoveAnnotations();\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tconst blockProblems = select('writers-blocks/editor').getProblems();\n\t\t\t\t\t\t\t\t\t\t\taddAnnotations(blockProblems);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\tisSelected={ suggestions.editing_mode }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tEditing Mode\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) }\n\t\t\t\t</DropdownMenu>\n\t\t\t</PanelRow> */}\n\t\t\t<PanelBody title={__('Readability', 'writers-blocks')}>\n\t\t\t\t{\n\t\t\t\t\treadingTime && score && polarity ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<span>Reading time</span>\n\t\t\t\t\t\t\t\t<h2 style={{margin: 0}}>{(readingTime || 0) >= 1 ? `${\n\t\t\t\t\t\t\t\t\tMath.round(readingTime)} minute${Math.round((readingTime || 0)) > 1 ? 's' : ''\n\t\t\t\t\t\t\t\t}` : 'Less than a minute'}</h2>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<span>Grade</span>\n\t\t\t\t\t\t\t\t<h2 style={{margin: 0}}>{score || 0}</h2>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<span>Polarity</span>\n\t\t\t\t\t\t\t\t<h2 style={{margin: 0}}>{polarity || 0}</h2>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</PanelBody>\n\t\t\t<PanelBody title={__('Suggestions', 'writers-blocks')}>\n\t\t\t\t{\n\t\t\t\t\tObject.keys(PROBLEM_TYPES_TO_LABEL).map((type) =>\n\t\t\t\t\t\tproblems[type].length ? (\n\t\t\t\t\t\t\t<PanelRow key={type}>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel={PROBLEM_TYPES_TO_LABEL[type].label}\n\t\t\t\t\t\t\t\t\thelp={PROBLEM_TYPES_TO_LABEL[type].help(problems[type].length)}\n\t\t\t\t\t\t\t\t\tchecked={suggestions[type] ? suggestions[type] === \"1\" : true}\n\t\t\t\t\t\t\t\t\tonChange={(checked) => {\n\n\t\t\t\t\t\t\t\t\t\tdispatch( 'core' ).saveEntityRecord( 'root', 'site', {\n\t\t\t\t\t\t\t\t\t\t\twriters_blocks: {\n\t\t\t\t\t\t\t\t\t\t\t\t...suggestions,\n\t\t\t\t\t\t\t\t\t\t\t\t[type]: checked ? \"1\" : \"0\",\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} ).then(({ writers_blocks }) => {\n\t\t\t\t\t\t\t\t\t\t\tsetSuggestions(writers_blocks);\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t(PROBLEM_TYPES_TO_LABEL[type].source || [type]).forEach((source) => {\n\t\t\t\t\t\t\t\t\t\t\tif (checked) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst problems = select(store).getProblemsByType(source);\n\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tproblems.forEach(({ blockId, blockName, type, index, offset }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch('core/annotations').__experimentalAddAnnotation({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsource: `writers-blocks--${type}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tblockClientId: blockId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trichTextIdentifier: BLOCK_TYPE_CONTENT_ATTRIBUTE[blockName],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstart: index,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend: offset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch( \"core/annotations\" ).__experimentalRemoveAnnotationsBySource( `writers-blocks--${source}` );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tif (type.includes('readability') && checked) {\n\t\t\t\t\t\t\t\t\t\t\tconst problems = select(store).getProblems();\n\n\t\t\t\t\t\t\t\t\t\t\tproblems\n\t\t\t\t\t\t\t\t\t\t\t\t.filter(({ type }) => ! type.includes('readability'))\n\t\t\t\t\t\t\t\t\t\t\t\t.forEach(({ blockId, blockName, type, index, offset }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch('core/annotations').__experimentalAddAnnotation({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsource: `writers-blocks--${type}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tblockClientId: blockId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trichTextIdentifier: BLOCK_TYPE_CONTENT_ATTRIBUTE[blockName],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstart: index,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend: offset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t) : null\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</PanelBody>\n\t\t</PluginSidebar>\n\t);\n};\n","import { __ } from '@wordpress/i18n';\n\nexport const ALLOWED_BLOCKS = [\n\t'core/paragraph',\n\t'core/heading',\n\t'core/list',\n\t'core/quote',\n\t'core/pullquote',\n\t'core/verse',\n\t'core/media-text',\n\t'core/preformatted',\n];\n\nexport const BLOCK_TYPE_CONTENT_ATTRIBUTE = {\n\t'core/paragraph': 'content',\n\t'core/list': 'values',\n\t'core/quote': 'value',\n};\n\nexport const PROBLEM_TYPES = [\n\t'simpler',\n\t'adverb',\n\t'hedge',\n\t'weasel',\n\t'passive',\n\t'readability-hard',\n\t'readability-very-hard',\n\t'so',\n\t'filler',\n\t'cliche',\n\t'equality',\n\t'profanity',\n];\n\nexport const PROBLEM_TYPES_TO_LABEL = {\n\tsimpler: {\n\t\tlabel: __('Simpler Words', 'writers-blocks'),\n\t\thelp: (number) => `${number} simpler words`,\n\t},\n\tadverb: {\n\t\tlabel: __('Adverbs', 'writers-blocks'),\n\t\thelp: (number) => `${number} adverbs`,\n\t},\n\thedge: {\n\t\tlabel: __('Hedge Words', 'writers-blocks'),\n\t\thelp: (number) => `${number} hedge words`,\n\t},\n\tweasel: {\n\t\tlabel: __('Weasel Words', 'writers-blocks'),\n\t\thelp: (number) => `${number} weasel words`,\n\t},\n\tpassive: {\n\t\tlabel: __('Passive Voice', 'writers-blocks'),\n\t\thelp: (number) => `${number} uses of passive voice`,\n\t},\n\treadability: {\n\t\tlabel: __('Readability', 'writers-blocks'),\n\t\thelp: (number) => `${number} difficult to read sentences`,\n\t\tsource: [\n\t\t\t'readability-hard',\n\t\t\t'readability-very-hard',\n\t\t],\n\t},\n\tfiller: {\n\t\tlabel: __('Filler Words', 'writers-blocks'),\n\t\thelp: (number) => `${number} filler words`,\n\t},\n\tcliche: {\n\t\tlabel: __('Cliché Phrases', 'writers-blocks'),\n\t\thelp: (number) => `${number} cliché phrases`,\n\t},\n\tequality: {\n\t\tlabel: __('Inclusive Language', 'writers-blocks'),\n\t\thelp: (number) => `${number} uses of non-inclusive language`,\n\t},\n\tprofanity: {\n\t\tlabel: __('Profanity', 'writers-blocks'),\n\t\thelp: (number) => `${number} uses of profanity`,\n\t},\n};\n\nexport const DEFAULT_STATE = {\n\tisHighlighted: true,\n\tisBlurred: false,\n\t...Object.keys( PROBLEM_TYPES_TO_LABEL ).map( ( type ) => ( {\n\t\t[ type ]: true,\n\t} ) ),\n};\n","/**\n * External dependencies\n */\nimport { v4 as uuid } from 'uuid';\nimport { select, dispatch } from '@wordpress/data';\nimport { debounce } from 'lodash';\n\n// The WP annotations package isn't loaded by default so force loading it.\nimport \"@wordpress/annotations\";\n\n/**\n * Internal depenedencies\n */\nimport check from '../parsers';\nimport { store } from '../store';\nimport {\n\tPROBLEM_TYPES,\n\tALLOWED_BLOCKS,\n\tBLOCK_TYPE_CONTENT_ATTRIBUTE,\n} from '../constants';\n\nconst { WB_SETTINGS: { settings: SHOWN_ANNOTATION_TYPES }, btoa } = window;\n\nlet isUpdatingProblems = false;\nlet queue = [];\n\nexport function isAnnotationAvailable() {\n\treturn select( \"core/block-editor\" ) && typeof select( \"core/block-editor\" ).getBlocks === 'function' &&\n\t\tselect( \"core/annotations\" ) && typeof dispatch( \"core/annotations\" ).__experimentalAddAnnotation === 'function';\n}\n\nexport const getQueueLength = () => queue.length;\n\nexport const addBlockToQueue = (block) => {\n    if (block) {\n        queue = [\n            // remove all scheduled annotations for this block\n            ...queue.filter( (block) => block.clientId !== block.clientId ),\n            block,\n        ];\n    }\n};\n\nexport const getAnnotatableTextFromBlock = (block) => {\n    const { clientId: blockId, name: blockName, attributes: blockAttributes } = block;\n\n    const isAllowed = ALLOWED_BLOCKS.includes(blockName);\n    const attribute = BLOCK_TYPE_CONTENT_ATTRIBUTE[blockName];\n\n    if (!isAllowed) {\n        return [];\n    }\n\n\tconst problems = check(\n\t\tblockAttributes[attribute],\n\t\t{\n\t\t\tpreserveWhiteSpace: blockName !== 'core/list',\n\t\t}\n\t);\n\n    if (!problems.length) {\n        return [];\n    }\n\n    return problems.map((problem) => ({\n        blockId,\n        blockName,\n\t\tblockAttributes,\n\t\tannotationId: uuid(),\n\t\tid: btoa(\n\t\t\t`${problem.type}_${problem.index}_${problem.offset}_${ problem.value }`\n\t\t),\n        ...problem,\n    }));\n};\n\nexport const removeAnnotations = (blockId = null) => {\n    const annotations = select('core/annotations')\n        .__experimentalGetAnnotations()\n        .filter(\n            (annotation) =>\n                blockId ? annotation.blockClientId === blockId : true &&\n                PROBLEM_TYPES.map((type) => `writers-blocks--${type}`).includes(annotation.source)\n        );\n\n    annotations.forEach( annotation => {\n        dispatch('core/annotations').__experimentalRemoveAnnotation( annotation.id );\n    } );\n};\n\nexport const getAnnotatableText = (blocks) => {\n\tconst allowedBlocks = blocks.filter( (block) => ALLOWED_BLOCKS.includes(block.name) );\n\t\n\treturn allowedBlocks.flatMap(getAnnotatableTextFromBlock);\n};\n\nexport const addAnnotations = (blockProblems, { clientId = null, ignore = [] } = {}) => {\n\tif (clientId) {\n\t\tremoveAnnotations(clientId);\n\t}\n\n\tconst annotations = blockProblems.filter( (problem) =>\n\t\tproblem.state !== 'ignored' && !ignore.includes(problem.id),\n\t);\n\tconst readabilityAnnotations = annotations.filter( (problem) => problem.type.includes('readability') );\n\n\treadabilityAnnotations\n\t\t.forEach((annotation) => {\n\t\t\tconst { blockId, blockName, annotationId, type, index, offset } = annotation;\n\t\t\tconst [name] = type.split('-');\n\n\t\t\tif ( ( SHOWN_ANNOTATION_TYPES[name] ? SHOWN_ANNOTATION_TYPES[name] === '1' : true ) ) {\n\t\t\t\tdispatch('core/annotations').__experimentalAddAnnotation({\n\t\t\t\t\tsource: `writers-blocks--${type}`,\n\t\t\t\t\tblockClientId: blockId,\n\t\t\t\t\trichTextIdentifier: BLOCK_TYPE_CONTENT_ATTRIBUTE[blockName],\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstart: index,\n\t\t\t\t\t\tend: offset,\n\t\t\t\t\t},\n\t\t\t\t\tid: annotationId,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\tannotations\n\t\t.filter( (annotation) => ! annotation.type.includes('readability') )\n\t\t.forEach((annotation) => {\n\t\t\tconst { blockId, blockName, annotationId, type, index, offset } = annotation;\n\t\t\tconst [name] = type.split('-');\n\n\t\t\tif ( ( SHOWN_ANNOTATION_TYPES[name] ? SHOWN_ANNOTATION_TYPES[name] === '1' : true ) ) {\n\t\t\t\tdispatch('core/annotations').__experimentalAddAnnotation({\n\t\t\t\t\tsource: `writers-blocks--${type}`,\n\t\t\t\t\tblockClientId: blockId,\n\t\t\t\t\trichTextIdentifier: BLOCK_TYPE_CONTENT_ATTRIBUTE[blockName],\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstart: index,\n\t\t\t\t\t\tend: offset,\n\t\t\t\t\t},\n\t\t\t\t\tid: annotationId,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n};\n\nexport const scheduleAnnotations = debounce(() => {\n\tif (isUpdatingProblems) {\n\t\treturn;\n\t}\n\n\tisUpdatingProblems = true;\n\tconst block = queue.shift();\n\n\tif (!block) {\n\t\tisUpdatingProblems = false;\n\t\treturn;\n\t}\n\n\tconst blockProblems = getAnnotatableTextFromBlock(block);\n\t\n\tif (blockProblems.length) {\n\t\tconst { clientId } = block;\n\t\tconst problems = select(store).getProblems();\n\n\t\tdispatch(store).addProblems([\n\t\t\t...problems.filter((problem) => problem.blockId !== clientId),\n\t\t\t...blockProblems,\n\t\t]);\n\n\t\taddAnnotations(blockProblems, { clientId });\n\t}\n\n\tisUpdatingProblems = false;\n\n\tif (queue.length) {\n\t\tscheduleAnnotations();\n\t}\n}, 500);\n","// import adverbs from \"./adverbs\";\n// import hedges from \"./hedges\";\n// import passive from \"./passive\";\n// import readability from \"./readability\";\n// import simpler from \"./simpler\";\n// import weasel from \"./weasel\";\nimport { parse } from './retext';\n// import sensitivity from \"./sensitivity\";\n// import fillers from \"./fillers\";\n// import cliches from './cliches';\nimport { strip } from '../utils/strip-text';\n\nexport default (text, { preserveWhiteSpace = true } = {}) => {\n    const content = strip(text, { preserveWhiteSpace });\n\tconst { messages } = parse(content);\n\n\tif (!messages.length) {\n\t\treturn [];\n\t}\n\n\treturn messages.map((match) => {\n\t\tconst { actual: value, position: { start: { offset: index }, end: { offset } }, message, fatal, source, expected } = match;\n\n\t\treturn {\n\t\t\tvalue,\n\t\t\ttype: source.replace('retext-', ''),\n\t\t\tlevel: fatal ? 'warning' : 'suggestion',\n\t\t\tmessage: `${ message.split( ', use' )[0].replaceAll( '`', '\"' ) }.`,\n\t\t\treplacements: expected,\n\t\t\tindex,\n\t\t\toffset,\n\t\t};\n\t});\n\n\t// return [\n\t\t// ...passive(content),\n\t\t// ...adverbs(content),\n\t\t// ...readability(content),\n\t\t// ...simpler(content),\n\t\t// ...hedges(content),\n\t\t// ...weasel(content),\n\t\t// ...sensitivity(content),\n\t\t// ...fillers(content),\n\t\t// ...cliches(content),\n\t// ].filter(Boolean);\n};\n","import {VFile} from 'vfile'\nimport {sort} from 'vfile-sort'\nimport {unified} from 'unified'\nimport retextEnglish from 'retext-english'\nimport retextEquality from 'retext-equality'\nimport retextProfanities from 'retext-profanities'\nimport retextSimplify from 'retext-simplify'\nimport retextReadability from 'retext-readability'\nimport retextIndefiniteArticle from 'retext-indefinite-article'\nimport retextSentenceSpacing from 'retext-sentence-spacing'\nimport retextRepeatedWords from 'retext-repeated-words'\nimport retextRedundantAcronyms from 'retext-redundant-acronyms'\nimport retextPassive from 'retext-passive'\nimport retextIntensify from 'retext-intensify'\nimport retextDiacritics from 'retext-diacritics'\nimport retextContractions from 'retext-contractions'\nimport remarkMessageControl from 'remark-message-control'\n\nexport function parse(value, config) {\n    const options = splitOptions(config)\n    return core(value, options.filter, makeText(options.text))\n}\n\nfunction makeText(options) {\n  return unified()\n    .use(retextEnglish)\n    .use(retextEquality, options)\n    .use(retextProfanities, options)\n    .use(retextSimplify, options)\n    .use(retextReadability, options)\n    .use(retextIndefiniteArticle, options)\n    .use(retextSentenceSpacing, options)\n    .use(retextRepeatedWords, options)\n    .use(retextRedundantAcronyms, options)\n    .use(retextPassive, options)\n    .use(retextIntensify, options)\n    .use(retextDiacritics, options)\n    .use(retextContractions, options)\n}\n\nfunction core(value, options, processor) {\n  const file = new VFile(value)\n  const tree = processor.use(filter, options).parse(file)\n\n  processor.runSync(tree, file)\n\n  sort(file)\n\n  return file\n}\n\nfunction splitOptions(options) {\n  let allow\n  let deny\n  let noBinary\n  let sureness\n\n  if (Array.isArray(options)) {\n    allow = options\n  } else if (options) {\n    allow = options.allow\n    deny = options.deny\n    noBinary = options.noBinary\n    sureness = options.profanitySureness\n  }\n\n  return {filter: {allow, deny}, text: {noBinary, sureness}}\n}\n\nfunction filter(options = {}) {\n  if (options.allow && options.deny) {\n    throw new Error(\n      'Do not provide both allow and deny configuration parameters'\n    )\n  }\n\n  return remarkMessageControl({\n    name: 'alex',\n    reset: Boolean(options.deny),\n    enable: options.deny,\n    disable: options.allow,\n    source: ['retext-equality', 'retext-profanities']\n  })\n}\n","export function addAnnotations(annotations) {\n\treturn {\n\t\ttype: 'ADD_ANNOTATIONS',\n\t\tannotations,\n\t};\n};\n\nexport function addProblem(problem) {\n\treturn {\n\t\ttype: 'ADD_PROBLEM',\n\t\tproblem,\n\t};\n};\n\nexport function addProblems(problems) {\n\treturn {\n\t\ttype: 'ADD_PROBLEMS',\n\t\tproblems,\n\t};\n};\n\nexport function removeProblem(name) {\n\treturn {\n\t\ttype: 'REMOVE_PROBLEM',\n\t\tname,\n\t};\n};\n\nexport function ignoreProblem(name) {\n\treturn {\n\t\ttype: 'IGNORE_PROBLEM',\n\t\tname,\n\t};\n};\n\nexport function updateReadability(stats) {\n\treturn {\n\t\ttype: 'UPDATE_READABILITY',\n\t\tstats,\n\t};\n};\n\nexport function updateUserSettings(settings) {\n\treturn {\n\t\ttype: 'UPDATE_USER_SETTINGS',\n\t\tsettings,\n\t};\n};\n","import { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\n\nconst STORE_NAME = 'writers-blocks/editor';\n\nexport const store = createReduxStore(STORE_NAME, {\n\treducer,\n\tselectors,\n\tactions,\n});\n\nregister(store);\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { PROBLEM_TYPES_TO_LABEL } from '../constants';\n\nconst DEFAULT_USER_SETTINGS = {\n\tshowProblems: true,\n\tsuggestionsToShow: Object.keys(PROBLEM_TYPES_TO_LABEL).reduce((accumulator, type) => {\n\t\taccumulator[type] = true;\n\t\treturn accumulator;\n\t}, {}),\n\tblocks: [],\n};\n\nexport function readability(state = { stats: {} }, action) {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_READABILITY':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstats: action.stats,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport function problems(state = { list: [] }, action) {\n\tswitch (action.type) {\n\t\tcase 'ADD_PROBLEMS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlist: action.problems,\n\t\t\t};\n\t\tcase 'REMOVE_PROBLEM':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlist: state.list.filter((problem) => problem.id !== action.name),\n\t\t\t};\n\t\tcase 'IGNORE_PROBLEM':\n\t\t\tconst problem = state.list.find((problem) => problem.annotationId === action.name);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlist: [\n\t\t\t\t\t...state.list.filter((problem) => problem.annotationId !== action.name),\n\t\t\t\t\t{\n\t\t\t\t\t\t...problem,\n\t\t\t\t\t\tstate: 'ignored',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport function user(state = { settings: DEFAULT_USER_SETTINGS }, action) {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_USER_SETTINGS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsettings: {\n\t\t\t\t\t...state.settings,\n\t\t\t\t\t...action.settings,\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default combineReducers({\n\tproblems,\n\treadability,\n\tuser,\n});\n","import { select } from '@wordpress/data';\n\nconst { btoa } = window;\n\nexport const getProblems = (state) => state.problems.list;\n\nexport const getProblem = (state, id) => state.problems.list.find(\n    ( { annotationId: problemId } ) => problemId === id,\n);\n\nexport const getAnnotations = (state) => state.annotations.list;\n\nexport const getAnnotation = (state, id) => state.annotations.list.find(\n    ( { annotationId } ) => annotationId === id,\n);\n\nexport const getIgnoredAnnotations = (state) => {\n    const annotations = state?.annotations?.list;\n\n    if ( !annotations?.length ) {\n        const { wb_ignored } = select('core/editor').getEditedPostAttribute('meta') || {};\n\n        if ( ! wb_ignored ) {\n            return [];\n        }\n\n        return wb_ignored;\n    }\n\n    return annotations\n        .filter( (annotation) => annotation.state === 'ignored' )\n        .map(\n            ( { type, index, offset, value } ) =>\n                btoa(\n                    `${ type }_${ index }_${ offset }_${ value }`,\n                )\n        );\n};\n\nexport const getBlockProblems = (state, blockId) => state.problems.list.filter(\n    ( { blockId } ) => blockId === blockId,\n);\n\nexport const getProblemsByType = (state, type) => state.problems.list.filter(\n    ( { type } ) => type === type\n);\n\nexport const getReadability = (state) => state.readability.stats;\n\nexport const getUserSettings = (state) => state.user.settings;\n","/**\n * External dependencies\n */\n import { debounce } from 'lodash';\n\nimport { subscribe, select, dispatch } from '@wordpress/data';\nimport domReady from '@wordpress/dom-ready';\n\n/**\n * Internal depenedencies\n */\nimport { readingScore } from '../utils/reading-score';\nimport { store } from '../store';\nimport {\n\tgetAnnotatableText,\n\tgetQueueLength,\n\tisAnnotationAvailable,\n\taddBlockToQueue,\n\tscheduleAnnotations,\n\taddAnnotations,\n} from '../decorators/gutenberg';\n\nlet _content = '';\n\nconst scheduleReadingScoreUpdate = debounce((content) => {\n\tdispatch(store).updateReadability(readingScore(content));\n}, 500);\n\ndomReady(() => {\n\tsubscribe( () => {\n\t\tconst content = select('core/editor').getEditedPostAttribute('content');\n\t\tconst strippedContent = typeof content === 'string' ? content.replace(/<!--(.*?)-->/g, '') : '';\n\t\tconst problems = select(store).getProblems();\n\n\t\tif (!strippedContent || (strippedContent === _content && problems.length)) {\n\t\t\treturn;\n\t\t}\n\n\t\tscheduleReadingScoreUpdate(content);\n\n\t\tif (!isAnnotationAvailable()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst blocks = select('core/block-editor').getBlocks();\n\n\t\tif (!problems.length && blocks.length) {\n\t\t\tconst blockProblems = getAnnotatableText(blocks);\n\t\t\t\n\t\t\tif (blockProblems.length) {\n\t\t\t\tconst ignoredAnnotations = select(store).getIgnoredAnnotations();\n\n\t\t\t\tdispatch(store).addProblems(blockProblems);\n\t\t\t\taddAnnotations(blockProblems, {\n\t\t\t\t\tignore: ignoredAnnotations,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst selectedBlock = select('core/block-editor').getSelectedBlock();\n\n\t\tif (selectedBlock) {\n\t\t\taddBlockToQueue(selectedBlock);\n\t\t}\n\n\t\tif (getQueueLength() > 0) {\n\t\t\tscheduleAnnotations();\n\t\t}\n\n\t\t_content = strippedContent;\n\t});\n});\n","import './annotations';\nimport './toolbar';\nimport './tooltip';\n","import { subscribe, select } from '@wordpress/data';\nimport domReady from '@wordpress/dom-ready';\nimport { render } from '@wordpress/element';\n\nimport { isAnnotationAvailable } from '../decorators/gutenberg';\nimport { EditorToolbarButton } from '../components/editor-toolbar-button';\n\n// domReady(() => {\n// \tsubscribe( () => {\n// \t\tconst toolbar = document.querySelector('.edit-post-header-toolbar__left');\n//         const toolbarButton = document.querySelector('#writers-blocks-toolbar-button');\n\n// \t\tif (!isAnnotationAvailable() || !toolbar || toolbarButton) {\n// \t\t\treturn;\n// \t\t}\n\n//         const { writers_blocks } = select('core').getEntityRecord('root', 'site') || {};\n//         const { editing_mode } = writers_blocks || DEFAULT_SETTINGS;\n\n//         toolbar.appendChild(placeholder);\n\n//         render(\n            // <ToolbarButton\n            //     className={ classnames( 'components-toolbar__control', { 'is-pressed': editing_mode } ) }\n            //     id=\"writers-blocks-toolbar-button\"\n            //     icon='edit'\n            //     label='Edit'\n            //     onClick={ () => {\n            //         dispatch( 'core' ).saveEntityRecord( 'root', 'site', {\n            //             writers_blocks: {\n            //                 ...writers_blocks,\n            //                 editing_mode: editing_mode === \"1\" ? \"0\" : \"1\",\n            //             }\n            //         } ).then(({ writers_blocks }) => {\n            //             console.log(writers_blocks);\n            //         });\n            //     } }\n            // />,\n//             placeholder\n//         );\n//     });\n// });\n\nsubscribe(() => {\n\tconst quickpostbutton = document.querySelector(\n\t\t\"#createwithrani-quick-post-button-wrapper\"\n\t);\n\n\t// If the Quick Post Button already exists, skip render\n\tif (quickpostbutton || !isAnnotationAvailable()) {\n\t\treturn;\n\t}\n\n\tdomReady(() => {\n\t\tconst editorToolbar = document.querySelector(\n\t\t\t\".edit-post-header-toolbar__left\"\n\t\t);\n\n\t\t// If toolbar doesn't exist, we can't continue\n\t\tif (!editorToolbar) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buttonWrapper = document.createElement(\"div\");\n\t\tbuttonWrapper.id = \"createwithrani-quick-post-button-wrapper\";\n\t\tbuttonWrapper.style.cssText = \"display:flex;\";\n\n\t\teditorToolbar.appendChild(buttonWrapper);\n\n\t\trender(\n\t\t\t<EditorToolbarButton />,\n\t\t\tdocument.getElementById(\"createwithrani-quick-post-button-wrapper\")\n\t\t);\n\t});\n});\n","/**\n * WordPress depenedencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { subscribe, select, useSelect, dispatch, useDispatch } from '@wordpress/data';\nimport domReady from '@wordpress/dom-ready';\nimport { render, useEffect, useState } from '@wordpress/element';\nimport { Popover, Button, Flex } from '@wordpress/components';\n\n/**\n * Internal depenedencies\n */\n// import { BLOCK_TYPE_CONTENT_ATTRIBUTE } from '../constants';\nimport { store } from '../store';\n// import { strip } from '../utils/strip-text';\n\nconst { btoa } = window;\n\n/**\n * \n * @param {*} element \n * @returns \n */\nconst getPopoverPosition = (element) => element.getBoundingClientRect();\n\n/**\n * \n * @param {*} param0 \n * @returns \n */\nconst Tooltip = ({ isShown, target, annotationId }) => {\n\tconst [ignoredAnnotations, setIgnoredAnnotations] = useState( null );\n\n\tconst { wb_ignored } = useSelect(\n\t\t(select) => select('core/editor').getEditedPostAttribute('meta') || {},\n\t);\n\tconst selectedAnnotation = useSelect(\n\t\t( select ) => select( 'writers-blocks/editor' ).getProblem( annotationId ),\n\t);\n\n\tconst { editPost } = useDispatch('core/editor');\n\n\tuseEffect(() => {\n\t\tif (wb_ignored) {\n\t\t\tsetIgnoredAnnotations(wb_ignored);\n\t\t}\n\t}, [wb_ignored]);\n\n\tconst {\n\t\t// blockId,\n\t\t// blockName,\n\t\tindex,\n\t\toffset,\n\t\tmessage,\n\t\ttype,\n\t\tvalue,\n\t\t// replacements: [ { action, value } = {} ] = [ {} ],\n\t} = selectedAnnotation || {};\n\tconst [ title ] = type?.split( '-' ) || [];\n\n\t// const { attributes } = useSelect(\n\t// \t( select ) => select( 'core/block-editor' ).getBlock( blockId ) || {},\n\t// );\n\n\t// const { updateBlockAttributes } = useDispatch( 'core/block-editor' );\n\n\treturn (\n\t\tisShown && message ? (\n\t\t\t<Popover\n\t\t\t\tclassName={ `writers-blocks-annotation-popover is-type-${type}` }\n\t\t\t\tposition=\"top center\"\n\t\t\t\tgetAnchorRect={() => getPopoverPosition(target)}\n\t\t\t>\n\t\t\t\t<h5>{ title }</h5>\n\t\t\t\t<p>{ message }</p>\n\t\t\t\t<Flex justify=\"end\">\n\t\t\t\t\t{\n\t\t\t\t\t\tprocess.env.NODE_ENV === 'development' ? (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\tconsole.log( select( store ).getProblem( annotationId ) );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Inspect', 'writers-blocks' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) : null\n\t\t\t\t\t}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tdispatch( store ).ignoreProblem( annotationId );\n\t\t\t\t\t\t\tdispatch('core/annotations').__experimentalRemoveAnnotation( annotationId );\n\n\t\t\t\t\t\t\teditPost({\n\t\t\t\t\t\t\t\tmeta: {\n\t\t\t\t\t\t\t\t\twb_ignored: [\n\t\t\t\t\t\t\t\t\t\t...ignoredAnnotations,\n\t\t\t\t\t\t\t\t\t\tbtoa(\n\t\t\t\t\t\t\t\t\t\t\t`${type}_${index}_${offset}_${ value }`,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Ignore', 'writers-blocks' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\t * Still needs some work...\n\t\t\t\t\t */\n\t\t\t\t\t/* {\n\t\t\t\t\t\taction ? (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\tconst content = strip( attributes[ BLOCK_TYPE_CONTENT_ATTRIBUTE[ blockName ] ] );\n\t\t\t\t\t\t\t\t\tconst newContent = `${ content.substring( 0, index ) }${ value.trim() }${ content.substring( offset + 1 ) }`;\n\n\t\t\t\t\t\t\t\t\tupdateBlockAttributes( blockId, {\n\t\t\t\t\t\t\t\t\t\t[ BLOCK_TYPE_CONTENT_ATTRIBUTE[ blockName ] ]: `<p>${ newContent }</p>`,\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( action === 'delete' ? 'Omit' : action, 'writers-blocks' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) : null\n\t\t\t\t\t} */\n\t\t\t\t\t}\n\t\t\t\t</Flex>\n\t\t\t</Popover>\n\t\t) : null\n\t);\n};\n\nsubscribe(() => {\n\n\tdomReady(() => {\n\t\tconst editorWrapper = document.querySelector('.edit-post-visual-editor');\n\t\tconst isTyping = select('core/block-editor').isTyping();\n\n\t\tif (!editorWrapper) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet popoverWrapper = document.getElementById('writers-blocks-popover-wrapper');\n\t\tconst selectedAnnotation = document.querySelector(\n\t\t\t'.wp-block.is-selected mark[class*=\"annotation-text-writers-blocks\"][data-rich-text-format-boundary=\"true\"]'\n\t\t);\n\n\t\tif (!selectedAnnotation && !popoverWrapper) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!popoverWrapper) {\n\t\t\tpopoverWrapper = document.createElement(\"div\");\n\t\t\tpopoverWrapper.id = \"writers-blocks-popover-wrapper\";\n\n\t\t\teditorWrapper.prepend(popoverWrapper);\n\t\t}\n\n\t\trender(\n\t\t\t<Tooltip\n\t\t\t\tisShown={!!selectedAnnotation && !isTyping}\n\t\t\t\ttarget={selectedAnnotation}\n\t\t\t\tannotationId={selectedAnnotation?.id?.replace('annotation-text-', '')}\n\t\t\t/>,\n\t\t\tdocument.getElementById(\"writers-blocks-popover-wrapper\")\n\t\t);\n\t});\n});\n","/**\n * \n */\nimport readingTime from 'reading-time/lib/reading-time';\nimport { automatedReadability } from 'automated-readability';\nimport { polarity } from 'polarity';\n\n/**\n * \n */\nimport { count as characterCounter } from '@wordpress/wordcount';\n\n/**\n * Internal dependencies\n */\nimport { strip } from './strip-text';\nimport { tokenize } from './tokenizer';\n\n/**\n * \n * @param {string} content\n */\nexport const readingScore = (content) => {\n    const text = strip(content);\n\n    const paragraphs = text.replace(/\\n$/gm, '').split(/\\n/g).filter((line) => line.length);\n    const { sentences } = tokenize(paragraphs.join(' '));\n    const words = sentences.reduce((accumulator, sentence) => {\n        const { words } = tokenize(sentence);\n\n        accumulator.push(...words);\n        return accumulator;\n    }, []);\n\n    const wordCount = characterCounter(text, 'words');\n    const characterCount = characterCounter(text, 'characters_including_spaces');\n    const alphaNumericCharacters = text.match(/[a-zA-Z0-9]/g);\n    const letters = text.match(/[a-zA-Z]/g)?.length || 0;\n    const score = automatedReadability({\n        sentence: sentences.length,\n        word: wordCount,\n        character: alphaNumericCharacters?.length || 0,\n    });\n    const { polarity: polarityScore } = polarity(words);\n    const { minutes } = readingTime(text, { wordsPerMinute: 250 });\n\n    return {\n        paragraphs: paragraphs.length,\n        sentences: sentences.length,\n        words: wordCount,\n        characters: characterCount,\n        score: Math.round(score),\n        letters,\n        polarity: polarityScore,\n        readingTime: minutes,\n    };\n};\n","/**\n * Replaces items matched in the regex with character.\n *\n * @param {string} text The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripAstrals( text ) {\n\treturn text.replace( /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, '' );\n}\n","/**\n * Removes items matched in the regex.\n *\n * @param {string} text The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripHTMLComments(text) {\n\treturn text.replace( /<!--[\\s\\S]*?-->/g, '' );\n}\n","/**\n * Replaces items matched in the regex with a single character.\n *\n * @param {string} text The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripHTMLEntities( text ) {\n\treturn text.replace( /&\\S+?;/g, '' );\n}\n","/**\n * Replaces items matched in the regex with spaces.\n *\n * @param {string} text The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripSpaces( text ) {\n\treturn text.replace( /[\\n\\r\\t]+/g, ' ' );\n}\n","/**\n * Replaces items matched in the regex with new line\n *\n * @param {string} text The string being counted.\n *\n * @return {string} The manipulated text.\n */\n// export default function stripTags(text, preserveWhiteSpace) {\n// \treturn text.split( /<\\/?[a-z][^>]*?>/gi ).filter(Boolean).join(preserveWhiteSpace ? '' : ' ');\n// }\n\nexport default function stripTags(text, preserveWhiteSpace) {\n\treturn text\n\t\t.replaceAll( '</li><li>', ' ' )\n\t\t.replace( /<\\/?[li][^>]*?>/gi, '' )\n\t\t.replace( /<\\/?[br][^>]*?>/gi, ' ' )\n\t\t.split( /<\\/?[a-z][^>]*?>/gi ).filter(Boolean).join(preserveWhiteSpace ? ' ' : '');\n}\n","import { flow } from 'lodash';\n\nimport stripTags from \"./strip-tags\";\nimport stripAstrals from './strip-astrals';\nimport stripHTMComments from './strip-html-comments';\nimport stripSpaces from './strip-spaces';\nimport stripHTMLEntities from './strip-html-entities';\n\nexport const strip = (text, { preserveWhiteSpace = true } = {}) => text ? `${\n\tflow(\n\t\tstripHTMComments,\n\t\tstripAstrals,\n\t\tstripSpaces,\n\t\tstripHTMLEntities,\n\t\tstripTags,\n\t)(text, preserveWhiteSpace)\n}\\n` : '';\n","import Tokenizer from 'sentence-tokenizer';\n\nexport const tokenize = (text) => {\n\tconst tokenizer = new Tokenizer();\n\ttokenizer.setEntry(text);\n\n\ttry {\n\t\treturn {\n\t\t\tsentences: tokenizer.getSentences(),\n\t\t\twords: tokenizer.getTokens(),\n\t\t}\n\t} catch(error) {\n\t\treturn {\n\t\t\tsentences: 0,\n\t\t\twords: 0,\n\t\t};\n\t}\n};\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","//\n// format - printf-like string formatting for JavaScript\n// github.com/samsonjs/format\n// @_sjs\n//\n// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\n//\n// MIT License\n// http://sjs.mit-license.org\n//\n\n;(function() {\n\n  //// Export the API\n  var namespace;\n\n  // CommonJS / Node module\n  if (typeof module !== 'undefined') {\n    namespace = module.exports = format;\n  }\n\n  // Browsers and other environments\n  else {\n    // Get the global object. Works in ES3, ES5, and ES5 strict mode.\n    namespace = (function(){ return this || (1,eval)('this') }());\n  }\n\n  namespace.format = format;\n  namespace.vsprintf = vsprintf;\n\n  if (typeof console !== 'undefined' && typeof console.log === 'function') {\n    namespace.printf = printf;\n  }\n\n  function printf(/* ... */) {\n    console.log(format.apply(null, arguments));\n  }\n\n  function vsprintf(fmt, replacements) {\n    return format.apply(null, [fmt].concat(replacements));\n  }\n\n  function format(fmt) {\n    var argIndex = 1 // skip initial format argument\n      , args = [].slice.call(arguments)\n      , i = 0\n      , n = fmt.length\n      , result = ''\n      , c\n      , escaped = false\n      , arg\n      , tmp\n      , leadingZero = false\n      , precision\n      , nextArg = function() { return args[argIndex++]; }\n      , slurpNumber = function() {\n          var digits = '';\n          while (/\\d/.test(fmt[i])) {\n            digits += fmt[i++];\n            c = fmt[i];\n          }\n          return digits.length > 0 ? parseInt(digits) : null;\n        }\n      ;\n    for (; i < n; ++i) {\n      c = fmt[i];\n      if (escaped) {\n        escaped = false;\n        if (c == '.') {\n          leadingZero = false;\n          c = fmt[++i];\n        }\n        else if (c == '0' && fmt[i + 1] == '.') {\n          leadingZero = true;\n          i += 2;\n          c = fmt[i];\n        }\n        else {\n          leadingZero = true;\n        }\n        precision = slurpNumber();\n        switch (c) {\n        case 'b': // number in binary\n          result += parseInt(nextArg(), 10).toString(2);\n          break;\n        case 'c': // character\n          arg = nextArg();\n          if (typeof arg === 'string' || arg instanceof String)\n            result += arg;\n          else\n            result += String.fromCharCode(parseInt(arg, 10));\n          break;\n        case 'd': // number in decimal\n          result += parseInt(nextArg(), 10);\n          break;\n        case 'f': // floating point number\n          tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\n          result += leadingZero ? tmp : tmp.replace(/^0/, '');\n          break;\n        case 'j': // JSON\n          result += JSON.stringify(nextArg());\n          break;\n        case 'o': // number in octal\n          result += '0' + parseInt(nextArg(), 10).toString(8);\n          break;\n        case 's': // string\n          result += nextArg();\n          break;\n        case 'x': // lowercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16);\n          break;\n        case 'X': // uppercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16).toUpperCase();\n          break;\n        default:\n          result += c;\n          break;\n        }\n      } else if (c === '%') {\n        escaped = true;\n      } else {\n        result += c;\n      }\n    }\n    return result;\n  }\n\n}());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","(function(global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return factory(global, global.document);\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = factory(global, global.document);\n  } else {\n      global.normalize = factory(global, global.document);\n  }\n} (typeof window !== 'undefined' ? window : this, function (window, document) {\n  var charmap = require('./charmap.json');\n  var regex = null;\n  var current_charmap;\n  var old_charmap;\n\n  function normalize(str, custom_charmap) {\n    old_charmap = current_charmap;\n    current_charmap = custom_charmap || charmap;\n\n    regex = (regex && old_charmap === current_charmap) ? regex : buildRegExp(current_charmap);\n\n    return str.replace(regex, function(charToReplace) {\n      return current_charmap[charToReplace.charCodeAt(0)] || charToReplace;\n    });\n  }\n\n  function buildRegExp(charmap){\n     return new RegExp('[' + Object.keys(charmap).map(function(code) {return String.fromCharCode(code); }).join(' ') + ']', 'g');\n   }\n\n  return normalize;\n}));\n","/*!\n * Number-To-Words util\n * @version v1.2.4\n * @link https://github.com/marlun78/number-to-words\n * @author Martin Eneqvist (https://github.com/marlun78)\n * @contributors Aleksey Pilyugin (https://github.com/pilyugin),Jeremiah Hall (https://github.com/jeremiahrhall),Adriano Melo (https://github.com/adrianomelo),dmrzn (https://github.com/dmrzn)\n * @license MIT\n */\n!function(){\"use strict\";var e=\"object\"==typeof self&&self.self===self&&self||\"object\"==typeof global&&global.global===global&&global||this,t=9007199254740991;function f(e){return!(\"number\"!=typeof e||e!=e||e===1/0||e===-1/0)}function l(e){return\"number\"==typeof e&&Math.abs(e)<=t}var n=/(hundred|thousand|(m|b|tr|quadr)illion)$/,r=/teen$/,o=/y$/,i=/(zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)$/,s={zero:\"zeroth\",one:\"first\",two:\"second\",three:\"third\",four:\"fourth\",five:\"fifth\",six:\"sixth\",seven:\"seventh\",eight:\"eighth\",nine:\"ninth\",ten:\"tenth\",eleven:\"eleventh\",twelve:\"twelfth\"};function h(e){return n.test(e)||r.test(e)?e+\"th\":o.test(e)?e.replace(o,\"ieth\"):i.test(e)?e.replace(i,a):e}function a(e,t){return s[t]}var u=10,d=100,p=1e3,v=1e6,b=1e9,y=1e12,c=1e15,g=9007199254740992,m=[\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\",\"eleven\",\"twelve\",\"thirteen\",\"fourteen\",\"fifteen\",\"sixteen\",\"seventeen\",\"eighteen\",\"nineteen\"],w=[\"zero\",\"ten\",\"twenty\",\"thirty\",\"forty\",\"fifty\",\"sixty\",\"seventy\",\"eighty\",\"ninety\"];function x(e,t){var n,r=parseInt(e,10);if(!f(r))throw new TypeError(\"Not a finite number: \"+e+\" (\"+typeof e+\")\");if(!l(r))throw new RangeError(\"Input is not a safe number, it’s either too large or too small.\");return n=function e(t){var n,r,o=arguments[1];if(0===t)return o?o.join(\" \").replace(/,$/,\"\"):\"zero\";o||(o=[]);t<0&&(o.push(\"minus\"),t=Math.abs(t));t<20?(n=0,r=m[t]):t<d?(n=t%u,r=w[Math.floor(t/u)],n&&(r+=\"-\"+m[n],n=0)):t<p?(n=t%d,r=e(Math.floor(t/d))+\" hundred\"):t<v?(n=t%p,r=e(Math.floor(t/p))+\" thousand,\"):t<b?(n=t%v,r=e(Math.floor(t/v))+\" million,\"):t<y?(n=t%b,r=e(Math.floor(t/b))+\" billion,\"):t<c?(n=t%y,r=e(Math.floor(t/y))+\" trillion,\"):t<=g&&(n=t%c,r=e(Math.floor(t/c))+\" quadrillion,\");o.push(r);return e(n,o)}(r),t?h(n):n}var M={toOrdinal:function(e){var t=parseInt(e,10);if(!f(t))throw new TypeError(\"Not a finite number: \"+e+\" (\"+typeof e+\")\");if(!l(t))throw new RangeError(\"Input is not a safe number, it’s either too large or too small.\");var n=String(t),r=Math.abs(t%100),o=11<=r&&r<=13,i=n.charAt(n.length-1);return n+(o?\"th\":\"1\"===i?\"st\":\"2\"===i?\"nd\":\"3\"===i?\"rd\":\"th\")},toWords:x,toWordsOrdinal:function(e){return h(x(e))}};\"undefined\"!=typeof exports?(\"undefined\"!=typeof module&&module.exports&&(exports=module.exports=M),exports.numberToWords=M):e.numberToWords=M}();","'use strict'\n\nmodule.exports = nlcstToString\n\n// Stringify one nlcst node or list of nodes.\nfunction nlcstToString(node, separator) {\n  var sep = separator || ''\n  var values\n  var length\n  var children\n\n  if (!node || (!('length' in node) && !node.type)) {\n    throw new Error('Expected node, not `' + node + '`')\n  }\n\n  if (typeof node.value === 'string') {\n    return node.value\n  }\n\n  children = 'length' in node ? node : node.children\n  length = children.length\n\n  // Shortcut: This is pretty common, and a small performance win.\n  if (length === 1 && 'value' in children[0]) {\n    return children[0].value\n  }\n\n  values = []\n\n  while (length--) {\n    values[length] = nlcstToString(children[length], sep)\n  }\n\n  return values.join(sep)\n}\n","'use strict'\n\nmodule.exports = nlcstToString\n\n// Stringify one nlcst node or list of nodes.\nfunction nlcstToString(node, separator) {\n  var sep = separator || ''\n  var values\n  var length\n  var children\n\n  if (!node || (!('length' in node) && !node.type)) {\n    throw new Error('Expected node, not `' + node + '`')\n  }\n\n  if (typeof node.value === 'string') {\n    return node.value\n  }\n\n  children = 'length' in node ? node : node.children\n  length = children.length\n\n  // Shortcut: This is pretty common, and a small performance win.\n  if (length === 1 && 'value' in children[0]) {\n    return children[0].value\n  }\n\n  values = []\n\n  while (length--) {\n    values[length] = nlcstToString(children[length], sep)\n  }\n\n  return values.join(sep)\n}\n","/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n","/*!\n * reading-time\n * Copyright (c) Nicolas Gryman <ngryman@gmail.com>\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * @typedef {import('reading-time').Options['wordBound']} WordBoundFunction\n */\n\n/**\n * @param {number} number\n * @param {number[][]} arrayOfRanges\n */\nfunction codeIsInRanges(number, arrayOfRanges) {\n  return arrayOfRanges.some(([lowerBound, upperBound]) =>\n    (lowerBound <= number) && (number <= upperBound)\n  )\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isCJK(c) {\n  if ('string' !== typeof c) {\n    return false\n  }\n  const charCode = c.charCodeAt(0)\n  // Help wanted!\n  // This should be good for most cases, but if you find it unsatisfactory\n  // (e.g. some other language where each character should be standalone words),\n  // contributions welcome!\n  return codeIsInRanges(\n    charCode,\n    [\n      // Hiragana (Katakana not included on purpose,\n      // context: https://github.com/ngryman/reading-time/pull/35#issuecomment-853364526)\n      // If you think Katakana should be included and have solid reasons, improvement is welcomed\n      [0x3040, 0x309f],\n      // CJK Unified ideographs\n      [0x4e00, 0x9fff],\n      // Hangul\n      [0xac00, 0xd7a3],\n      // CJK extensions\n      [0x20000, 0x2ebe0]\n    ]\n  )\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isAnsiWordBound(c) {\n  return ' \\n\\r\\t'.includes(c)\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isPunctuation(c) {\n  if ('string' !== typeof c) {\n    return false\n  }\n  const charCode = c.charCodeAt(0)\n  return codeIsInRanges(\n    charCode,\n    [\n      [0x21, 0x2f],\n      [0x3a, 0x40],\n      [0x5b, 0x60],\n      [0x7b, 0x7e],\n      // CJK Symbols and Punctuation\n      [0x3000, 0x303f],\n      // Full-width ASCII punctuation variants\n      [0xff00, 0xffef]\n    ]\n  )\n}\n\n/**\n * @type {import('reading-time').default}\n */\nfunction readingTime(text, options = {}) {\n  let words = 0, start = 0, end = text.length - 1\n\n  // use provided value if available\n  const wordsPerMinute = options.wordsPerMinute || 200\n\n  // use provided function if available\n  const isWordBound = options.wordBound || isAnsiWordBound\n\n  // fetch bounds\n  while (isWordBound(text[start])) start++\n  while (isWordBound(text[end])) end--\n\n  // Add a trailing word bound to make handling edges more convenient\n  const normalizedText = `${text}\\n`\n\n  // calculate the number of words\n  for (let i = start; i <= end; i++) {\n    // A CJK character is a always word;\n    // A non-word bound followed by a word bound / CJK is the end of a word.\n    if (\n      isCJK(normalizedText[i]) ||\n      (!isWordBound(normalizedText[i]) &&\n        (isWordBound(normalizedText[i + 1]) || isCJK(normalizedText[i + 1]))\n      )\n    ) {\n      words++\n    }\n    // In case of CJK followed by punctuations, those characters have to be eaten as well\n    if (isCJK(normalizedText[i])) {\n      while (\n        i <= end &&\n        (isPunctuation(normalizedText[i + 1]) || isWordBound(normalizedText[i + 1]))\n      ) {\n        i++\n      }\n    }\n  }\n\n  // reading time stats\n  const minutes = words / wordsPerMinute\n  // Math.round used to resolve floating point funkyness\n  //   http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\n  const time = Math.round(minutes * 60 * 1000)\n  const displayed = Math.ceil(minutes.toFixed(2))\n\n  return {\n    text: displayed + ' min read',\n    minutes: minutes,\n    time: time,\n    words: words\n  }\n}\n\n/**\n * Export\n */\nmodule.exports = readingTime\n","\"use strict\";\n\n// eslint-disable-next-line no-unused-vars\nvar debug = require('debug')('tokenizer');\n\nfunction compact(str) {\n  var res = str.trim();\n  res = res.replace('  ', ' ');\n  return res;\n}\n\nfunction Tokenizer(username, botname) {\n\n  // // Maybe it is not useful\n  // if (!(this instanceof Tokenizer)) {\n  //   return new Tokenizer();\n  // }\n\n  this.username = username || 'Guy';\n  this.entry = null;\n  this.sentences = null;\n\n  if (typeof botname == 'string') {\n    this.botname = botname;\n  }\n  else {\n    this.botname = 'ECTOR';\n  }\n}\n\nTokenizer.prototype = {\n  setEntry : function (entry) {\n    this.entry = compact(entry);\n    this.sentences = null;\n  },\n  // Split the entry into sentences.\n  getSentences : function () {\n    // this.sentences = this.entry.split(/[\\.!]\\s/);\n    if (!this.entry) return [];\n    var words = this.entry.split(' ');\n    var endingWords = words.filter(function(w) {\n      return w.endsWith('.') || w.endsWith('!') || w.endsWith('?');\n    });\n\n    var self = this;\n    var botnameRegExp = new RegExp(\"\\\\W?\" + self.botname.normalize() + \"\\\\W?\");\n    var usernameRegExp = new RegExp(\"\\\\W?\" + self.username.normalize() + \"\\\\W?\");\n    var lastSentence = words[0];\n    self.sentences = [];\n    words.reduce(function (prev, cur) {\n      var curNormalized = cur.normalize();\n      var curReplaced = cur;\n      if (curNormalized.search(botnameRegExp) !== -1) {\n        curReplaced = cur.replace(self.botname,\"{yourname}\");\n      }\n      else if (curNormalized.search(usernameRegExp) !== -1) {\n        curReplaced = cur.replace(self.username,\"{myname}\");\n      }\n\n      if (endingWords.indexOf(prev) != -1) {\n        self.sentences.push(compact(lastSentence));\n        lastSentence = \"\";\n      }\n      lastSentence = lastSentence + \" \" + curReplaced;\n      return cur;\n    });\n    self.sentences.push(compact(lastSentence));\n    return this.sentences;\n  },\n  // Get the tokens of one sentence\n  getTokens : function (sentenceIndex) {\n    var s = 0;\n    if(typeof sentenceIndex === 'number') s = sentenceIndex;\n    return this.sentences[s].split(' ');\n  }\n};\n\nmodule.exports = Tokenizer;","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\treturn createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict'\n\nvar iterate = require('array-iterate')\n\nmodule.exports = modifierFactory\n\n// Turn `callback` into a child-modifier accepting a parent.  See\n// `array-iterate` for more info.\nfunction modifierFactory(callback) {\n  return iteratorFactory(wrapperFactory(callback))\n}\n\n// Turn `callback` into a `iterator' accepting a parent.\nfunction iteratorFactory(callback) {\n  return iterator\n\n  function iterator(parent) {\n    var children = parent && parent.children\n\n    if (!children) {\n      throw new Error('Missing children in `parent` for `modifier`')\n    }\n\n    iterate(children, callback, parent)\n  }\n}\n\n// Pass the context as the third argument to `callback`.\nfunction wrapperFactory(callback) {\n  return wrapper\n\n  function wrapper(value, index) {\n    return callback(value, index, this)\n  }\n}\n","'use strict'\n\nmodule.exports = visitChildren\n\nfunction visitChildren(callback) {\n  return visitor\n\n  // Visit `parent`, invoking `callback` for each child.\n  function visitor(parent) {\n    var index = -1\n    var children = parent && parent.children\n\n    if (!children) {\n      throw new Error('Missing children in `parent` for `visitor`')\n    }\n\n    while (++index in children) {\n      callback(children[index], index, parent)\n    }\n  }\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"annotations\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"wordcount\"];","/** @type {Record<string, number>} */\nexport const afinn165 = {\n  abandon: -2,\n  abandoned: -2,\n  abandons: -2,\n  abducted: -2,\n  abduction: -2,\n  abductions: -2,\n  abhor: -3,\n  abhorred: -3,\n  abhorrent: -3,\n  abhors: -3,\n  abilities: 2,\n  ability: 2,\n  aboard: 1,\n  aborted: -1,\n  aborts: -1,\n  absentee: -1,\n  absentees: -1,\n  absolve: 2,\n  absolved: 2,\n  absolves: 2,\n  absolving: 2,\n  absorbed: 1,\n  abuse: -3,\n  abused: -3,\n  abuses: -3,\n  abusing: -3,\n  abusive: -3,\n  accept: 1,\n  acceptable: 1,\n  acceptance: 1,\n  accepted: 1,\n  accepting: 1,\n  accepts: 1,\n  accessible: 1,\n  accident: -2,\n  accidental: -2,\n  accidentally: -2,\n  accidents: -2,\n  acclaim: 2,\n  acclaimed: 2,\n  accolade: 2,\n  accomplish: 2,\n  accomplished: 2,\n  accomplishes: 2,\n  accomplishment: 2,\n  accomplishments: 2,\n  accusation: -2,\n  accusations: -2,\n  accuse: -2,\n  accused: -2,\n  accuses: -2,\n  accusing: -2,\n  ache: -2,\n  achievable: 1,\n  aching: -2,\n  acquit: 2,\n  acquits: 2,\n  acquitted: 2,\n  acquitting: 2,\n  acrimonious: -3,\n  active: 1,\n  adequate: 1,\n  admire: 3,\n  admired: 3,\n  admires: 3,\n  admiring: 3,\n  admit: -1,\n  admits: -1,\n  admitted: -1,\n  admonish: -2,\n  admonished: -2,\n  adopt: 1,\n  adopts: 1,\n  adorable: 3,\n  adoration: 3,\n  adore: 3,\n  adored: 3,\n  adores: 3,\n  adoring: 3,\n  adoringly: 3,\n  advanced: 1,\n  advantage: 2,\n  advantageous: 2,\n  advantageously: 2,\n  advantages: 2,\n  adventure: 2,\n  adventures: 2,\n  adventurous: 2,\n  adversary: -1,\n  advisable: 1,\n  affected: -1,\n  affection: 3,\n  affectionate: 3,\n  affectionateness: 3,\n  afflicted: -1,\n  affordable: 2,\n  affronted: -1,\n  aficionados: 2,\n  afraid: -2,\n  aggravate: -2,\n  aggravated: -2,\n  aggravates: -2,\n  aggravating: -2,\n  aggression: -2,\n  aggressions: -2,\n  aggressive: -2,\n  aggressiveness: -2,\n  aghast: -2,\n  agog: 2,\n  agonise: -3,\n  agonised: -3,\n  agonises: -3,\n  agonising: -3,\n  agonize: -3,\n  agonized: -3,\n  agonizes: -3,\n  agonizing: -3,\n  agree: 1,\n  agreeable: 2,\n  agreed: 1,\n  agreement: 1,\n  agrees: 1,\n  alarm: -2,\n  alarmed: -2,\n  alarmist: -2,\n  alarmists: -2,\n  alas: -1,\n  alert: -1,\n  alienation: -2,\n  alive: 1,\n  allegation: -2,\n  allegations: -2,\n  allergic: -2,\n  allow: 1,\n  ally: 2,\n  alone: -2,\n  altruistic: 2,\n  amaze: 2,\n  amazed: 2,\n  amazes: 2,\n  amazing: 4,\n  ambitious: 2,\n  ambivalent: -1,\n  amicable: 2,\n  amuse: 3,\n  amused: 3,\n  amusement: 3,\n  amusements: 3,\n  anger: -3,\n  angered: -3,\n  angers: -3,\n  angry: -3,\n  anguish: -3,\n  anguished: -3,\n  animosity: -2,\n  annoy: -2,\n  annoyance: -2,\n  annoyed: -2,\n  annoying: -2,\n  annoys: -2,\n  antagonistic: -2,\n  anti: -1,\n  anticipation: 1,\n  anxiety: -2,\n  anxious: -2,\n  apathetic: -3,\n  apathy: -3,\n  apeshit: -3,\n  apocalyptic: -2,\n  apologise: -1,\n  apologised: -1,\n  apologises: -1,\n  apologising: -1,\n  apologize: -1,\n  apologized: -1,\n  apologizes: -1,\n  apologizing: -1,\n  apology: -1,\n  appalled: -2,\n  appalling: -2,\n  appealing: 2,\n  appease: 2,\n  appeased: 2,\n  appeases: 2,\n  appeasing: 2,\n  applaud: 2,\n  applauded: 2,\n  applauding: 2,\n  applauds: 2,\n  applause: 2,\n  appreciate: 2,\n  appreciated: 2,\n  appreciates: 2,\n  appreciating: 2,\n  appreciation: 2,\n  apprehensive: -2,\n  appropriate: 2,\n  appropriately: 2,\n  approval: 2,\n  approved: 2,\n  approves: 2,\n  ardent: 1,\n  arrest: -2,\n  arrested: -3,\n  arrests: -2,\n  arrogant: -2,\n  arsehole: -4,\n  ashame: -2,\n  ashamed: -2,\n  ass: -4,\n  assassination: -3,\n  assassinations: -3,\n  assault: -2,\n  assaults: -2,\n  asset: 2,\n  assets: 2,\n  assfucking: -4,\n  asshole: -4,\n  astonished: 2,\n  astound: 3,\n  astounded: 3,\n  astounding: 3,\n  astoundingly: 3,\n  astounds: 3,\n  atrocious: -3,\n  atrocity: -3,\n  attack: -1,\n  attacked: -1,\n  attacking: -1,\n  attacks: -1,\n  attract: 1,\n  attracted: 1,\n  attracting: 2,\n  attraction: 2,\n  attractions: 2,\n  attractive: 2,\n  attractively: 2,\n  attractiveness: 2,\n  attracts: 1,\n  audacious: 3,\n  aura: 1,\n  authority: 1,\n  avenge: -2,\n  avenged: -2,\n  avenger: -2,\n  avengers: -2,\n  avenges: -2,\n  avenging: -2,\n  avert: -1,\n  averted: -1,\n  averts: -1,\n  avid: 2,\n  avoid: -1,\n  avoided: -1,\n  avoids: -1,\n  await: -1,\n  awaited: -1,\n  awaits: -1,\n  award: 3,\n  awarded: 3,\n  awards: 3,\n  awesome: 4,\n  awful: -3,\n  awkward: -2,\n  axe: -1,\n  axed: -1,\n  backed: 1,\n  backing: 2,\n  backs: 1,\n  bad: -3,\n  'bad luck': -2,\n  badass: -3,\n  badly: -3,\n  badness: -3,\n  bailout: -2,\n  balanced: 1,\n  bamboozle: -2,\n  bamboozled: -2,\n  bamboozles: -2,\n  ban: -2,\n  banish: -1,\n  bankrupt: -3,\n  bankruptcy: -3,\n  bankster: -3,\n  banned: -2,\n  barbarian: -2,\n  barbaric: -2,\n  barbarous: -2,\n  bargain: 2,\n  barrier: -2,\n  bastard: -5,\n  bastards: -5,\n  battle: -1,\n  battled: -1,\n  battles: -1,\n  battling: -2,\n  beaten: -2,\n  beatific: 3,\n  beating: -1,\n  beauties: 3,\n  beautiful: 3,\n  beautifully: 3,\n  beautify: 3,\n  beauty: 3,\n  befit: 2,\n  befitting: 2,\n  belittle: -2,\n  belittled: -2,\n  beloved: 3,\n  benefactor: 2,\n  benefactors: 2,\n  benefit: 2,\n  benefits: 2,\n  benefitted: 2,\n  benefitting: 2,\n  benevolent: 3,\n  bereave: -2,\n  bereaved: -2,\n  bereaves: -2,\n  bereaving: -2,\n  best: 3,\n  'best damn': 4,\n  betray: -3,\n  betrayal: -3,\n  betrayed: -3,\n  betraying: -3,\n  betrays: -3,\n  better: 2,\n  bias: -1,\n  biased: -2,\n  big: 1,\n  bitch: -5,\n  bitches: -5,\n  bitter: -2,\n  bitterest: -2,\n  bitterly: -2,\n  bizarre: -2,\n  blackmail: -3,\n  blackmailed: -3,\n  blackmailing: -3,\n  blackmails: -3,\n  blah: -2,\n  blame: -2,\n  blamed: -2,\n  blames: -2,\n  blaming: -2,\n  bless: 2,\n  blesses: 2,\n  blessing: 3,\n  blessings: 3,\n  blind: -1,\n  bliss: 3,\n  blissful: 3,\n  blithe: 2,\n  bloated: -1,\n  block: -1,\n  blockade: -2,\n  blockbuster: 3,\n  blocked: -1,\n  blocking: -1,\n  blocks: -1,\n  bloody: -3,\n  blurry: -2,\n  boastful: -2,\n  bold: 2,\n  boldly: 2,\n  bomb: -1,\n  boost: 1,\n  boosted: 1,\n  boosting: 1,\n  boosts: 1,\n  bore: -2,\n  bored: -2,\n  boring: -3,\n  bother: -2,\n  bothered: -2,\n  bothers: -2,\n  bothersome: -2,\n  boycott: -2,\n  boycotted: -2,\n  boycotting: -2,\n  boycotts: -2,\n  brainwashing: -3,\n  brave: 2,\n  braveness: 2,\n  bravery: 2,\n  bravura: 3,\n  breach: -2,\n  breached: -2,\n  breaches: -2,\n  breaching: -2,\n  breakthrough: 3,\n  breathtaking: 5,\n  bribe: -3,\n  bribed: -3,\n  bribes: -3,\n  bribing: -3,\n  bright: 1,\n  brightest: 2,\n  brightness: 1,\n  brilliant: 4,\n  brilliance: 3,\n  brilliances: 3,\n  brisk: 2,\n  broke: -1,\n  broken: -1,\n  brooding: -2,\n  brutal: -3,\n  brutally: -3,\n  bullied: -2,\n  bullshit: -4,\n  bully: -2,\n  bullying: -2,\n  bummer: -2,\n  buoyant: 2,\n  burden: -2,\n  burdened: -2,\n  burdening: -2,\n  burdens: -2,\n  burglar: -2,\n  burglary: -2,\n  calm: 2,\n  calmed: 2,\n  calming: 2,\n  calms: 2,\n  \"can't stand\": -3,\n  cancel: -1,\n  cancelled: -1,\n  cancelling: -1,\n  cancels: -1,\n  cancer: -1,\n  capabilities: 1,\n  capability: 1,\n  capable: 1,\n  captivated: 3,\n  care: 2,\n  carefree: 1,\n  careful: 2,\n  carefully: 2,\n  carefulness: 2,\n  careless: -2,\n  cares: 2,\n  caring: 2,\n  'cashing in': -2,\n  casualty: -2,\n  catastrophe: -3,\n  catastrophic: -4,\n  cautious: -1,\n  celebrate: 3,\n  celebrated: 3,\n  celebrates: 3,\n  celebrating: 3,\n  celebration: 3,\n  celebrations: 3,\n  censor: -2,\n  censored: -2,\n  censors: -2,\n  certain: 1,\n  chagrin: -2,\n  chagrined: -2,\n  challenge: -1,\n  champion: 2,\n  championed: 2,\n  champions: 2,\n  chance: 2,\n  chances: 2,\n  chaos: -2,\n  chaotic: -2,\n  charged: -3,\n  charges: -2,\n  charisma: 2,\n  charitable: 2,\n  charm: 3,\n  charming: 3,\n  charmingly: 3,\n  charmless: -3,\n  chastise: -3,\n  chastised: -3,\n  chastises: -3,\n  chastising: -3,\n  cheat: -3,\n  cheated: -3,\n  cheater: -3,\n  cheaters: -3,\n  cheating: -3,\n  cheats: -3,\n  cheer: 2,\n  cheered: 2,\n  cheerful: 2,\n  cheerfully: 2,\n  cheering: 2,\n  cheerless: -2,\n  cheers: 2,\n  cheery: 3,\n  cherish: 2,\n  cherished: 2,\n  cherishes: 2,\n  cherishing: 2,\n  chic: 2,\n  chide: -3,\n  chided: -3,\n  chides: -3,\n  chiding: -3,\n  childish: -2,\n  chilling: -1,\n  choke: -2,\n  choked: -2,\n  chokes: -2,\n  choking: -2,\n  clarifies: 2,\n  clarity: 2,\n  clash: -2,\n  classy: 3,\n  clean: 2,\n  cleaner: 2,\n  clear: 1,\n  cleared: 1,\n  clearly: 1,\n  clears: 1,\n  clever: 2,\n  clouded: -1,\n  clueless: -2,\n  cock: -5,\n  cocksucker: -5,\n  cocksuckers: -5,\n  cocky: -2,\n  coerced: -2,\n  coercion: -2,\n  collapse: -2,\n  collapsed: -2,\n  collapses: -2,\n  collapsing: -2,\n  collide: -1,\n  collides: -1,\n  colliding: -1,\n  collision: -2,\n  collisions: -2,\n  colluding: -3,\n  combat: -1,\n  combats: -1,\n  comedy: 1,\n  comfort: 2,\n  comfortable: 2,\n  comfortably: 2,\n  comforting: 2,\n  comforts: 2,\n  comic: 1,\n  commend: 2,\n  commended: 2,\n  commit: 1,\n  commitment: 2,\n  commits: 1,\n  committed: 1,\n  committing: 1,\n  compassion: 2,\n  compassionate: 2,\n  compelled: 1,\n  competencies: 1,\n  competent: 2,\n  competitive: 2,\n  complacent: -2,\n  complain: -2,\n  complained: -2,\n  complaining: -2,\n  complains: -2,\n  complaint: -2,\n  complaints: -2,\n  complicating: -2,\n  compliment: 2,\n  complimented: 2,\n  compliments: 2,\n  comprehensive: 2,\n  concerned: -2,\n  conciliate: 2,\n  conciliated: 2,\n  conciliates: 2,\n  conciliating: 2,\n  condemn: -2,\n  condemnation: -2,\n  condemned: -2,\n  condemns: -2,\n  confidence: 2,\n  confident: 2,\n  confidently: 2,\n  conflict: -2,\n  conflicting: -2,\n  conflictive: -2,\n  conflicts: -2,\n  confuse: -2,\n  confused: -2,\n  confusing: -2,\n  congrats: 2,\n  congratulate: 2,\n  congratulation: 2,\n  congratulations: 2,\n  consent: 2,\n  consents: 2,\n  consolable: 2,\n  conspiracy: -3,\n  constipation: -2,\n  constrained: -2,\n  contagion: -2,\n  contagions: -2,\n  contagious: -1,\n  contaminant: -2,\n  contaminants: -2,\n  contaminate: -2,\n  contaminated: -2,\n  contaminates: -2,\n  contaminating: -2,\n  contamination: -2,\n  contaminations: -2,\n  contempt: -2,\n  contemptible: -2,\n  contemptuous: -2,\n  contemptuously: -2,\n  contend: -1,\n  contender: -1,\n  contending: -1,\n  contentious: -2,\n  contestable: -2,\n  controversial: -2,\n  controversially: -2,\n  controversies: -2,\n  controversy: -2,\n  convicted: -2,\n  convince: 1,\n  convinced: 1,\n  convinces: 1,\n  convivial: 2,\n  cool: 1,\n  'cool stuff': 3,\n  cornered: -2,\n  corpse: -1,\n  corrupt: -3,\n  corrupted: -3,\n  corrupting: -3,\n  corruption: -3,\n  corrupts: -3,\n  costly: -2,\n  courage: 2,\n  courageous: 2,\n  courageously: 2,\n  courageousness: 2,\n  courteous: 2,\n  courtesy: 2,\n  'cover-up': -3,\n  coward: -2,\n  cowardly: -2,\n  coziness: 2,\n  cramp: -1,\n  crap: -3,\n  crappy: -3,\n  crash: -2,\n  crazier: -2,\n  craziest: -2,\n  crazy: -2,\n  creative: 2,\n  crestfallen: -2,\n  cried: -2,\n  cries: -2,\n  crime: -3,\n  crimes: -3,\n  criminal: -3,\n  criminals: -3,\n  criminate: -3,\n  criminated: -3,\n  criminates: -3,\n  crisis: -3,\n  critic: -2,\n  criticise: -2,\n  criticised: -2,\n  criticises: -2,\n  criticising: -2,\n  criticism: -2,\n  criticize: -2,\n  criticized: -2,\n  criticizes: -2,\n  criticizing: -2,\n  critics: -2,\n  critique: -2,\n  crowding: -1,\n  crude: -1,\n  cruel: -3,\n  cruelty: -3,\n  crush: -1,\n  crushed: -2,\n  crushes: -1,\n  crushing: -1,\n  cry: -1,\n  crying: -2,\n  cunning: 2,\n  cunt: -5,\n  curious: 1,\n  curse: -1,\n  cut: -1,\n  cutback: -2,\n  cutbacks: -2,\n  cute: 2,\n  cuts: -1,\n  cutting: -1,\n  cynic: -2,\n  cynical: -2,\n  cynicism: -2,\n  damage: -3,\n  damaged: -3,\n  damages: -3,\n  damaging: -3,\n  damn: -2,\n  'damn cute': 3,\n  'damn good': 4,\n  damned: -4,\n  damnit: -4,\n  danger: -2,\n  dangerous: -2,\n  dangerously: -2,\n  daredevil: 2,\n  daring: 2,\n  darkest: -2,\n  darkness: -1,\n  dauntless: 2,\n  dazzling: 3,\n  dead: -3,\n  deadening: -2,\n  deadlock: -2,\n  deadly: -3,\n  deafening: -1,\n  dear: 2,\n  dearly: 3,\n  death: -2,\n  deaths: -2,\n  debonair: 2,\n  debt: -2,\n  deceit: -3,\n  deceitful: -3,\n  deceive: -3,\n  deceived: -3,\n  deceives: -3,\n  deceiving: -3,\n  deception: -3,\n  deceptive: -3,\n  decisive: 1,\n  dedicated: 2,\n  dedication: 2,\n  defeat: -2,\n  defeated: -2,\n  defect: -3,\n  defective: -3,\n  defects: -3,\n  defender: 2,\n  defenders: 2,\n  defenseless: -2,\n  defer: -1,\n  deferring: -1,\n  defiant: -1,\n  deficient: -2,\n  deficiency: -2,\n  deficiencies: -2,\n  deficit: -2,\n  deformed: -2,\n  deformities: -2,\n  deformity: -2,\n  defraud: -3,\n  defrauds: -3,\n  deft: 2,\n  defunct: -2,\n  degrade: -2,\n  degraded: -2,\n  degrades: -2,\n  dehumanize: -2,\n  dehumanized: -2,\n  dehumanizes: -2,\n  dehumanizing: -2,\n  deject: -2,\n  dejected: -2,\n  dejecting: -2,\n  dejects: -2,\n  delay: -1,\n  delayed: -1,\n  delectable: 3,\n  delicious: 3,\n  delight: 3,\n  delighted: 3,\n  delightful: 3,\n  delightfully: 3,\n  delighting: 3,\n  delights: 3,\n  demand: -1,\n  demanded: -1,\n  demanding: -1,\n  demands: -1,\n  demonstration: -1,\n  demoralize: -2,\n  demoralized: -2,\n  demoralizes: -2,\n  demoralizing: -2,\n  denial: -2,\n  denials: -2,\n  denied: -2,\n  denier: -2,\n  deniers: -2,\n  denies: -2,\n  denounce: -2,\n  denounces: -2,\n  dent: -2,\n  deny: -2,\n  denying: -2,\n  deplore: -3,\n  deplored: -3,\n  deplores: -3,\n  deploring: -3,\n  deport: -2,\n  deported: -2,\n  deporting: -2,\n  deports: -2,\n  deportation: -2,\n  deportations: -2,\n  depressed: -2,\n  depressing: -2,\n  deprivation: -3,\n  derail: -2,\n  derailed: -2,\n  derails: -2,\n  derelict: -2,\n  deride: -2,\n  derided: -2,\n  derides: -2,\n  deriding: -2,\n  derision: -2,\n  desirable: 2,\n  desire: 1,\n  desired: 2,\n  desirous: 2,\n  despair: -3,\n  despairing: -3,\n  despairs: -3,\n  desperate: -3,\n  desperately: -3,\n  despondent: -3,\n  destroy: -3,\n  destroyed: -3,\n  destroying: -3,\n  destroys: -3,\n  destruction: -3,\n  destructive: -3,\n  detached: -1,\n  detain: -2,\n  detained: -2,\n  detention: -2,\n  deteriorate: -2,\n  deteriorated: -2,\n  deteriorates: -2,\n  deteriorating: -2,\n  determined: 2,\n  deterrent: -2,\n  detract: -1,\n  detracted: -1,\n  detracts: -1,\n  devastate: -2,\n  devastated: -2,\n  devastating: -2,\n  devastation: -2,\n  devastations: -2,\n  devoted: 3,\n  devotion: 2,\n  devotional: 2,\n  diamond: 1,\n  dick: -4,\n  dickhead: -4,\n  die: -3,\n  died: -3,\n  difficult: -1,\n  diffident: -2,\n  dignity: 2,\n  dilemma: -1,\n  dilligence: 2,\n  dipshit: -3,\n  dire: -3,\n  direful: -3,\n  dirt: -2,\n  dirtier: -2,\n  dirtiest: -2,\n  dirty: -2,\n  disabilities: -2,\n  disability: -2,\n  disabling: -1,\n  disadvantage: -2,\n  disadvantaged: -2,\n  disagree: -2,\n  disagreeable: -2,\n  disagreement: -2,\n  disappear: -1,\n  disappeared: -1,\n  disappears: -1,\n  disappoint: -2,\n  disappointed: -2,\n  disappointing: -2,\n  disappointment: -2,\n  disappointments: -2,\n  disappoints: -2,\n  disapproval: -2,\n  disapprovals: -2,\n  disapprove: -2,\n  disapproved: -2,\n  disapproves: -2,\n  disapproving: -2,\n  disaster: -2,\n  disasters: -2,\n  disastrous: -3,\n  disbelieve: -2,\n  discard: -1,\n  discarded: -1,\n  discarding: -1,\n  discards: -1,\n  discernment: 2,\n  discomfort: -2,\n  disconsolate: -2,\n  disconsolation: -2,\n  discontented: -2,\n  discord: -2,\n  discounted: -1,\n  discouraged: -2,\n  discredited: -2,\n  discriminate: -2,\n  discriminated: -2,\n  discriminates: -2,\n  discriminating: -2,\n  discriminatory: -2,\n  disdain: -2,\n  disease: -1,\n  diseases: -1,\n  disgrace: -2,\n  disgraced: -2,\n  disguise: -1,\n  disguised: -1,\n  disguises: -1,\n  disguising: -1,\n  disgust: -3,\n  disgusted: -3,\n  disgustful: -3,\n  disgusting: -3,\n  disheartened: -2,\n  dishonest: -2,\n  disillusioned: -2,\n  disinclined: -2,\n  disjointed: -2,\n  dislike: -2,\n  disliked: -2,\n  dislikes: -2,\n  dismal: -2,\n  dismayed: -2,\n  dismissed: -2,\n  disorder: -2,\n  disorders: -2,\n  disorganized: -2,\n  disoriented: -2,\n  disparage: -2,\n  disparaged: -2,\n  disparages: -2,\n  disparaging: -2,\n  displeased: -2,\n  displeasure: -2,\n  disproportionate: -2,\n  dispute: -2,\n  disputed: -2,\n  disputes: -2,\n  disputing: -2,\n  disqualified: -2,\n  disquiet: -2,\n  disregard: -2,\n  disregarded: -2,\n  disregarding: -2,\n  disregards: -2,\n  disrespect: -2,\n  disrespected: -2,\n  disrupt: -2,\n  disrupted: -2,\n  disrupting: -2,\n  disruption: -2,\n  disruptions: -2,\n  disruptive: -2,\n  disrupts: -2,\n  dissatisfied: -2,\n  distasteful: -2,\n  distinguished: 2,\n  distort: -2,\n  distorted: -2,\n  distorting: -2,\n  distorts: -2,\n  distract: -2,\n  distracted: -2,\n  distraction: -2,\n  distracts: -2,\n  distress: -2,\n  distressed: -2,\n  distresses: -2,\n  distressing: -2,\n  distrust: -3,\n  distrustful: -3,\n  disturb: -2,\n  disturbed: -2,\n  disturbing: -2,\n  disturbs: -2,\n  dithering: -2,\n  diverting: -1,\n  dizzy: -1,\n  dodging: -2,\n  dodgy: -2,\n  'does not work': -3,\n  dolorous: -2,\n  donate: 2,\n  donated: 2,\n  donates: 2,\n  donating: 2,\n  donation: 2,\n  'dont like': -2,\n  doom: -2,\n  doomed: -2,\n  doubt: -1,\n  doubted: -1,\n  doubtful: -1,\n  doubting: -1,\n  doubts: -1,\n  douche: -3,\n  douchebag: -3,\n  dour: -2,\n  downcast: -2,\n  downer: -2,\n  downhearted: -2,\n  downside: -2,\n  drag: -1,\n  dragged: -1,\n  drags: -1,\n  drained: -2,\n  dread: -2,\n  dreaded: -2,\n  dreadful: -3,\n  dreading: -2,\n  dream: 1,\n  dreams: 1,\n  dreary: -2,\n  droopy: -2,\n  drop: -1,\n  dropped: -1,\n  drown: -2,\n  drowned: -2,\n  drowns: -2,\n  drudgery: -2,\n  drunk: -2,\n  dubious: -2,\n  dud: -2,\n  dull: -2,\n  dumb: -3,\n  dumbass: -3,\n  dump: -1,\n  dumped: -2,\n  dumps: -1,\n  dupe: -2,\n  duped: -2,\n  dupery: -2,\n  durable: 2,\n  dying: -3,\n  dysfunction: -2,\n  eager: 2,\n  earnest: 2,\n  ease: 2,\n  easy: 1,\n  ecstatic: 4,\n  eerie: -2,\n  eery: -2,\n  effective: 2,\n  effectively: 2,\n  effectiveness: 2,\n  effortlessly: 2,\n  elated: 3,\n  elation: 3,\n  elegant: 2,\n  elegantly: 2,\n  embarrass: -2,\n  embarrassed: -2,\n  embarrasses: -2,\n  embarrassing: -2,\n  embarrassment: -2,\n  embezzlement: -3,\n  embittered: -2,\n  embrace: 1,\n  emergency: -2,\n  empathetic: 2,\n  empower: 2,\n  empowerment: 2,\n  emptiness: -1,\n  empty: -1,\n  enchanted: 2,\n  encourage: 2,\n  encouraged: 2,\n  encouragement: 2,\n  encourages: 2,\n  encouraging: 2,\n  endorse: 2,\n  endorsed: 2,\n  endorsement: 2,\n  endorses: 2,\n  enemies: -2,\n  enemy: -2,\n  energetic: 2,\n  engage: 1,\n  engages: 1,\n  engrossed: 1,\n  engrossing: 3,\n  enjoy: 2,\n  enjoyable: 2,\n  enjoyed: 2,\n  enjoying: 2,\n  enjoys: 2,\n  enlighten: 2,\n  enlightened: 2,\n  enlightening: 2,\n  enlightens: 2,\n  ennui: -2,\n  enrage: -2,\n  enraged: -2,\n  enrages: -2,\n  enraging: -2,\n  enrapture: 3,\n  enslave: -2,\n  enslaved: -2,\n  enslaves: -2,\n  ensure: 1,\n  ensuring: 1,\n  enterprising: 1,\n  entertaining: 2,\n  enthral: 3,\n  enthusiastic: 3,\n  entitled: 1,\n  entrusted: 2,\n  envies: -1,\n  envious: -2,\n  'environment-friendly': 2,\n  envy: -1,\n  envying: -1,\n  erroneous: -2,\n  error: -2,\n  errors: -2,\n  escape: -1,\n  escapes: -1,\n  escaping: -1,\n  esteem: 2,\n  esteemed: 2,\n  ethical: 2,\n  euphoria: 3,\n  euphoric: 4,\n  evacuate: -1,\n  evacuated: -1,\n  evacuates: -1,\n  evacuating: -1,\n  evacuation: -1,\n  evergreen: 2,\n  evergreens: 2,\n  evergreening: -3,\n  eviction: -1,\n  evil: -3,\n  exacerbate: -2,\n  exacerbated: -2,\n  exacerbates: -2,\n  exacerbating: -2,\n  exaggerate: -2,\n  exaggerated: -2,\n  exaggerates: -2,\n  exaggerating: -2,\n  exasparate: -2,\n  exasperated: -2,\n  exasperates: -2,\n  exasperating: -2,\n  excellence: 3,\n  excellent: 3,\n  excite: 3,\n  excited: 3,\n  excitement: 3,\n  exciting: 3,\n  exclude: -1,\n  excluded: -2,\n  exclusion: -1,\n  exclusive: 2,\n  excruciatingly: -1,\n  excuse: -1,\n  exempt: -1,\n  exhausted: -2,\n  exhilarated: 3,\n  exhilarates: 3,\n  exhilarating: 3,\n  exonerate: 2,\n  exonerated: 2,\n  exonerates: 2,\n  exonerating: 2,\n  expand: 1,\n  expands: 1,\n  expel: -2,\n  expelled: -2,\n  expelling: -2,\n  expels: -2,\n  expertly: 2,\n  exploit: -2,\n  exploited: -2,\n  exploiting: -2,\n  exploits: -2,\n  exploration: 1,\n  explorations: 1,\n  expose: -1,\n  exposed: -1,\n  exposes: -1,\n  exposing: -1,\n  exquisite: 3,\n  extend: 1,\n  extends: 1,\n  extremist: -2,\n  extremists: -2,\n  exuberant: 4,\n  exultant: 3,\n  exultantly: 3,\n  fabulous: 4,\n  fabulously: 4,\n  fad: -2,\n  fag: -3,\n  faggot: -3,\n  faggots: -3,\n  fail: -2,\n  failed: -2,\n  failing: -2,\n  fails: -2,\n  failure: -2,\n  failures: -2,\n  fainthearted: -2,\n  fair: 2,\n  fairness: 2,\n  faith: 1,\n  faithful: 3,\n  fake: -3,\n  faker: -3,\n  fakes: -3,\n  faking: -3,\n  fallen: -2,\n  falling: -1,\n  false: -1,\n  falsely: -2,\n  falsified: -3,\n  falsify: -3,\n  fame: 1,\n  famine: -2,\n  famous: 2,\n  fan: 3,\n  fantastic: 4,\n  farce: -1,\n  fascinate: 3,\n  fascinated: 3,\n  fascinates: 3,\n  fascinating: 3,\n  fascination: 3,\n  fascist: -2,\n  fascists: -2,\n  fatal: -3,\n  fatalities: -3,\n  fatality: -3,\n  fatigue: -2,\n  fatigued: -2,\n  fatigues: -2,\n  fatiguing: -2,\n  favor: 2,\n  favorable: 2,\n  favorably: 2,\n  favored: 2,\n  favorite: 2,\n  favorited: 2,\n  favorites: 2,\n  favors: 2,\n  favour: 2,\n  favourable: 2,\n  favourably: 2,\n  favoured: 2,\n  favourite: 2,\n  favourited: 2,\n  favourites: 2,\n  favours: 2,\n  fear: -2,\n  fearful: -2,\n  fearfully: -2,\n  fearing: -2,\n  fearless: 2,\n  fearlessness: 2,\n  fearsome: -2,\n  'fed up': -3,\n  feeble: -2,\n  feeling: 1,\n  felonies: -3,\n  felony: -3,\n  fertile: 2,\n  fervent: 2,\n  fervid: 2,\n  festive: 2,\n  fever: -2,\n  fiasco: -3,\n  fidgety: -2,\n  fight: -1,\n  fighting: -2,\n  fine: 2,\n  fines: -2,\n  finest: 3,\n  fire: -2,\n  fired: -2,\n  firing: -2,\n  fit: 1,\n  fitness: 1,\n  filth: -2,\n  filthy: -2,\n  flagship: 2,\n  flaw: -2,\n  flawed: -3,\n  flawless: 2,\n  flawlessly: 2,\n  flaws: -2,\n  flees: -1,\n  flop: -2,\n  flops: -2,\n  flu: -2,\n  flustered: -2,\n  focused: 2,\n  fond: 2,\n  fondness: 2,\n  fool: -2,\n  foolish: -2,\n  fools: -2,\n  forbid: -1,\n  forbidden: -2,\n  forbidding: -2,\n  forced: -1,\n  foreclosure: -2,\n  foreclosures: -2,\n  forefront: 1,\n  forget: -1,\n  forgetful: -2,\n  forgettable: -1,\n  forgive: 1,\n  forgiving: 1,\n  forgot: -1,\n  forgotten: -1,\n  fortune: 2,\n  fortunate: 2,\n  fortunately: 2,\n  foul: -3,\n  frantic: -1,\n  fraud: -4,\n  frauds: -4,\n  fraudster: -4,\n  fraudsters: -4,\n  fraudulence: -4,\n  fraudulent: -4,\n  freak: -2,\n  free: 1,\n  freedom: 2,\n  freedoms: 2,\n  frenzy: -3,\n  fresh: 1,\n  friend: 1,\n  friendliness: 2,\n  friendly: 2,\n  friendship: 2,\n  fright: -2,\n  frightened: -2,\n  frightening: -3,\n  frikin: -2,\n  frisky: 2,\n  frowning: -1,\n  fruitless: -2,\n  frustrate: -2,\n  frustrated: -2,\n  frustrates: -2,\n  frustrating: -2,\n  frustration: -2,\n  ftw: 3,\n  fuck: -4,\n  fucked: -4,\n  fucker: -4,\n  fuckers: -4,\n  fuckface: -4,\n  fuckhead: -4,\n  fuckin: -4,\n  fucking: -4,\n  'fucking amazing': 4,\n  'fucking beautiful': 4,\n  'fucking cute': 4,\n  'fucking fantastic': 4,\n  'fucking good': 4,\n  'fucking great': 4,\n  'fucking hot': 2,\n  'fucking love': 4,\n  'fucking loves': 4,\n  'fucking perfect': 4,\n  fucktard: -4,\n  fud: -3,\n  fuked: -4,\n  fuking: -4,\n  fulfill: 2,\n  fulfilled: 2,\n  fulfillment: 2,\n  fulfills: 2,\n  fuming: -2,\n  fun: 4,\n  funeral: -1,\n  funerals: -1,\n  funky: 2,\n  funnier: 4,\n  funny: 4,\n  furious: -3,\n  futile: -2,\n  gag: -2,\n  gagged: -2,\n  gain: 2,\n  gained: 2,\n  gaining: 2,\n  gains: 2,\n  gallant: 3,\n  gallantly: 3,\n  gallantry: 3,\n  'game-changing': 3,\n  garbage: -1,\n  gem: 3,\n  generous: 2,\n  generously: 2,\n  genial: 3,\n  ghastly: -2,\n  ghost: -1,\n  giddy: -2,\n  gift: 2,\n  glad: 3,\n  glamorous: 3,\n  glamourous: 3,\n  glee: 3,\n  gleeful: 3,\n  gloom: -1,\n  gloomy: -2,\n  glorious: 2,\n  glory: 2,\n  glum: -2,\n  god: 1,\n  goddamn: -3,\n  godsend: 4,\n  gold: 2,\n  good: 3,\n  goodlooking: 3,\n  goodmorning: 1,\n  goodness: 3,\n  goodwill: 3,\n  goofiness: -2,\n  goofy: -2,\n  grace: 1,\n  graceful: 2,\n  gracious: 3,\n  grand: 3,\n  grant: 1,\n  granted: 1,\n  granting: 1,\n  grants: 1,\n  grateful: 3,\n  gratification: 2,\n  grave: -2,\n  gray: -1,\n  grisly: -2,\n  gr8: 3,\n  great: 3,\n  greater: 3,\n  greatest: 3,\n  greed: -3,\n  greedy: -2,\n  'green wash': -3,\n  'green washing': -3,\n  greenwash: -3,\n  greenwasher: -3,\n  greenwashers: -3,\n  greenwashing: -3,\n  greet: 1,\n  greeted: 1,\n  greeting: 1,\n  greetings: 2,\n  greets: 1,\n  grey: -1,\n  grief: -2,\n  grieved: -2,\n  grim: -2,\n  gripping: 2,\n  groan: -2,\n  groaned: -2,\n  groaning: -2,\n  groans: -2,\n  gross: -2,\n  growing: 1,\n  growth: 2,\n  growths: 2,\n  gruesome: -3,\n  guarantee: 1,\n  guilt: -3,\n  guilty: -3,\n  gullibility: -2,\n  gullible: -2,\n  gun: -1,\n  ha: 2,\n  hacked: -1,\n  haha: 3,\n  hahaha: 3,\n  hahahah: 3,\n  hail: 2,\n  hailed: 2,\n  hallelujah: 3,\n  handpicked: 1,\n  handsome: 3,\n  hapless: -2,\n  haplessness: -2,\n  happiest: 3,\n  happiness: 3,\n  happy: 3,\n  harass: -3,\n  harassed: -3,\n  harasses: -3,\n  harassing: -3,\n  harassment: -3,\n  hard: -1,\n  hardier: 2,\n  hardship: -2,\n  hardy: 2,\n  harm: -2,\n  harmed: -2,\n  harmful: -2,\n  harming: -2,\n  harmony: 2,\n  harmonious: 2,\n  harmoniously: 2,\n  harms: -2,\n  harried: -2,\n  harsh: -2,\n  harsher: -2,\n  harshest: -2,\n  harshly: -2,\n  hate: -3,\n  hated: -3,\n  hater: -3,\n  haters: -3,\n  hates: -3,\n  hating: -3,\n  hatred: -3,\n  haunt: -1,\n  haunted: -2,\n  haunting: 1,\n  haunts: -1,\n  havoc: -2,\n  hazardous: -3,\n  headache: -2,\n  healthy: 2,\n  heartbreaking: -3,\n  heartbroken: -3,\n  heartfelt: 3,\n  heartless: -2,\n  heartwarming: 3,\n  heaven: 2,\n  heavenly: 4,\n  heavyhearted: -2,\n  hehe: 2,\n  hell: -4,\n  hellish: -2,\n  help: 2,\n  helpful: 2,\n  helping: 2,\n  helpless: -2,\n  helps: 2,\n  hero: 2,\n  heroes: 2,\n  heroic: 3,\n  hesitant: -2,\n  hesitate: -2,\n  hid: -1,\n  hide: -1,\n  hideous: -3,\n  hides: -1,\n  hiding: -1,\n  highlight: 2,\n  hilarious: 2,\n  hinder: -2,\n  hindrance: -2,\n  hoax: -2,\n  hollow: -1,\n  homeless: -2,\n  homesick: -2,\n  homicide: -2,\n  homicides: -2,\n  honest: 2,\n  honor: 2,\n  honored: 2,\n  honoring: 2,\n  honour: 2,\n  honoured: 2,\n  honouring: 2,\n  hooligan: -2,\n  hooliganism: -2,\n  hooligans: -2,\n  hope: 2,\n  hopeful: 2,\n  hopefully: 2,\n  hopeless: -2,\n  hopelessness: -2,\n  hopes: 2,\n  hoping: 2,\n  horrendous: -3,\n  horrid: -3,\n  horrible: -3,\n  horrific: -3,\n  horrified: -3,\n  hospitalized: -2,\n  hostile: -2,\n  huckster: -2,\n  hug: 2,\n  huge: 1,\n  hugs: 2,\n  humane: 2,\n  humble: 1,\n  humbug: -2,\n  humerous: 3,\n  humiliated: -3,\n  humiliation: -3,\n  humor: 2,\n  humorous: 2,\n  humour: 2,\n  humourous: 2,\n  hunger: -2,\n  hurrah: 5,\n  hurt: -2,\n  hurting: -2,\n  hurts: -2,\n  hypocritical: -2,\n  hysteria: -3,\n  hysterical: -3,\n  hysterics: -3,\n  icky: -3,\n  idiocy: -3,\n  idiot: -3,\n  idiotic: -3,\n  ignorance: -2,\n  ignorant: -2,\n  ignore: -1,\n  ignored: -2,\n  ignores: -1,\n  ill: -2,\n  'ill-fated': -2,\n  illegal: -3,\n  illegally: -3,\n  illegitimate: -3,\n  illiteracy: -2,\n  illness: -2,\n  illnesses: -2,\n  illogical: -2,\n  imaginative: 2,\n  imbecile: -3,\n  immobilized: -1,\n  immortal: 2,\n  immune: 1,\n  impair: -2,\n  impaired: -2,\n  impairing: -2,\n  impairment: -2,\n  impairs: -2,\n  impatient: -2,\n  impeachment: -3,\n  impeachments: -3,\n  impede: -2,\n  impeded: -2,\n  impedes: -2,\n  impeding: -2,\n  impedingly: -2,\n  imperfect: -2,\n  importance: 2,\n  important: 2,\n  impose: -1,\n  imposed: -1,\n  imposes: -1,\n  imposing: -1,\n  imposter: -2,\n  impotent: -2,\n  impress: 3,\n  impressed: 3,\n  impresses: 3,\n  impressive: 3,\n  imprisoned: -2,\n  imprisonment: -2,\n  improper: -2,\n  improperly: -2,\n  improve: 2,\n  improved: 2,\n  improvement: 2,\n  improves: 2,\n  improving: 2,\n  inability: -2,\n  inaction: -2,\n  inadequate: -2,\n  inadvertently: -2,\n  inappropriate: -2,\n  incapable: -2,\n  incapacitated: -2,\n  incapacitates: -2,\n  incapacitating: -2,\n  incense: -2,\n  incensed: -2,\n  incenses: -2,\n  incensing: -2,\n  incoherent: -2,\n  incompetence: -2,\n  incompetent: -2,\n  incomplete: -1,\n  incomprehensible: -2,\n  inconsiderate: -2,\n  inconvenience: -2,\n  inconvenient: -2,\n  increase: 1,\n  increased: 1,\n  indecisive: -2,\n  indestructible: 2,\n  indicted: -2,\n  indifference: -2,\n  indifferent: -2,\n  indignant: -2,\n  indignation: -2,\n  indoctrinate: -2,\n  indoctrinated: -2,\n  indoctrinates: -2,\n  indoctrinating: -2,\n  inediable: -2,\n  inexorable: -3,\n  inexcusable: -3,\n  ineffective: -2,\n  ineffectively: -2,\n  ineffectual: -2,\n  inefficiency: -2,\n  inefficient: -2,\n  inefficiently: -2,\n  inept: -2,\n  ineptitude: -2,\n  infantile: -2,\n  infantilized: -2,\n  infatuated: 2,\n  infatuation: 2,\n  infect: -2,\n  infected: -2,\n  infecting: -2,\n  infection: -2,\n  infections: -2,\n  infectious: -2,\n  infects: -2,\n  inferior: -2,\n  infest: -2,\n  infested: -2,\n  infesting: -2,\n  infests: -2,\n  inflamed: -2,\n  inflict: -2,\n  inflicted: -2,\n  inflicting: -2,\n  inflicts: -2,\n  influential: 2,\n  infract: -2,\n  infracted: -2,\n  infracting: -2,\n  infracts: -2,\n  infringement: -2,\n  infuriate: -2,\n  infuriated: -2,\n  infuriates: -2,\n  infuriating: -2,\n  inhibit: -1,\n  inhuman: -2,\n  injured: -2,\n  injuries: -2,\n  injury: -2,\n  injustice: -2,\n  innovate: 1,\n  innovates: 1,\n  innovation: 1,\n  innovative: 2,\n  inoperative: -2,\n  inquisition: -2,\n  inquisitive: 2,\n  insane: -2,\n  insanity: -2,\n  insecure: -2,\n  insensitive: -2,\n  insensitivity: -2,\n  insignificant: -2,\n  insipid: -2,\n  insolvent: -2,\n  insomnia: -2,\n  inspiration: 2,\n  inspirational: 2,\n  inspire: 2,\n  inspired: 2,\n  inspires: 2,\n  inspiring: 3,\n  insufficiency: -2,\n  insufficient: -2,\n  insufficiently: -2,\n  insult: -2,\n  insulted: -2,\n  insulting: -2,\n  insults: -2,\n  intact: 2,\n  integrity: 2,\n  intelligent: 2,\n  intense: 1,\n  interest: 1,\n  interested: 2,\n  interesting: 2,\n  interests: 1,\n  interrogated: -2,\n  interrupt: -2,\n  interrupted: -2,\n  interrupting: -2,\n  interruption: -2,\n  interrupts: -2,\n  intimacy: 2,\n  intimidate: -2,\n  intimidated: -2,\n  intimidates: -2,\n  intimidating: -2,\n  intimidation: -2,\n  intransigence: -2,\n  intransigency: -2,\n  intricate: 2,\n  intrigues: 1,\n  invasion: -1,\n  invincible: 2,\n  invite: 1,\n  inviting: 1,\n  invulnerable: 2,\n  irate: -3,\n  ironic: -1,\n  irony: -1,\n  irrational: -1,\n  irreparable: -2,\n  irreproducible: -2,\n  irresistible: 2,\n  irresistibly: 2,\n  irresolute: -2,\n  irresponsible: -2,\n  irresponsibly: -2,\n  irreversible: -1,\n  irreversibly: -1,\n  irritate: -3,\n  irritated: -3,\n  irritates: -3,\n  irritating: -3,\n  isolated: -1,\n  itchy: -2,\n  jackass: -4,\n  jackasses: -4,\n  jailed: -2,\n  jaunty: 2,\n  jealous: -2,\n  jealousy: -2,\n  jeopardy: -2,\n  jerk: -3,\n  jesus: 1,\n  jewel: 1,\n  jewels: 1,\n  jocular: 2,\n  join: 1,\n  joke: 2,\n  jokes: 2,\n  jolly: 2,\n  jovial: 2,\n  joy: 3,\n  joyful: 3,\n  joyfully: 3,\n  joyless: -2,\n  joyous: 3,\n  jubilant: 3,\n  jumpy: -1,\n  justice: 2,\n  justifiably: 2,\n  justified: 2,\n  keen: 1,\n  kickback: -3,\n  kickbacks: -3,\n  kidnap: -2,\n  kidnapped: -2,\n  kidnapping: -2,\n  kidnappings: -2,\n  kidnaps: -2,\n  kill: -3,\n  killed: -3,\n  killing: -3,\n  kills: -3,\n  kind: 2,\n  'kind of': 0,\n  kinder: 2,\n  kindness: 2,\n  kiss: 2,\n  kudos: 3,\n  lack: -2,\n  lackadaisical: -2,\n  lag: -1,\n  lagged: -2,\n  lagging: -2,\n  lags: -2,\n  lame: -2,\n  landmark: 2,\n  lapse: -1,\n  lapsed: -1,\n  laugh: 1,\n  laughed: 1,\n  laughing: 1,\n  laughs: 1,\n  laughting: 1,\n  launched: 1,\n  lawl: 3,\n  lawsuit: -2,\n  lawsuits: -2,\n  lazy: -1,\n  leadership: 1,\n  leading: 2,\n  leak: -1,\n  leaked: -1,\n  leave: -1,\n  legal: 1,\n  legally: 1,\n  lenient: 1,\n  lethal: -2,\n  lethality: -2,\n  lethargic: -2,\n  lethargy: -2,\n  liar: -3,\n  liars: -3,\n  libelous: -2,\n  lied: -2,\n  lifeless: -1,\n  lifesaver: 4,\n  lighthearted: 1,\n  likable: 2,\n  like: 2,\n  likeable: 2,\n  liked: 2,\n  likers: 2,\n  likes: 2,\n  liking: 2,\n  limitation: -1,\n  limited: -1,\n  limits: -1,\n  litigation: -1,\n  litigious: -2,\n  lively: 2,\n  livid: -2,\n  lmao: 4,\n  lmfao: 4,\n  loathe: -3,\n  loathed: -3,\n  loathes: -3,\n  loathing: -3,\n  loathsome: -3,\n  lobbied: -2,\n  lobby: -2,\n  lobbying: -2,\n  lobbyist: -2,\n  lobbyists: -2,\n  lol: 3,\n  lolol: 4,\n  lololol: 4,\n  lolololol: 4,\n  lonely: -2,\n  lonesome: -2,\n  longing: -1,\n  lool: 3,\n  loom: -1,\n  loomed: -1,\n  looming: -1,\n  looms: -1,\n  loool: 3,\n  looool: 3,\n  loose: -3,\n  looses: -3,\n  loser: -3,\n  losing: -3,\n  loss: -3,\n  losses: -3,\n  lost: -3,\n  lousy: -2,\n  lovable: 3,\n  love: 3,\n  loved: 3,\n  lovelies: 3,\n  lovely: 3,\n  loves: 3,\n  loving: 2,\n  'loving-kindness': 3,\n  lowest: -1,\n  loyal: 3,\n  loyalty: 3,\n  luck: 3,\n  luckily: 3,\n  lucky: 3,\n  lucrative: 3,\n  ludicrous: -3,\n  lugubrious: -2,\n  lunatic: -3,\n  lunatics: -3,\n  lurk: -1,\n  lurking: -1,\n  lurks: -1,\n  luxury: 2,\n  macabre: -2,\n  mad: -3,\n  maddening: -3,\n  'made-up': -1,\n  madly: -3,\n  madness: -3,\n  magnificent: 3,\n  maladaption: -2,\n  maldevelopment: -2,\n  maltreatment: -2,\n  mandatory: -1,\n  manipulated: -1,\n  manipulating: -1,\n  manipulation: -1,\n  manslaughter: -3,\n  marvel: 3,\n  marvelous: 3,\n  marvels: 3,\n  masterpiece: 4,\n  masterpieces: 4,\n  matter: 1,\n  matters: 1,\n  mature: 2,\n  meaningful: 2,\n  meaningless: -2,\n  medal: 3,\n  mediocrity: -3,\n  meditative: 1,\n  melancholy: -2,\n  memorable: 1,\n  memoriam: -2,\n  menace: -2,\n  menaced: -2,\n  menaces: -2,\n  mercy: 2,\n  merry: 3,\n  mesmerizing: 3,\n  mess: -2,\n  messed: -2,\n  'messing up': -2,\n  methodical: 2,\n  methodically: 2,\n  mindless: -2,\n  miracle: 4,\n  mirth: 3,\n  mirthful: 3,\n  mirthfully: 3,\n  misbehave: -2,\n  misbehaved: -2,\n  misbehaves: -2,\n  misbehaving: -2,\n  misbranding: -3,\n  miscast: -2,\n  mischief: -1,\n  mischiefs: -1,\n  misclassified: -2,\n  misclassifies: -2,\n  misclassify: -2,\n  misconduct: -2,\n  misconducted: -2,\n  misconducting: -2,\n  misconducts: -2,\n  miserable: -3,\n  miserably: -3,\n  misery: -2,\n  misfire: -2,\n  misfortune: -2,\n  misgiving: -2,\n  misinformation: -2,\n  misinformed: -2,\n  misinterpreted: -2,\n  mislead: -3,\n  misleaded: -3,\n  misleading: -3,\n  misleads: -3,\n  misplace: -2,\n  misplaced: -2,\n  misplaces: -2,\n  misplacing: -2,\n  mispricing: -3,\n  misread: -1,\n  misreport: -2,\n  misreported: -2,\n  misreporting: -2,\n  misreports: -2,\n  misrepresent: -2,\n  misrepresentation: -2,\n  misrepresentations: -2,\n  misrepresented: -2,\n  misrepresenting: -2,\n  misrepresents: -2,\n  miss: -2,\n  missed: -2,\n  missing: -2,\n  mistake: -2,\n  mistaken: -2,\n  mistakes: -2,\n  mistaking: -2,\n  misunderstand: -2,\n  misunderstanding: -2,\n  misunderstands: -2,\n  misunderstood: -2,\n  misuse: -2,\n  misused: -2,\n  misuses: -2,\n  misusing: -2,\n  moan: -2,\n  moaned: -2,\n  moaning: -2,\n  moans: -2,\n  mock: -2,\n  mocked: -2,\n  mocking: -2,\n  mocks: -2,\n  modernize: 2,\n  modernized: 2,\n  modernizes: 2,\n  modernizing: 2,\n  mongering: -2,\n  monopolize: -2,\n  monopolized: -2,\n  monopolizes: -2,\n  monopolizing: -2,\n  monotone: -1,\n  moody: -1,\n  mope: -1,\n  moping: -1,\n  moron: -3,\n  motherfucker: -5,\n  motherfucking: -5,\n  motivate: 1,\n  motivated: 2,\n  motivating: 2,\n  motivation: 1,\n  mourn: -2,\n  mourned: -2,\n  mournful: -2,\n  mourning: -2,\n  mourns: -2,\n  muddy: -2,\n  mumpish: -2,\n  murder: -2,\n  murderer: -2,\n  murdering: -3,\n  murderous: -3,\n  murders: -2,\n  murky: -2,\n  myth: -1,\n  n00b: -2,\n  naive: -2,\n  narcissism: -2,\n  nasty: -3,\n  natural: 1,\n  naïve: -2,\n  needy: -2,\n  negative: -2,\n  negativity: -2,\n  neglect: -2,\n  neglected: -2,\n  neglecting: -2,\n  neglects: -2,\n  nerves: -1,\n  nervous: -2,\n  nervously: -2,\n  nice: 3,\n  nifty: 2,\n  niggas: -5,\n  nigger: -5,\n  no: -1,\n  'no fun': -3,\n  noble: 2,\n  noblest: 2,\n  noisy: -1,\n  'non-approved': -2,\n  nonsense: -2,\n  noob: -2,\n  nosey: -2,\n  'not good': -2,\n  'not working': -3,\n  notable: 2,\n  noticeable: 2,\n  notorious: -2,\n  novel: 2,\n  numb: -1,\n  nurturing: 2,\n  nuts: -3,\n  obliterate: -2,\n  obliterated: -2,\n  obnoxious: -3,\n  obscene: -2,\n  obscenity: -2,\n  obsessed: 2,\n  obsolete: -2,\n  obstacle: -2,\n  obstacles: -2,\n  obstinate: -2,\n  obstruct: -2,\n  obstructed: -2,\n  obstructing: -2,\n  obstruction: -2,\n  obstructs: -2,\n  odd: -2,\n  offence: -2,\n  offences: -2,\n  offend: -2,\n  offended: -2,\n  offender: -2,\n  offending: -2,\n  offends: -2,\n  offense: -2,\n  offenses: -2,\n  offensive: -2,\n  offensively: -2,\n  offline: -1,\n  oks: 2,\n  ominous: 3,\n  'once-in-a-lifetime': 3,\n  oops: -2,\n  opportunities: 2,\n  opportunity: 2,\n  oppressed: -2,\n  oppression: -2,\n  oppressions: -2,\n  oppressive: -2,\n  optimism: 2,\n  optimistic: 2,\n  optionless: -2,\n  ostracize: -2,\n  ostracized: -2,\n  ostracizes: -2,\n  ouch: -2,\n  outage: -2,\n  outages: -2,\n  outbreak: -2,\n  outbreaks: -2,\n  outcry: -2,\n  outmaneuvered: -2,\n  outnumbered: -2,\n  outrage: -3,\n  outraged: -3,\n  outrageous: -3,\n  outreach: 2,\n  outstanding: 5,\n  overjoyed: 4,\n  overload: -1,\n  overlooked: -1,\n  overprotective: -2,\n  overran: -2,\n  overreact: -2,\n  overreacted: -2,\n  overreacting: -2,\n  overreaction: -2,\n  overreacts: -2,\n  oversell: -2,\n  overselling: -2,\n  oversells: -2,\n  oversight: -1,\n  oversimplification: -2,\n  oversimplified: -2,\n  oversimplifies: -2,\n  oversimplify: -2,\n  oversold: -2,\n  overstatement: -2,\n  overstatements: -2,\n  overweight: -1,\n  overwrought: -3,\n  oxymoron: -1,\n  pain: -2,\n  pained: -2,\n  painful: -2,\n  panic: -3,\n  panicked: -3,\n  panics: -3,\n  paradise: 3,\n  paradox: -1,\n  pardon: 2,\n  pardoned: 2,\n  pardoning: 2,\n  pardons: 2,\n  parley: -1,\n  passion: 1,\n  passionate: 2,\n  passive: -1,\n  passively: -1,\n  pathetic: -2,\n  pay: -1,\n  peace: 2,\n  peaceful: 2,\n  peacefully: 2,\n  penalize: -2,\n  penalized: -2,\n  penalizes: -2,\n  penalizing: -2,\n  penalty: -2,\n  pensive: -1,\n  perfect: 3,\n  perfected: 2,\n  perfection: 3,\n  perfectly: 3,\n  perfects: 2,\n  peril: -2,\n  perjury: -3,\n  perpetrated: -2,\n  perpetrator: -2,\n  perpetrators: -2,\n  perplexed: -2,\n  persecute: -2,\n  persecuted: -2,\n  persecutes: -2,\n  persecuting: -2,\n  perturbed: -2,\n  pervert: -3,\n  pesky: -2,\n  pessimism: -2,\n  pessimistic: -2,\n  petrified: -2,\n  philanthropy: 2,\n  phobic: -2,\n  picturesque: 2,\n  pileup: -1,\n  pillage: -2,\n  pique: -2,\n  piqued: -2,\n  piss: -4,\n  pissed: -4,\n  pissing: -3,\n  piteous: -2,\n  pitied: -1,\n  pity: -2,\n  plague: -3,\n  plagued: -3,\n  plagues: -3,\n  plaguing: -3,\n  playful: 2,\n  pleasant: 3,\n  please: 1,\n  pleased: 3,\n  pleasurable: 3,\n  pleasure: 3,\n  plodding: -2,\n  poignant: 2,\n  pointless: -2,\n  poised: -2,\n  poison: -2,\n  poisoned: -2,\n  poisons: -2,\n  polished: 2,\n  polite: 2,\n  politeness: 2,\n  pollutant: -2,\n  pollute: -2,\n  polluted: -2,\n  polluter: -2,\n  polluters: -2,\n  pollutes: -2,\n  pollution: -2,\n  poor: -2,\n  poorer: -2,\n  poorest: -2,\n  poorly: -2,\n  popular: 3,\n  popularity: 3,\n  positive: 2,\n  positively: 2,\n  possessive: -2,\n  'post-traumatic': -2,\n  postpone: -1,\n  postponed: -1,\n  postpones: -1,\n  postponing: -1,\n  poverty: -1,\n  powerful: 2,\n  powerless: -2,\n  praise: 3,\n  praised: 3,\n  praises: 3,\n  praising: 3,\n  pray: 1,\n  praying: 1,\n  prays: 1,\n  prblm: -2,\n  prblms: -2,\n  predatory: -2,\n  prepared: 1,\n  pressure: -1,\n  pressured: -2,\n  pretend: -1,\n  pretending: -1,\n  pretends: -1,\n  pretty: 1,\n  prevent: -1,\n  prevented: -1,\n  preventing: -1,\n  prevents: -1,\n  prick: -5,\n  prison: -2,\n  prisoner: -2,\n  prisoners: -2,\n  privileged: 2,\n  proactive: 2,\n  problem: -2,\n  problems: -2,\n  profit: 2,\n  profitable: 2,\n  profiteer: -2,\n  profits: 2,\n  progress: 2,\n  prohibit: -1,\n  prohibits: -1,\n  prominent: 2,\n  promise: 1,\n  promised: 1,\n  promises: 1,\n  promote: 1,\n  promoted: 1,\n  promotes: 1,\n  promoting: 1,\n  promptly: 1,\n  propaganda: -2,\n  prosecute: -1,\n  prosecuted: -2,\n  prosecutes: -1,\n  prosecution: -1,\n  prospect: 1,\n  prospects: 1,\n  prosperity: 3,\n  prosperous: 3,\n  protect: 1,\n  protected: 1,\n  protects: 1,\n  protest: -2,\n  protesters: -2,\n  protesting: -2,\n  protests: -2,\n  proud: 2,\n  proudly: 2,\n  provoke: -1,\n  provoked: -1,\n  provokes: -1,\n  provoking: -1,\n  prudence: 2,\n  pseudoscience: -3,\n  psychopathic: -2,\n  punish: -2,\n  punished: -2,\n  punishes: -2,\n  punishing: -2,\n  punitive: -2,\n  pure: 1,\n  purest: 1,\n  purposeful: 2,\n  pushy: -1,\n  puzzled: -2,\n  quaking: -2,\n  qualities: 2,\n  quality: 2,\n  questionable: -2,\n  questioned: -1,\n  questioning: -1,\n  racism: -3,\n  racist: -3,\n  racists: -3,\n  rage: -2,\n  rageful: -2,\n  rainy: -1,\n  rant: -3,\n  ranter: -3,\n  ranters: -3,\n  rants: -3,\n  rape: -4,\n  raped: -4,\n  rapist: -4,\n  rapture: 2,\n  raptured: 2,\n  raptures: 2,\n  rapturous: 4,\n  rash: -2,\n  ratified: 2,\n  reach: 1,\n  reached: 1,\n  reaches: 1,\n  reaching: 1,\n  reassure: 1,\n  reassured: 1,\n  reassures: 1,\n  reassuring: 2,\n  rebel: -2,\n  rebellion: -2,\n  rebels: -2,\n  recession: -2,\n  reckless: -2,\n  recognition: 2,\n  recommend: 2,\n  recommended: 2,\n  recommends: 2,\n  redeemed: 2,\n  refine: 1,\n  refined: 1,\n  refines: 1,\n  refreshingly: 2,\n  refuse: -2,\n  refused: -2,\n  refuses: -2,\n  refusing: -2,\n  regret: -2,\n  regretful: -2,\n  regrets: -2,\n  regretted: -2,\n  regretting: -2,\n  reigning: 1,\n  reject: -1,\n  rejected: -1,\n  rejecting: -1,\n  rejection: -2,\n  rejects: -1,\n  rejoice: 4,\n  rejoiced: 4,\n  rejoices: 4,\n  rejoicing: 4,\n  relaxed: 2,\n  relentless: -1,\n  reliability: 2,\n  reliable: 2,\n  reliably: 2,\n  reliant: 2,\n  relieve: 1,\n  relieved: 2,\n  relieves: 1,\n  relieving: 2,\n  relishing: 2,\n  remarkable: 2,\n  remorse: -2,\n  repellent: -2,\n  repercussion: -2,\n  repercussions: -2,\n  reprimand: -2,\n  reprimanded: -2,\n  reprimanding: -2,\n  reprimands: -2,\n  repulse: -1,\n  repulsed: -2,\n  repulsive: -2,\n  rescue: 2,\n  rescued: 2,\n  rescues: 2,\n  resentful: -2,\n  resign: -1,\n  resigned: -1,\n  resigning: -1,\n  resigns: -1,\n  resolute: 2,\n  resolution: 2,\n  resolve: 2,\n  resolved: 2,\n  resolves: 2,\n  resolving: 2,\n  respect: 2,\n  respected: 2,\n  respects: 2,\n  responsibility: 1,\n  responsible: 2,\n  responsive: 2,\n  restful: 2,\n  restless: -2,\n  restore: 1,\n  restored: 1,\n  restores: 1,\n  restoring: 1,\n  restrict: -2,\n  restricted: -2,\n  restricting: -2,\n  restriction: -2,\n  restrictive: -1,\n  restricts: -2,\n  retained: -1,\n  retard: -2,\n  retarded: -2,\n  retreat: -1,\n  revenge: -2,\n  revengeful: -2,\n  revered: 2,\n  revive: 2,\n  revives: 2,\n  revolting: -2,\n  reward: 2,\n  rewarded: 2,\n  rewarding: 2,\n  rewards: 2,\n  rich: 2,\n  richly: 2,\n  ridiculous: -3,\n  rig: -1,\n  rigged: -1,\n  'right direction': 3,\n  righteousness: 2,\n  rightful: 2,\n  rightfully: 2,\n  rigorous: 3,\n  rigorously: 3,\n  riot: -2,\n  riots: -2,\n  rise: 1,\n  rises: 1,\n  risk: -2,\n  risks: -2,\n  risky: -2,\n  riveting: 3,\n  rob: -2,\n  robber: -2,\n  robed: -2,\n  robing: -2,\n  robs: -2,\n  robust: 2,\n  rofl: 4,\n  roflcopter: 4,\n  roflmao: 4,\n  romance: 2,\n  romantical: 2,\n  romantically: 2,\n  rose: 1,\n  rotfl: 4,\n  rotflmfao: 4,\n  rotflol: 4,\n  rotten: -3,\n  rude: -2,\n  ruin: -2,\n  ruined: -2,\n  ruining: -2,\n  ruins: -2,\n  sabotage: -2,\n  sad: -2,\n  sadden: -2,\n  saddened: -2,\n  sadly: -2,\n  safe: 1,\n  safely: 1,\n  safer: 2,\n  safety: 1,\n  salient: 1,\n  salute: 2,\n  saluted: 2,\n  salutes: 2,\n  saluting: 2,\n  salvation: 2,\n  sappy: -1,\n  sarcastic: -2,\n  satisfied: 2,\n  savange: -2,\n  savanges: -2,\n  save: 2,\n  saved: 2,\n  savings: 1,\n  scam: -2,\n  scams: -2,\n  scandal: -3,\n  scandalous: -3,\n  scandals: -3,\n  scapegoat: -2,\n  scapegoats: -2,\n  scare: -2,\n  scared: -2,\n  scar: -2,\n  scars: -2,\n  scary: -2,\n  sceptical: -2,\n  scold: -2,\n  scoop: 3,\n  scorn: -2,\n  scornful: -2,\n  scream: -2,\n  screamed: -2,\n  screaming: -2,\n  screams: -2,\n  screwed: -2,\n  'screwed up': -3,\n  scum: -3,\n  scumbag: -4,\n  seamless: 2,\n  seamlessly: 2,\n  secure: 2,\n  secured: 2,\n  secures: 2,\n  sedition: -2,\n  seditious: -2,\n  seduced: -1,\n  'self-abuse': -2,\n  'self-confident': 2,\n  'self-contradictory': -2,\n  'self-deluded': -2,\n  selfish: -3,\n  selfishness: -3,\n  sentence: -2,\n  sentenced: -2,\n  sentences: -2,\n  sentencing: -2,\n  serene: 2,\n  settlement: 1,\n  settlements: 1,\n  severe: -2,\n  severely: -2,\n  sexist: -2,\n  sexistic: -2,\n  sexy: 3,\n  shaky: -2,\n  shame: -2,\n  shamed: -2,\n  shameful: -2,\n  share: 1,\n  shared: 1,\n  shares: 1,\n  shattered: -2,\n  shit: -4,\n  shithead: -4,\n  shitty: -3,\n  shock: -2,\n  shocked: -2,\n  shocking: -2,\n  shocks: -2,\n  shoody: -2,\n  shoot: -1,\n  'short-sighted': -2,\n  'short-sightedness': -2,\n  shortage: -2,\n  shortages: -2,\n  shrew: -4,\n  shy: -1,\n  sick: -2,\n  sickness: -2,\n  'side-effect': -2,\n  'side-effects': -2,\n  sigh: -2,\n  significance: 1,\n  significant: 1,\n  silencing: -1,\n  silly: -1,\n  simplicity: 1,\n  sin: -2,\n  sincere: 2,\n  sincerely: 2,\n  sincerest: 2,\n  sincerity: 2,\n  sinful: -3,\n  singleminded: -2,\n  sinister: -2,\n  sins: -2,\n  skeptic: -2,\n  skeptical: -2,\n  skepticism: -2,\n  skeptics: -2,\n  slam: -2,\n  slash: -2,\n  slashed: -2,\n  slashes: -2,\n  slashing: -2,\n  slave: -3,\n  slavery: -3,\n  slaves: -3,\n  sleeplessness: -2,\n  slick: 2,\n  slicker: 2,\n  slickest: 2,\n  slip: -1,\n  sloppy: -2,\n  sluggish: -2,\n  slumping: -1,\n  slut: -5,\n  smart: 1,\n  smarter: 2,\n  smartest: 2,\n  smear: -2,\n  smile: 2,\n  smiled: 2,\n  smiles: 2,\n  smiling: 2,\n  smog: -2,\n  smuggle: -2,\n  smuggled: -2,\n  smuggling: -2,\n  smuggles: -2,\n  sneaky: -1,\n  sneeze: -2,\n  sneezed: -2,\n  sneezes: -2,\n  sneezing: -2,\n  snub: -2,\n  snubbed: -2,\n  snubbing: -2,\n  snubs: -2,\n  sobering: 1,\n  solemn: -1,\n  solid: 2,\n  solidarity: 2,\n  solidified: 2,\n  solidifies: 2,\n  solidify: 2,\n  solidifying: 2,\n  solution: 1,\n  solutions: 1,\n  solve: 1,\n  solved: 1,\n  solves: 1,\n  solving: 1,\n  somber: -2,\n  'some kind': 0,\n  'son-of-a-bitch': -5,\n  soothe: 3,\n  soothed: 3,\n  soothing: 3,\n  sophisticated: 2,\n  sore: -1,\n  sorrow: -2,\n  sorrowful: -2,\n  sorry: -1,\n  spacious: 1,\n  spam: -2,\n  spammer: -3,\n  spammers: -3,\n  spamming: -2,\n  spark: 1,\n  sparkle: 3,\n  sparkles: 3,\n  sparkling: 3,\n  spearhead: 2,\n  speculative: -2,\n  spirit: 1,\n  spirited: 2,\n  spiritless: -2,\n  spiteful: -2,\n  splendid: 3,\n  spoiled: -2,\n  spoilt: -2,\n  spotless: 2,\n  sprightly: 2,\n  squander: -2,\n  squandered: -2,\n  squandering: -2,\n  squanders: -2,\n  squelched: -1,\n  stab: -2,\n  stabbed: -2,\n  stable: 2,\n  stabs: -2,\n  stall: -2,\n  stalled: -2,\n  stalling: -2,\n  stamina: 2,\n  stampede: -2,\n  stank: -2,\n  startled: -2,\n  startling: 3,\n  starve: -2,\n  starved: -2,\n  starves: -2,\n  starving: -2,\n  steadfast: 2,\n  steal: -2,\n  stealing: -2,\n  steals: -2,\n  stereotype: -2,\n  stereotyped: -2,\n  stifled: -1,\n  stimulate: 1,\n  stimulated: 1,\n  stimulates: 1,\n  stimulating: 2,\n  stingy: -2,\n  stink: -2,\n  stinked: -2,\n  stinker: -2,\n  stinking: -2,\n  stinks: -2,\n  stinky: -2,\n  stole: -2,\n  stolen: -2,\n  stop: -1,\n  stopped: -1,\n  stopping: -1,\n  stops: -1,\n  stout: 2,\n  straight: 1,\n  strange: -1,\n  strangely: -1,\n  strangled: -2,\n  strength: 2,\n  strengthen: 2,\n  strengthened: 2,\n  strengthening: 2,\n  strengthens: 2,\n  strengths: 2,\n  stress: -1,\n  stressed: -2,\n  stressor: -2,\n  stressors: -2,\n  stricken: -2,\n  strike: -1,\n  strikers: -2,\n  strikes: -1,\n  strong: 2,\n  stronger: 2,\n  strongest: 2,\n  struck: -1,\n  struggle: -2,\n  struggled: -2,\n  struggles: -2,\n  struggling: -2,\n  stubborn: -2,\n  stuck: -2,\n  stunned: -2,\n  stunning: 4,\n  stupid: -2,\n  stupidity: -3,\n  stupidly: -2,\n  suave: 2,\n  subpoena: -2,\n  substantial: 1,\n  substantially: 1,\n  subversive: -2,\n  succeed: 3,\n  succeeded: 3,\n  succeeding: 3,\n  succeeds: 3,\n  success: 2,\n  successful: 3,\n  successfully: 3,\n  suck: -3,\n  sucks: -3,\n  sue: -2,\n  sued: -2,\n  sueing: -2,\n  sues: -2,\n  suffer: -2,\n  suffered: -2,\n  sufferer: -2,\n  sufferers: -2,\n  suffering: -2,\n  suffers: -2,\n  suicidal: -2,\n  suicide: -2,\n  suicides: -2,\n  suing: -2,\n  suitable: 2,\n  suited: 2,\n  sulking: -2,\n  sulky: -2,\n  sullen: -2,\n  sunshine: 2,\n  super: 3,\n  superb: 5,\n  superior: 2,\n  support: 2,\n  supported: 2,\n  supporter: 1,\n  supporters: 1,\n  supporting: 1,\n  supportive: 2,\n  supports: 2,\n  supreme: 4,\n  survived: 2,\n  surviving: 2,\n  survivor: 2,\n  suspect: -1,\n  suspected: -1,\n  suspecting: -1,\n  suspects: -1,\n  suspend: -1,\n  suspended: -1,\n  suspicious: -2,\n  sustainability: 1,\n  sustainable: 2,\n  sustainably: 2,\n  swear: -2,\n  swearing: -2,\n  swears: -2,\n  sweet: 2,\n  sweeter: 3,\n  sweetest: 3,\n  swift: 2,\n  swiftly: 2,\n  swindle: -3,\n  swindles: -3,\n  swindling: -3,\n  sympathetic: 2,\n  sympathy: 2,\n  taint: -2,\n  tainted: -2,\n  talent: 2,\n  tard: -2,\n  tarnish: -2,\n  tarnished: -2,\n  tarnishes: -2,\n  tears: -2,\n  tender: 2,\n  tenderness: 2,\n  tense: -2,\n  tension: -1,\n  terrible: -3,\n  terribly: -3,\n  terrific: 4,\n  terrifically: 4,\n  terrified: -3,\n  terror: -3,\n  terrorist: -2,\n  terrorists: -2,\n  terrorize: -3,\n  terrorized: -3,\n  terrorizes: -3,\n  thank: 2,\n  thankful: 2,\n  thanks: 2,\n  thorny: -2,\n  thoughtful: 2,\n  thoughtless: -2,\n  threat: -2,\n  threaten: -2,\n  threatened: -2,\n  threatening: -2,\n  threatens: -2,\n  threats: -2,\n  thrilled: 5,\n  thwart: -2,\n  thwarted: -2,\n  thwarting: -2,\n  thwarts: -2,\n  timid: -2,\n  timorous: -2,\n  tired: -2,\n  tits: -2,\n  tolerance: 2,\n  tolerant: 2,\n  toothless: -2,\n  top: 2,\n  tops: 2,\n  torn: -2,\n  torture: -4,\n  tortured: -4,\n  tortures: -4,\n  torturing: -4,\n  totalitarian: -2,\n  totalitarianism: -2,\n  tout: -2,\n  touted: -2,\n  touting: -2,\n  touts: -2,\n  toxic: -3,\n  tragedies: -2,\n  tragedy: -2,\n  tragic: -2,\n  tranquil: 2,\n  transgress: -2,\n  transgressed: -2,\n  transgresses: -2,\n  transgressing: -2,\n  trap: -1,\n  trapped: -2,\n  traps: -1,\n  trauma: -3,\n  traumatic: -3,\n  travesty: -2,\n  treason: -3,\n  treasonous: -3,\n  treasure: 2,\n  treasures: 2,\n  trembling: -2,\n  tremor: -2,\n  tremors: -2,\n  tremulous: -2,\n  tribulation: -2,\n  tribute: 2,\n  tricked: -2,\n  trickery: -2,\n  triumph: 4,\n  triumphant: 4,\n  troll: -2,\n  trouble: -2,\n  troubled: -2,\n  troubles: -2,\n  troubling: -2,\n  true: 2,\n  trust: 1,\n  trusted: 2,\n  trusts: 1,\n  tumor: -2,\n  twat: -5,\n  tyran: -3,\n  tyrannic: -3,\n  tyrannical: -3,\n  tyrannically: -3,\n  tyrans: -3,\n  ubiquitous: 2,\n  ugh: -2,\n  ugliness: -3,\n  ugly: -3,\n  unable: -2,\n  unacceptable: -2,\n  unappeasable: -2,\n  unappreciated: -2,\n  unapproved: -2,\n  unattractive: -2,\n  unavailable: -1,\n  unavailing: -2,\n  unaware: -2,\n  unbearable: -2,\n  unbelievable: -1,\n  unbelieving: -1,\n  unbiased: 2,\n  uncertain: -1,\n  unclear: -1,\n  uncomfortable: -2,\n  unconcerned: -2,\n  unconfirmed: -1,\n  unconvinced: -1,\n  uncredited: -1,\n  undecided: -1,\n  undercooked: -2,\n  underestimate: -1,\n  underestimated: -1,\n  underestimates: -1,\n  underestimating: -1,\n  undermine: -2,\n  undermined: -2,\n  undermines: -2,\n  undermining: -2,\n  underperform: -2,\n  underperformed: -2,\n  underperforming: -2,\n  underperforms: -2,\n  undeserving: -2,\n  undesirable: -2,\n  uneasy: -2,\n  unemployed: -1,\n  unemployment: -2,\n  unequal: -1,\n  unequaled: 2,\n  unethical: -2,\n  uneventful: -2,\n  unfair: -2,\n  unfavorable: -2,\n  unfit: -2,\n  unfitted: -2,\n  unfocused: -2,\n  unforgivable: -3,\n  unforgiving: -2,\n  unfulfilled: -2,\n  unfunny: -2,\n  ungenerous: -2,\n  ungrateful: -3,\n  unhappy: -2,\n  unhappiness: -2,\n  unhealthy: -2,\n  unhygienic: -2,\n  unified: 1,\n  unimaginative: -2,\n  unimpressed: -2,\n  uninspired: -2,\n  unintelligent: -2,\n  unintentional: -2,\n  uninvolving: -2,\n  united: 1,\n  unjust: -2,\n  unlikely: -1,\n  unlovable: -2,\n  unloved: -2,\n  unmatched: 1,\n  unmotivated: -2,\n  unoriginal: -2,\n  unparliamentary: -2,\n  unpleasant: -2,\n  unpleasantness: -2,\n  unprofessional: -2,\n  unravel: 1,\n  unreleting: -2,\n  unresearched: -2,\n  unsafe: -2,\n  unsatisfied: -2,\n  unscientific: -2,\n  unsecured: -2,\n  unselfish: 2,\n  unsettled: -1,\n  unsold: -1,\n  unsophisticated: -2,\n  unsound: -2,\n  unstable: -2,\n  unstoppable: 2,\n  unsuccessful: -2,\n  unsuccessfully: -2,\n  unsupported: -2,\n  unsure: -1,\n  untarnished: 2,\n  untrue: -2,\n  unwanted: -2,\n  unworthy: -2,\n  uplifting: 2,\n  uproar: -3,\n  upset: -2,\n  upsets: -2,\n  upsetting: -2,\n  uptight: -2,\n  urgent: -1,\n  useful: 2,\n  usefulness: 2,\n  useless: -2,\n  uselessness: -2,\n  vague: -2,\n  validate: 1,\n  validated: 1,\n  validates: 1,\n  validating: 1,\n  vapid: -2,\n  verdict: -1,\n  verdicts: -1,\n  vested: 1,\n  vexation: -2,\n  vexing: -2,\n  vibrant: 3,\n  vicious: -2,\n  victim: -3,\n  victimization: -3,\n  victimize: -3,\n  victimized: -3,\n  victimizes: -3,\n  victimizing: -3,\n  victims: -3,\n  victor: 3,\n  victors: 3,\n  victory: 3,\n  victories: 3,\n  vigilant: 3,\n  vigor: 3,\n  vile: -3,\n  vindicate: 2,\n  vindicated: 2,\n  vindicates: 2,\n  vindicating: 2,\n  violate: -2,\n  violated: -2,\n  violates: -2,\n  violating: -2,\n  violation: -2,\n  violations: -2,\n  violence: -3,\n  'violence-related': -3,\n  violent: -3,\n  violently: -3,\n  virtuous: 2,\n  virulent: -2,\n  vision: 1,\n  visionary: 3,\n  visioning: 1,\n  visions: 1,\n  vitality: 3,\n  vitamin: 1,\n  vitriolic: -3,\n  vivacious: 3,\n  vividly: 2,\n  vociferous: -1,\n  vomit: -3,\n  vomited: -3,\n  vomiting: -3,\n  vomits: -3,\n  vulnerability: -2,\n  vulnerable: -2,\n  walkout: -2,\n  walkouts: -2,\n  wanker: -3,\n  want: 1,\n  war: -2,\n  warfare: -2,\n  warm: 1,\n  warmhearted: 2,\n  warmness: 2,\n  warmth: 2,\n  warn: -2,\n  warned: -2,\n  warning: -3,\n  warnings: -3,\n  warns: -2,\n  waste: -1,\n  wasted: -2,\n  wasting: -2,\n  wavering: -1,\n  weak: -2,\n  weakened: -2,\n  weakness: -2,\n  weaknesses: -2,\n  wealth: 3,\n  wealthier: 2,\n  wealthy: 2,\n  weary: -2,\n  weep: -2,\n  weeping: -2,\n  weird: -2,\n  welcome: 2,\n  welcomed: 2,\n  welcomes: 2,\n  'well-being': 2,\n  'well-championed': 3,\n  'well-developed': 2,\n  'well-established': 2,\n  'well-focused': 2,\n  'well-groomed': 2,\n  'well-proportioned': 2,\n  whimsical: 1,\n  whitewash: -3,\n  whore: -4,\n  wicked: -2,\n  widowed: -1,\n  willingness: 2,\n  win: 4,\n  winner: 4,\n  winning: 4,\n  wins: 4,\n  winwin: 3,\n  wisdom: 1,\n  wish: 1,\n  wishes: 1,\n  wishing: 1,\n  withdrawal: -3,\n  wits: 2,\n  woebegone: -2,\n  woeful: -3,\n  won: 3,\n  wonderful: 4,\n  wonderfully: 4,\n  woo: 3,\n  woohoo: 3,\n  wooo: 4,\n  woow: 4,\n  worn: -1,\n  worried: -3,\n  worries: -3,\n  worry: -3,\n  worrying: -3,\n  worse: -3,\n  worsen: -3,\n  worsened: -3,\n  worsening: -3,\n  worsens: -3,\n  worshiped: 3,\n  worst: -3,\n  worth: 2,\n  worthless: -2,\n  worthy: 2,\n  wow: 4,\n  wowow: 4,\n  wowww: 4,\n  wrathful: -3,\n  wreck: -2,\n  wrenching: -2,\n  wrong: -2,\n  wrongdoing: -2,\n  wrongdoings: -2,\n  wronged: -2,\n  wrongful: -2,\n  wrongfully: -2,\n  wrongly: -2,\n  wtf: -4,\n  wtff: -4,\n  wtfff: -4,\n  xo: 3,\n  xoxo: 3,\n  xoxoxo: 4,\n  xoxoxoxo: 4,\n  yeah: 1,\n  yearning: 1,\n  yeees: 2,\n  yes: 1,\n  youthful: 2,\n  yucky: -2,\n  yummy: 3,\n  zealot: -2,\n  zealots: -2,\n  zealous: 2\n}\n","var characterWeight = 4.71\nvar sentenceWeight = 0.5\nvar base = 21.43\n\n/**\n * @typedef {Object.<string, number>} AutomatedReadabilityCounts\n * @property {number} sentence\n * @property {number} word\n * @property {number} character\n */\n\n/**\n * Given an object containing the number of words (`word`), the number of sentences (`sentence`), and the number of characters  (`character`) in a document, returns the grade level associated with the document.\n *\n * @param {AutomatedReadabilityCounts} counts\n * @return {number}\n */\nexport function automatedReadability(counts) {\n  if (!counts || !counts.sentence || !counts.word || !counts.character) {\n    return Number.NaN\n  }\n\n  return (\n    characterWeight * (counts.character / counts.word) +\n    sentenceWeight * (counts.word / counts.sentence) -\n    base\n  )\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","var letterWeight = 0.0588\nvar sentenceWeight = 0.296\nvar base = 15.8\nvar percentage = 100\n\n/**\n * @typedef {Object.<string, number>} ColemanLiauCounts\n * @propert {number} sentence\n * @propert {number} word\n * @propert {number} letter\n */\n\n/**\n * Given an object containing the number of words (`word`), the number of sentences (`sentence`), and the number of letters  (`letter`) in a document, returns the grade level associated with the document.\n *\n * @param {ColemanLiauCounts} counts\n * @returns {number}\n */\nexport function colemanLiau(counts) {\n  if (!counts || !counts.sentence || !counts.word || !counts.letter) {\n    return Number.NaN\n  }\n\n  return (\n    letterWeight * ((counts.letter / counts.word) * percentage) -\n    sentenceWeight * ((counts.sentence / counts.word) * percentage) -\n    base\n  )\n}\n","export const cuss = {\n  abbo: 1,\n  abeed: 2,\n  abid: 1,\n  abo: 1,\n  abortion: 1,\n  abuse: 1,\n  addict: 1,\n  addicts: 1,\n  adult: 0,\n  africa: 0,\n  african: 0,\n  africoon: 2,\n  alla: 1,\n  allah: 0,\n  'alligator bait': 2,\n  alligatorbait: 2,\n  amateur: 0,\n  american: 0,\n  anal: 1,\n  analannie: 2,\n  analsex: 1,\n  angie: 0,\n  angry: 0,\n  anus: 1,\n  arab: 0,\n  arabs: 0,\n  arabush: 2,\n  arabushs: 2,\n  areola: 1,\n  argie: 2,\n  armo: 2,\n  armos: 2,\n  aroused: 0,\n  arse: 2,\n  arsehole: 2,\n  asian: 0,\n  ass: 2,\n  assassin: 0,\n  assassinate: 0,\n  assassination: 0,\n  assault: 0,\n  assbagger: 2,\n  assblaster: 2,\n  assclown: 2,\n  asscowboy: 2,\n  asses: 2,\n  assfuck: 2,\n  assfucker: 2,\n  asshat: 2,\n  asshole: 2,\n  assholes: 2,\n  asshore: 2,\n  assjockey: 2,\n  asskiss: 2,\n  asskisser: 2,\n  assklown: 2,\n  asslick: 2,\n  asslicker: 2,\n  asslover: 2,\n  assman: 2,\n  assmonkey: 2,\n  assmunch: 2,\n  assmuncher: 2,\n  asspacker: 2,\n  asspirate: 2,\n  asspuppies: 2,\n  assranger: 2,\n  asswhore: 2,\n  asswipe: 2,\n  athletesfoot: 1,\n  attack: 0,\n  australian: 0,\n  babe: 1,\n  babies: 0,\n  backdoor: 0,\n  backdoorman: 2,\n  backseat: 0,\n  badfuck: 2,\n  balllicker: 2,\n  balls: 1,\n  ballsack: 1,\n  banana: 0,\n  bananas: 0,\n  banging: 1,\n  baptist: 0,\n  barelylegal: 2,\n  barf: 2,\n  barface: 2,\n  barfface: 2,\n  bast: 0,\n  bastard: 1,\n  bazongas: 2,\n  bazooms: 2,\n  beanbag: 2,\n  beanbags: 2,\n  beaner: 2,\n  beaners: 2,\n  beaney: 2,\n  beaneys: 2,\n  beast: 0,\n  beastality: 1,\n  beastial: 1,\n  beastiality: 1,\n  beatoff: 2,\n  beatyourmeat: 2,\n  beaver: 0,\n  bestial: 1,\n  bestiality: 1,\n  bi: 0,\n  biatch: 2,\n  bible: 0,\n  bicurious: 1,\n  bigass: 2,\n  bigbastard: 2,\n  bigbutt: 2,\n  bigger: 0,\n  bisexual: 0,\n  bitch: 1,\n  bitcher: 2,\n  bitches: 1,\n  bitchez: 2,\n  bitchin: 2,\n  bitching: 2,\n  bitchslap: 2,\n  bitchy: 2,\n  biteme: 2,\n  black: 0,\n  blackman: 1,\n  blackout: 0,\n  blacks: 1,\n  blind: 0,\n  blow: 0,\n  blowjob: 2,\n  bluegum: 2,\n  bluegums: 2,\n  boang: 2,\n  boche: 2,\n  boches: 2,\n  bogan: 2,\n  bohunk: 2,\n  bollick: 2,\n  bollock: 2,\n  bollocks: 2,\n  bomb: 0,\n  bombers: 0,\n  bombing: 0,\n  bombs: 0,\n  bomd: 0,\n  bondage: 1,\n  boner: 2,\n  bong: 2,\n  boob: 1,\n  boobies: 2,\n  boobs: 1,\n  booby: 2,\n  boody: 2,\n  boom: 0,\n  boong: 2,\n  boonga: 2,\n  boongas: 2,\n  boongs: 2,\n  boonie: 2,\n  boonies: 2,\n  bootlip: 2,\n  bootlips: 2,\n  booty: 2,\n  bootycall: 2,\n  bosch: 0,\n  bosche: 2,\n  bosches: 2,\n  boschs: 2,\n  'bounty bar': 1,\n  'bounty bars': 1,\n  bountybar: 1,\n  bra: 0,\n  brea5t: 2,\n  breast: 0,\n  breastjob: 2,\n  breastlover: 2,\n  breastman: 2,\n  brothel: 1,\n  brownie: 0,\n  brownies: 0,\n  buddhahead: 2,\n  buddhaheads: 2,\n  buffies: 2,\n  buffy: 0,\n  bugger: 2,\n  buggered: 2,\n  buggery: 2,\n  bule: 2,\n  bules: 2,\n  bullcrap: 2,\n  bulldike: 2,\n  bulldyke: 2,\n  bullshit: 2,\n  bumblefuck: 2,\n  bumfuck: 2,\n  bung: 2,\n  bunga: 2,\n  bungas: 2,\n  bunghole: 2,\n  buried: 0,\n  burn: 0,\n  'burr head': 2,\n  'burr heads': 2,\n  burrhead: 2,\n  burrheads: 2,\n  butchbabes: 2,\n  butchdike: 2,\n  butchdyke: 2,\n  butt: 0,\n  buttbang: 2,\n  buttface: 2,\n  buttfuck: 2,\n  buttfucker: 2,\n  buttfuckers: 2,\n  butthead: 2,\n  buttman: 2,\n  buttmunch: 2,\n  buttmuncher: 2,\n  buttpirate: 2,\n  buttplug: 1,\n  buttstain: 2,\n  byatch: 2,\n  cacker: 2,\n  'camel jockey': 2,\n  'camel jockeys': 2,\n  cameljockey: 2,\n  cameltoe: 2,\n  canadian: 0,\n  cancer: 0,\n  carpetmuncher: 2,\n  carruth: 2,\n  catholic: 0,\n  catholics: 0,\n  cemetery: 0,\n  chav: 2,\n  'cheese eating surrender monkey': 2,\n  'cheese eating surrender monkies': 2,\n  'cheeseeating surrender monkey': 2,\n  'cheeseeating surrender monkies': 2,\n  cheesehead: 2,\n  cheeseheads: 2,\n  cherrypopper: 2,\n  chickslick: 2,\n  childrens: 0,\n  chin: 0,\n  'china swede': 2,\n  'china swedes': 2,\n  chinaman: 2,\n  chinamen: 2,\n  chinaswede: 2,\n  chinaswedes: 2,\n  chinese: 0,\n  'ching chong': 2,\n  'ching chongs': 2,\n  chingchong: 2,\n  chingchongs: 2,\n  chink: 2,\n  chinks: 2,\n  chinky: 2,\n  choad: 2,\n  chode: 2,\n  chonkies: 2,\n  chonky: 2,\n  chonkys: 2,\n  christ: 0,\n  'christ killer': 2,\n  'christ killers': 2,\n  christian: 0,\n  chug: 2,\n  chugs: 2,\n  chunger: 2,\n  chungers: 2,\n  chunkies: 2,\n  chunky: 2,\n  chunkys: 2,\n  church: 0,\n  cigarette: 0,\n  cigs: 0,\n  clamdigger: 2,\n  clamdiver: 2,\n  clansman: 2,\n  clansmen: 2,\n  clanswoman: 2,\n  clanswomen: 2,\n  clit: 1,\n  clitoris: 1,\n  clogwog: 2,\n  cocaine: 1,\n  cock: 1,\n  cockblock: 2,\n  cockblocker: 2,\n  cockcowboy: 2,\n  cockfight: 2,\n  cockhead: 2,\n  cockknob: 2,\n  cocklicker: 2,\n  cocklover: 2,\n  cocknob: 2,\n  cockqueen: 2,\n  cockrider: 2,\n  cocksman: 2,\n  cocksmith: 2,\n  cocksmoker: 2,\n  cocksucer: 2,\n  cocksuck: 2,\n  cocksucked: 2,\n  cocksucker: 2,\n  cocksucking: 2,\n  cocktail: 0,\n  cocktease: 2,\n  cocky: 2,\n  coconut: 0,\n  coconuts: 0,\n  cohee: 2,\n  coitus: 1,\n  color: 0,\n  colored: 0,\n  coloured: 0,\n  commie: 2,\n  communist: 0,\n  condom: 1,\n  conservative: 0,\n  conspiracy: 0,\n  coolie: 2,\n  coolies: 2,\n  cooly: 2,\n  coon: 2,\n  'coon ass': 2,\n  'coon asses': 2,\n  coonass: 2,\n  coonasses: 2,\n  coondog: 2,\n  coons: 2,\n  copulate: 1,\n  cornhole: 2,\n  corruption: 0,\n  cra5h: 1,\n  crabs: 0,\n  crack: 1,\n  cracka: 2,\n  cracker: 1,\n  crackpipe: 1,\n  crackwhore: 2,\n  crap: 2,\n  crapola: 2,\n  crapper: 2,\n  crappy: 2,\n  crash: 0,\n  creamy: 0,\n  crime: 0,\n  crimes: 0,\n  criminal: 0,\n  criminals: 0,\n  crotch: 1,\n  crotchjockey: 2,\n  crotchmonkey: 2,\n  crotchrot: 2,\n  cum: 2,\n  cumbubble: 2,\n  cumfest: 2,\n  cumjockey: 2,\n  cumm: 2,\n  cummer: 2,\n  cumming: 2,\n  cummings: 1,\n  cumquat: 2,\n  cumqueen: 2,\n  cumshot: 2,\n  cunilingus: 1,\n  cunillingus: 1,\n  cunn: 2,\n  cunnilingus: 1,\n  cunntt: 2,\n  cunt: 2,\n  cunteyed: 2,\n  cuntfuck: 2,\n  cuntfucker: 2,\n  cuntlick: 2,\n  cuntlicker: 2,\n  cuntlicking: 2,\n  cuntsucker: 2,\n  'curry muncher': 2,\n  'curry munchers': 2,\n  currymuncher: 2,\n  currymunchers: 2,\n  cushi: 2,\n  cushis: 2,\n  cybersex: 1,\n  cyberslimer: 2,\n  dago: 2,\n  dagos: 2,\n  dahmer: 2,\n  dammit: 2,\n  damn: 1,\n  damnation: 1,\n  damnit: 2,\n  darkey: 2,\n  darkeys: 2,\n  darkie: 2,\n  darkies: 2,\n  darky: 2,\n  datnigga: 2,\n  dead: 0,\n  deapthroat: 2,\n  death: 0,\n  deepthroat: 2,\n  defecate: 1,\n  dego: 2,\n  degos: 2,\n  demon: 1,\n  deposit: 0,\n  desire: 0,\n  destroy: 0,\n  deth: 0,\n  devil: 1,\n  devilworshipper: 1,\n  'diaper head': 2,\n  'diaper heads': 2,\n  diaperhead: 2,\n  diaperheads: 2,\n  dick: 1,\n  dickbrain: 2,\n  dickforbrains: 2,\n  dickhead: 2,\n  dickless: 2,\n  dicklick: 2,\n  dicklicker: 2,\n  dickman: 2,\n  dickwad: 2,\n  dickweed: 2,\n  diddle: 2,\n  die: 0,\n  died: 0,\n  dies: 0,\n  dike: 1,\n  dildo: 1,\n  dingleberry: 2,\n  dink: 2,\n  dinks: 2,\n  dipshit: 2,\n  dipstick: 2,\n  dirty: 0,\n  disease: 0,\n  diseases: 0,\n  disturbed: 0,\n  dive: 0,\n  dix: 2,\n  dixiedike: 2,\n  dixiedyke: 2,\n  doggiestyle: 2,\n  doggystyle: 2,\n  dong: 2,\n  doodoo: 2,\n  doom: 0,\n  dope: 2,\n  'dot head': 2,\n  'dot heads': 2,\n  dothead: 2,\n  dotheads: 2,\n  dragqueen: 2,\n  dragqween: 2,\n  dripdick: 2,\n  drug: 1,\n  drunk: 1,\n  drunken: 1,\n  dumb: 2,\n  dumbass: 2,\n  dumbbitch: 2,\n  dumbfuck: 2,\n  'dune coon': 2,\n  'dune coons': 2,\n  dyefly: 2,\n  dyke: 1,\n  easyslut: 2,\n  eatballs: 2,\n  eatme: 2,\n  eatpussy: 2,\n  ecstacy: 0,\n  'eight ball': 2,\n  'eight balls': 2,\n  ejaculate: 1,\n  ejaculated: 1,\n  ejaculating: 1,\n  ejaculation: 1,\n  enema: 1,\n  enemy: 0,\n  erect: 0,\n  erection: 1,\n  ero: 2,\n  escort: 0,\n  esqua: 2,\n  ethiopian: 0,\n  ethnic: 0,\n  european: 0,\n  evl: 2,\n  excrement: 1,\n  execute: 0,\n  executed: 0,\n  execution: 0,\n  executioner: 0,\n  exkwew: 2,\n  explosion: 0,\n  facefucker: 2,\n  faeces: 2,\n  fag: 1,\n  fagging: 2,\n  faggot: 2,\n  fagot: 2,\n  failed: 0,\n  failure: 0,\n  fairies: 0,\n  fairy: 0,\n  faith: 0,\n  fannyfucker: 2,\n  fart: 1,\n  farted: 1,\n  farting: 1,\n  farty: 2,\n  fastfuck: 2,\n  fat: 0,\n  fatah: 2,\n  fatass: 2,\n  fatfuck: 2,\n  fatfucker: 2,\n  fatso: 2,\n  fckcum: 2,\n  fear: 0,\n  feces: 1,\n  felatio: 1,\n  felch: 2,\n  felcher: 2,\n  felching: 2,\n  fellatio: 2,\n  feltch: 2,\n  feltcher: 2,\n  feltching: 2,\n  fetish: 1,\n  fight: 0,\n  filipina: 0,\n  filipino: 0,\n  fingerfood: 1,\n  fingerfuck: 2,\n  fingerfucked: 2,\n  fingerfucker: 2,\n  fingerfuckers: 2,\n  fingerfucking: 2,\n  fire: 0,\n  firing: 0,\n  fister: 2,\n  fistfuck: 2,\n  fistfucked: 2,\n  fistfucker: 2,\n  fistfucking: 2,\n  fisting: 2,\n  flange: 2,\n  flasher: 1,\n  flatulence: 1,\n  floo: 2,\n  flydie: 2,\n  flydye: 2,\n  fok: 2,\n  fondle: 1,\n  footaction: 1,\n  footfuck: 2,\n  footfucker: 2,\n  footlicker: 2,\n  footstar: 2,\n  fore: 0,\n  foreskin: 1,\n  forni: 2,\n  fornicate: 1,\n  foursome: 1,\n  fourtwenty: 1,\n  fraud: 0,\n  freakfuck: 2,\n  freakyfucker: 2,\n  freefuck: 2,\n  fruitcake: 1,\n  fu: 2,\n  fubar: 2,\n  fuc: 2,\n  fucck: 2,\n  fuck: 2,\n  fucka: 2,\n  fuckable: 2,\n  fuckbag: 2,\n  fuckbook: 2,\n  fuckbuddy: 2,\n  fucked: 2,\n  fuckedup: 2,\n  fucker: 2,\n  fuckers: 2,\n  fuckface: 2,\n  fuckfest: 2,\n  fuckfreak: 2,\n  fuckfriend: 2,\n  fuckhead: 2,\n  fuckher: 2,\n  fuckin: 2,\n  fuckina: 2,\n  fucking: 2,\n  fuckingbitch: 2,\n  fuckinnuts: 2,\n  fuckinright: 2,\n  fuckit: 2,\n  fuckknob: 2,\n  fuckme: 2,\n  fuckmehard: 2,\n  fuckmonkey: 2,\n  fuckoff: 2,\n  fuckpig: 2,\n  fucks: 2,\n  fucktard: 2,\n  fuckwhore: 2,\n  fuckyou: 2,\n  fudgepacker: 2,\n  fugly: 2,\n  fuk: 2,\n  fuks: 2,\n  funeral: 0,\n  funfuck: 2,\n  fungus: 0,\n  fuuck: 2,\n  gable: 1,\n  gables: 2,\n  gangbang: 2,\n  gangbanged: 2,\n  gangbanger: 2,\n  gangsta: 2,\n  'gator bait': 2,\n  gatorbait: 2,\n  gay: 0,\n  gaymuthafuckinwhore: 2,\n  gaysex: 2,\n  geez: 2,\n  geezer: 2,\n  geni: 2,\n  genital: 1,\n  german: 0,\n  getiton: 2,\n  gin: 0,\n  ginzo: 2,\n  ginzos: 2,\n  gipp: 2,\n  gippo: 2,\n  gippos: 2,\n  gipps: 2,\n  girls: 0,\n  givehead: 2,\n  glazeddonut: 2,\n  gob: 1,\n  god: 1,\n  godammit: 2,\n  goddamit: 2,\n  goddammit: 2,\n  goddamn: 2,\n  goddamned: 2,\n  goddamnes: 2,\n  goddamnit: 2,\n  goddamnmuthafucker: 2,\n  goldenshower: 2,\n  golliwog: 2,\n  golliwogs: 2,\n  gonorrehea: 2,\n  gonzagas: 1,\n  gook: 2,\n  'gook eye': 2,\n  'gook eyes': 2,\n  gookeye: 2,\n  gookeyes: 2,\n  gookies: 2,\n  gooks: 2,\n  gooky: 2,\n  gora: 2,\n  goras: 2,\n  gotohell: 2,\n  goy: 1,\n  goyim: 1,\n  greaseball: 2,\n  greaseballs: 2,\n  greaser: 2,\n  greasers: 2,\n  gringo: 2,\n  gringos: 2,\n  groe: 1,\n  groid: 2,\n  groids: 2,\n  gross: 1,\n  grostulation: 1,\n  gub: 1,\n  gubba: 2,\n  gubbas: 2,\n  gubs: 2,\n  guinea: 1,\n  guineas: 1,\n  guizi: 1,\n  gummer: 2,\n  gun: 0,\n  gwailo: 2,\n  gwailos: 2,\n  gweilo: 2,\n  gweilos: 2,\n  gyopo: 2,\n  gyopos: 2,\n  gyp: 2,\n  gyped: 2,\n  gypo: 2,\n  gypos: 2,\n  gypp: 2,\n  gypped: 2,\n  gyppie: 2,\n  gyppies: 2,\n  gyppo: 2,\n  gyppos: 2,\n  gyppy: 2,\n  gyppys: 2,\n  gypsies: 2,\n  gypsy: 2,\n  gypsys: 2,\n  hadji: 2,\n  hadjis: 2,\n  hairyback: 2,\n  hairybacks: 2,\n  haji: 2,\n  hajis: 2,\n  hajji: 2,\n  hajjis: 2,\n  'half breed': 2,\n  'half caste': 2,\n  halfbreed: 2,\n  halfcaste: 2,\n  hamas: 1,\n  handjob: 2,\n  haole: 2,\n  haoles: 2,\n  hapa: 2,\n  harder: 0,\n  hardon: 2,\n  harem: 0,\n  headfuck: 2,\n  headlights: 0,\n  hebe: 2,\n  hebephila: 1,\n  hebephile: 1,\n  hebephiles: 1,\n  hebephilia: 1,\n  hebephilic: 1,\n  hebes: 2,\n  heeb: 2,\n  heebs: 2,\n  hell: 0,\n  henhouse: 0,\n  heroin: 1,\n  herpes: 1,\n  heterosexual: 0,\n  hijack: 0,\n  hijacker: 0,\n  hijacking: 0,\n  hillbillies: 2,\n  hillbilly: 2,\n  hindoo: 2,\n  hiscock: 2,\n  hitler: 1,\n  hitlerism: 2,\n  hitlerist: 2,\n  hiv: 1,\n  ho: 2,\n  hobo: 2,\n  hodgie: 2,\n  hoes: 2,\n  hole: 0,\n  holestuffer: 2,\n  homicide: 1,\n  homo: 2,\n  homobangers: 2,\n  homosexual: 1,\n  honger: 2,\n  honk: 0,\n  honkers: 2,\n  honkey: 2,\n  honkeys: 2,\n  honkie: 2,\n  honkies: 2,\n  honky: 2,\n  hook: 0,\n  hooker: 2,\n  hookers: 2,\n  hooters: 2,\n  hore: 2,\n  hori: 2,\n  horis: 2,\n  hork: 2,\n  horn: 0,\n  horney: 2,\n  horniest: 2,\n  horny: 1,\n  horseshit: 2,\n  hosejob: 2,\n  hoser: 2,\n  hostage: 0,\n  hotdamn: 2,\n  hotpussy: 2,\n  hottotrot: 2,\n  hummer: 0,\n  hun: 0,\n  huns: 0,\n  husky: 0,\n  hussy: 2,\n  hustler: 0,\n  hymen: 1,\n  hymie: 2,\n  hymies: 2,\n  iblowu: 2,\n  idiot: 2,\n  ike: 1,\n  ikes: 1,\n  ikey: 1,\n  ikeymo: 2,\n  ikeymos: 2,\n  ikwe: 2,\n  illegal: 0,\n  illegals: 1,\n  incest: 1,\n  indon: 2,\n  indons: 2,\n  injun: 2,\n  injuns: 2,\n  insest: 2,\n  intercourse: 1,\n  interracial: 1,\n  intheass: 2,\n  inthebuff: 2,\n  israel: 0,\n  israeli: 0,\n  israels: 0,\n  italiano: 1,\n  itch: 0,\n  jackass: 2,\n  jackoff: 2,\n  jackshit: 2,\n  jacktheripper: 2,\n  jade: 0,\n  jap: 2,\n  japanese: 0,\n  japcrap: 2,\n  japie: 2,\n  japies: 2,\n  japs: 2,\n  jebus: 2,\n  jeez: 2,\n  jerkoff: 2,\n  jerries: 1,\n  jerry: 0,\n  jesus: 1,\n  jesuschrist: 1,\n  jew: 0,\n  jewboy: 2,\n  jewed: 2,\n  jewess: 2,\n  jewish: 0,\n  jig: 2,\n  jiga: 2,\n  jigaboo: 2,\n  jigaboos: 2,\n  jigarooni: 2,\n  jigaroonis: 2,\n  jigg: 2,\n  jigga: 2,\n  jiggabo: 2,\n  jiggabos: 2,\n  jiggas: 2,\n  jigger: 2,\n  jiggers: 2,\n  jiggs: 2,\n  jiggy: 2,\n  jigs: 2,\n  jihad: 1,\n  jijjiboo: 2,\n  jijjiboos: 2,\n  jimfish: 2,\n  jism: 2,\n  jiz: 2,\n  jizim: 2,\n  jizjuice: 2,\n  jizm: 2,\n  jizz: 2,\n  jizzim: 2,\n  jizzum: 2,\n  joint: 0,\n  juggalo: 2,\n  jugs: 0,\n  'jungle bunnies': 2,\n  'jungle bunny': 2,\n  junglebunny: 2,\n  kacap: 2,\n  kacapas: 2,\n  kacaps: 2,\n  kaffer: 2,\n  kaffir: 2,\n  kaffre: 2,\n  kafir: 2,\n  kanake: 2,\n  katsap: 2,\n  katsaps: 2,\n  khokhol: 2,\n  khokhols: 2,\n  kid: 0,\n  kigger: 2,\n  kike: 2,\n  kikes: 2,\n  kill: 0,\n  killed: 0,\n  killer: 0,\n  killing: 0,\n  kills: 0,\n  kimchi: 0,\n  kimchis: 2,\n  kink: 1,\n  kinky: 1,\n  kissass: 2,\n  kkk: 2,\n  klansman: 2,\n  klansmen: 2,\n  klanswoman: 2,\n  klanswomen: 2,\n  knife: 0,\n  knockers: 1,\n  kock: 1,\n  kondum: 2,\n  koon: 2,\n  kotex: 1,\n  krap: 2,\n  krappy: 2,\n  kraut: 1,\n  krauts: 2,\n  kuffar: 2,\n  kum: 2,\n  kumbubble: 2,\n  kumbullbe: 2,\n  kummer: 2,\n  kumming: 2,\n  kumquat: 2,\n  kums: 2,\n  kunilingus: 2,\n  kunnilingus: 2,\n  kunt: 2,\n  kushi: 2,\n  kushis: 2,\n  kwa: 2,\n  'kwai lo': 2,\n  'kwai los': 2,\n  ky: 1,\n  kyke: 2,\n  kykes: 2,\n  kyopo: 2,\n  kyopos: 2,\n  lactate: 1,\n  laid: 0,\n  lapdance: 1,\n  latin: 0,\n  lebo: 2,\n  lebos: 2,\n  lesbain: 2,\n  lesbayn: 2,\n  lesbian: 0,\n  lesbin: 2,\n  lesbo: 2,\n  lez: 2,\n  lezbe: 2,\n  lezbefriends: 2,\n  lezbo: 2,\n  lezz: 2,\n  lezzo: 2,\n  liberal: 0,\n  libido: 1,\n  licker: 1,\n  lickme: 2,\n  lies: 0,\n  limey: 2,\n  limpdick: 2,\n  limy: 2,\n  lingerie: 0,\n  liquor: 1,\n  livesex: 2,\n  loadedgun: 2,\n  lolita: 1,\n  looser: 2,\n  loser: 2,\n  lotion: 0,\n  lovebone: 2,\n  lovegoo: 2,\n  lovegun: 2,\n  lovejuice: 2,\n  lovemuscle: 2,\n  lovepistol: 2,\n  loverocket: 2,\n  lowlife: 2,\n  lsd: 1,\n  lubejob: 2,\n  lubra: 2,\n  lucifer: 0,\n  luckycammeltoe: 2,\n  lugan: 2,\n  lugans: 2,\n  lynch: 1,\n  mabuno: 2,\n  mabunos: 2,\n  macaca: 2,\n  macacas: 2,\n  mad: 0,\n  mafia: 1,\n  magicwand: 2,\n  mahbuno: 2,\n  mahbunos: 2,\n  mams: 2,\n  manhater: 2,\n  manpaste: 2,\n  marijuana: 1,\n  mastabate: 2,\n  mastabater: 2,\n  masterbate: 2,\n  masterblaster: 2,\n  mastrabator: 2,\n  masturbate: 2,\n  masturbating: 2,\n  mattressprincess: 2,\n  'mau mau': 2,\n  'mau maus': 2,\n  maumau: 2,\n  maumaus: 2,\n  meatbeatter: 2,\n  meatrack: 2,\n  meth: 1,\n  mexican: 0,\n  mgger: 2,\n  mggor: 2,\n  mick: 1,\n  mickeyfinn: 2,\n  mideast: 0,\n  milf: 2,\n  minority: 0,\n  mockey: 2,\n  mockie: 2,\n  mocky: 2,\n  mofo: 2,\n  moky: 2,\n  moles: 0,\n  molest: 1,\n  molestation: 1,\n  molester: 1,\n  molestor: 1,\n  moneyshot: 2,\n  'moon cricket': 2,\n  'moon crickets': 2,\n  mooncricket: 2,\n  mooncrickets: 2,\n  mormon: 0,\n  moron: 2,\n  moskal: 2,\n  moskals: 2,\n  moslem: 2,\n  mosshead: 2,\n  mothafuck: 2,\n  mothafucka: 2,\n  mothafuckaz: 2,\n  mothafucked: 2,\n  mothafucker: 2,\n  mothafuckin: 2,\n  mothafucking: 2,\n  mothafuckings: 2,\n  motherfuck: 2,\n  motherfucked: 2,\n  motherfucker: 2,\n  motherfuckin: 2,\n  motherfucking: 2,\n  motherfuckings: 2,\n  motherlovebone: 2,\n  muff: 2,\n  muffdive: 2,\n  muffdiver: 2,\n  muffindiver: 2,\n  mufflikcer: 2,\n  mulatto: 2,\n  muncher: 2,\n  munt: 2,\n  murder: 1,\n  murderer: 1,\n  muslim: 0,\n  mzungu: 2,\n  mzungus: 2,\n  naked: 0,\n  narcotic: 1,\n  nasty: 0,\n  nastybitch: 2,\n  nastyho: 2,\n  nastyslut: 2,\n  nastywhore: 2,\n  nazi: 1,\n  necro: 1,\n  negres: 2,\n  negress: 2,\n  negro: 2,\n  negroes: 2,\n  negroid: 2,\n  negros: 2,\n  nig: 2,\n  nigar: 2,\n  nigars: 2,\n  niger: 0,\n  nigerian: 1,\n  nigerians: 1,\n  nigers: 2,\n  nigette: 2,\n  nigettes: 2,\n  nigg: 2,\n  nigga: 2,\n  niggah: 2,\n  niggahs: 2,\n  niggar: 2,\n  niggaracci: 2,\n  niggard: 2,\n  niggarded: 2,\n  niggarding: 2,\n  niggardliness: 2,\n  niggardlinesss: 2,\n  niggardly: 0,\n  niggards: 2,\n  niggars: 2,\n  niggas: 2,\n  niggaz: 2,\n  nigger: 2,\n  niggerhead: 2,\n  niggerhole: 2,\n  niggers: 2,\n  niggle: 2,\n  niggled: 2,\n  niggles: 2,\n  niggling: 2,\n  nigglings: 2,\n  niggor: 2,\n  niggress: 2,\n  niggresses: 2,\n  nigguh: 2,\n  nigguhs: 2,\n  niggur: 2,\n  niggurs: 2,\n  niglet: 2,\n  nignog: 2,\n  nigor: 2,\n  nigors: 2,\n  nigr: 2,\n  nigra: 2,\n  nigras: 2,\n  nigre: 2,\n  nigres: 2,\n  nigress: 2,\n  nigs: 2,\n  nip: 2,\n  nipple: 1,\n  nipplering: 1,\n  nittit: 2,\n  nlgger: 2,\n  nlggor: 2,\n  nofuckingway: 2,\n  nook: 1,\n  nookey: 2,\n  nookie: 2,\n  noonan: 2,\n  nooner: 1,\n  nude: 1,\n  nudger: 2,\n  nuke: 1,\n  nutfucker: 2,\n  nymph: 1,\n  ontherag: 2,\n  oral: 1,\n  oreo: 0,\n  oreos: 0,\n  orga: 2,\n  orgasim: 2,\n  orgasm: 1,\n  orgies: 1,\n  orgy: 1,\n  osama: 0,\n  paddy: 1,\n  paederastic: 1,\n  paederasts: 1,\n  paederasty: 1,\n  paki: 2,\n  pakis: 2,\n  palesimian: 2,\n  palestinian: 0,\n  'pancake face': 2,\n  'pancake faces': 2,\n  pansies: 2,\n  pansy: 2,\n  panti: 2,\n  panties: 0,\n  payo: 2,\n  pearlnecklace: 1,\n  peck: 1,\n  pecker: 1,\n  peckerwood: 2,\n  pederastic: 1,\n  pederasts: 1,\n  pederasty: 1,\n  pedo: 2,\n  pedophile: 1,\n  pedophiles: 1,\n  pedophilia: 1,\n  pedophilic: 1,\n  pee: 1,\n  peehole: 2,\n  peepee: 2,\n  peepshow: 1,\n  peepshpw: 2,\n  pendy: 1,\n  penetration: 1,\n  peni5: 2,\n  penile: 1,\n  penis: 1,\n  penises: 1,\n  penthouse: 0,\n  period: 0,\n  perv: 2,\n  phonesex: 1,\n  phuk: 2,\n  phuked: 2,\n  phuking: 2,\n  phukked: 2,\n  phukking: 2,\n  phungky: 2,\n  phuq: 2,\n  pi55: 2,\n  picaninny: 2,\n  piccaninny: 2,\n  pickaninnies: 2,\n  pickaninny: 2,\n  piefke: 2,\n  piefkes: 2,\n  piker: 2,\n  pikey: 2,\n  piky: 2,\n  pimp: 2,\n  pimped: 2,\n  pimper: 2,\n  pimpjuic: 2,\n  pimpjuice: 2,\n  pimpsimp: 2,\n  pindick: 2,\n  piss: 2,\n  pissed: 2,\n  pisser: 2,\n  pisses: 2,\n  pisshead: 2,\n  pissin: 2,\n  pissing: 2,\n  pissoff: 2,\n  pistol: 1,\n  pixie: 1,\n  pixy: 1,\n  playboy: 1,\n  playgirl: 1,\n  pocha: 2,\n  pochas: 2,\n  pocho: 2,\n  pochos: 2,\n  pocketpool: 2,\n  pohm: 2,\n  pohms: 2,\n  polack: 2,\n  polacks: 2,\n  pollock: 2,\n  pollocks: 2,\n  pom: 2,\n  pommie: 2,\n  'pommie grant': 2,\n  'pommie grants': 2,\n  pommies: 2,\n  pommy: 2,\n  poms: 2,\n  poo: 2,\n  poon: 2,\n  poontang: 2,\n  poop: 2,\n  pooper: 2,\n  pooperscooper: 2,\n  pooping: 2,\n  poorwhitetrash: 2,\n  popimp: 2,\n  'porch monkey': 2,\n  'porch monkies': 2,\n  porchmonkey: 2,\n  porn: 1,\n  pornflick: 1,\n  pornking: 2,\n  porno: 1,\n  pornography: 1,\n  pornprincess: 2,\n  pot: 0,\n  poverty: 0,\n  'prairie nigger': 2,\n  'prairie niggers': 2,\n  premature: 0,\n  pric: 2,\n  prick: 2,\n  prickhead: 2,\n  primetime: 0,\n  propaganda: 0,\n  pros: 0,\n  prostitute: 1,\n  protestant: 1,\n  pu55i: 2,\n  pu55y: 2,\n  pube: 1,\n  pubic: 1,\n  pubiclice: 2,\n  pud: 2,\n  pudboy: 2,\n  pudd: 2,\n  puddboy: 2,\n  puke: 2,\n  puntang: 2,\n  purinapricness: 2,\n  puss: 2,\n  pussie: 2,\n  pussies: 2,\n  pussy: 1,\n  pussycat: 1,\n  pussyeater: 2,\n  pussyfucker: 2,\n  pussylicker: 2,\n  pussylips: 2,\n  pussylover: 2,\n  pussypounder: 2,\n  pusy: 2,\n  quashie: 2,\n  que: 0,\n  queef: 2,\n  queer: 1,\n  quickie: 2,\n  quim: 2,\n  ra8s: 2,\n  rabbi: 0,\n  racial: 0,\n  racist: 1,\n  radical: 1,\n  radicals: 1,\n  raghead: 2,\n  ragheads: 2,\n  randy: 1,\n  rape: 1,\n  raped: 1,\n  raper: 2,\n  rapist: 1,\n  rearend: 2,\n  rearentry: 2,\n  rectum: 1,\n  redleg: 2,\n  redlegs: 2,\n  redlight: 0,\n  redneck: 2,\n  rednecks: 2,\n  redskin: 2,\n  redskins: 2,\n  reefer: 2,\n  reestie: 2,\n  refugee: 0,\n  reject: 0,\n  remains: 0,\n  rentafuck: 2,\n  republican: 0,\n  rere: 2,\n  retard: 2,\n  retarded: 2,\n  ribbed: 1,\n  rigger: 2,\n  rimjob: 2,\n  rimming: 2,\n  roach: 0,\n  robber: 0,\n  'round eyes': 2,\n  roundeye: 2,\n  rump: 0,\n  russki: 2,\n  russkie: 2,\n  sadis: 2,\n  sadom: 2,\n  sambo: 2,\n  sambos: 2,\n  samckdaddy: 2,\n  'sand nigger': 2,\n  'sand niggers': 2,\n  sandm: 2,\n  sandnigger: 2,\n  satan: 1,\n  scag: 1,\n  scallywag: 2,\n  scat: 1,\n  schlong: 2,\n  schvartse: 2,\n  schvartsen: 2,\n  schwartze: 2,\n  schwartzen: 2,\n  screw: 1,\n  screwyou: 2,\n  scrotum: 1,\n  scum: 1,\n  semen: 1,\n  seppo: 2,\n  seppos: 2,\n  septic: 1,\n  septics: 1,\n  servant: 0,\n  sex: 1,\n  sexed: 2,\n  sexfarm: 2,\n  sexhound: 2,\n  sexhouse: 1,\n  sexing: 2,\n  sexkitten: 2,\n  sexpot: 2,\n  sexslave: 2,\n  sextogo: 2,\n  sextoy: 1,\n  sextoys: 1,\n  sexual: 1,\n  sexually: 1,\n  sexwhore: 2,\n  sexy: 1,\n  sexymoma: 2,\n  sexyslim: 2,\n  shag: 1,\n  shaggin: 2,\n  shagging: 2,\n  shat: 2,\n  shav: 2,\n  shawtypimp: 2,\n  sheeney: 2,\n  shhit: 2,\n  shiksa: 2,\n  shinola: 1,\n  shit: 1,\n  shitcan: 2,\n  shitdick: 2,\n  shite: 2,\n  shiteater: 2,\n  shited: 2,\n  shitface: 2,\n  shitfaced: 2,\n  shitfit: 2,\n  shitforbrains: 2,\n  shitfuck: 2,\n  shitfucker: 2,\n  shitfull: 2,\n  shithapens: 2,\n  shithappens: 2,\n  shithead: 2,\n  shithouse: 2,\n  shiting: 2,\n  shitlist: 2,\n  shitola: 2,\n  shitoutofluck: 2,\n  shits: 2,\n  shitstain: 2,\n  shitted: 2,\n  shitter: 2,\n  shitting: 2,\n  shitty: 2,\n  shoot: 0,\n  shooting: 0,\n  shortfuck: 2,\n  showtime: 0,\n  shylock: 2,\n  shylocks: 2,\n  sick: 0,\n  sissy: 2,\n  sixsixsix: 2,\n  sixtynine: 2,\n  sixtyniner: 2,\n  skank: 2,\n  skankbitch: 2,\n  skankfuck: 2,\n  skankwhore: 2,\n  skanky: 2,\n  skankybitch: 2,\n  skankywhore: 2,\n  skinflute: 2,\n  skum: 2,\n  skumbag: 2,\n  skwa: 2,\n  skwe: 2,\n  slant: 0,\n  slanteye: 2,\n  slanty: 2,\n  slapper: 2,\n  slaughter: 1,\n  slav: 0,\n  slave: 2,\n  slavedriver: 2,\n  sleezebag: 2,\n  sleezeball: 2,\n  slideitin: 2,\n  slime: 0,\n  slimeball: 2,\n  slimebucket: 2,\n  slope: 0,\n  slopehead: 2,\n  slopeheads: 2,\n  sloper: 2,\n  slopers: 2,\n  slopes: 0,\n  slopey: 2,\n  slopeys: 2,\n  slopies: 2,\n  slopy: 2,\n  slut: 2,\n  sluts: 2,\n  slutt: 2,\n  slutting: 2,\n  slutty: 2,\n  slutwear: 2,\n  slutwhore: 2,\n  smack: 1,\n  smackthemonkey: 2,\n  smut: 2,\n  snatch: 1,\n  snatchpatch: 2,\n  snigger: 0,\n  sniggered: 0,\n  sniggering: 0,\n  sniggers: 1,\n  sniper: 0,\n  snot: 0,\n  snowback: 2,\n  snownigger: 2,\n  sob: 0,\n  sodom: 1,\n  sodomise: 2,\n  sodomite: 1,\n  sodomize: 2,\n  sodomy: 2,\n  sonofabitch: 2,\n  sonofbitch: 2,\n  sooties: 2,\n  sooty: 2,\n  sos: 0,\n  soviet: 0,\n  spa: 0,\n  spade: 1,\n  spades: 1,\n  spaghettibender: 2,\n  spaghettinigger: 2,\n  spank: 1,\n  spankthemonkey: 2,\n  spearchucker: 2,\n  spearchuckers: 2,\n  sperm: 1,\n  spermacide: 2,\n  spermbag: 2,\n  spermhearder: 2,\n  spermherder: 2,\n  spic: 2,\n  spick: 2,\n  spicks: 2,\n  spics: 2,\n  spig: 2,\n  spigotty: 2,\n  spik: 2,\n  spit: 2,\n  spitter: 2,\n  splittail: 2,\n  spooge: 2,\n  spreadeagle: 2,\n  spunk: 2,\n  spunky: 2,\n  sqeh: 2,\n  squa: 2,\n  squarehead: 2,\n  squareheads: 2,\n  squaw: 2,\n  squinty: 2,\n  stagg: 1,\n  stiffy: 1,\n  strapon: 1,\n  stringer: 2,\n  stripclub: 2,\n  stroke: 0,\n  stroking: 1,\n  stuinties: 2,\n  stupid: 2,\n  stupidfuck: 2,\n  stupidfucker: 2,\n  suck: 1,\n  suckdick: 2,\n  sucker: 2,\n  suckme: 2,\n  suckmyass: 2,\n  suckmydick: 2,\n  suckmytit: 2,\n  suckoff: 2,\n  suicide: 1,\n  swallow: 1,\n  swallower: 2,\n  swalow: 2,\n  'swamp guinea': 2,\n  'swamp guineas': 2,\n  swastika: 1,\n  sweetness: 0,\n  syphilis: 1,\n  taboo: 0,\n  tacohead: 2,\n  tacoheads: 2,\n  taff: 2,\n  tampon: 0,\n  tang: 2,\n  tantra: 1,\n  'tar babies': 2,\n  'tar baby': 2,\n  tarbaby: 2,\n  tard: 2,\n  teat: 1,\n  terror: 0,\n  terrorist: 1,\n  teste: 2,\n  testicle: 1,\n  testicles: 1,\n  thicklip: 2,\n  thicklips: 2,\n  thirdeye: 2,\n  thirdleg: 2,\n  threesome: 1,\n  threeway: 2,\n  'timber nigger': 2,\n  'timber niggers': 2,\n  timbernigger: 2,\n  tinker: 2,\n  tinkers: 2,\n  tinkle: 1,\n  tit: 1,\n  titbitnipply: 2,\n  titfuck: 2,\n  titfucker: 2,\n  titfuckin: 2,\n  titjob: 2,\n  titlicker: 2,\n  titlover: 2,\n  tits: 1,\n  tittie: 2,\n  titties: 2,\n  titty: 2,\n  tnt: 1,\n  toilet: 0,\n  tongethruster: 2,\n  tongue: 0,\n  tonguethrust: 2,\n  tonguetramp: 2,\n  tortur: 2,\n  torture: 1,\n  tosser: 2,\n  'towel head': 2,\n  'towel heads': 2,\n  towelhead: 2,\n  trailertrash: 2,\n  tramp: 1,\n  trannie: 2,\n  tranny: 2,\n  transexual: 0,\n  transsexual: 0,\n  transvestite: 2,\n  trap: 1,\n  triplex: 2,\n  trisexual: 1,\n  trojan: 0,\n  trots: 1,\n  tuckahoe: 2,\n  tunneloflove: 2,\n  turd: 1,\n  turnon: 2,\n  twat: 2,\n  twink: 2,\n  twinkie: 2,\n  twobitwhore: 2,\n  uck: 2,\n  uk: 0,\n  ukrop: 2,\n  'uncle tom': 2,\n  unfuckable: 2,\n  upskirt: 2,\n  uptheass: 2,\n  upthebutt: 2,\n  urinary: 0,\n  urinate: 0,\n  urine: 0,\n  usama: 2,\n  uterus: 1,\n  vagina: 1,\n  vaginal: 1,\n  vatican: 0,\n  vibr: 2,\n  vibrater: 2,\n  vibrator: 1,\n  vietcong: 0,\n  violence: 0,\n  virgin: 0,\n  virginbreaker: 2,\n  vomit: 2,\n  vulva: 1,\n  wab: 2,\n  wank: 2,\n  wanker: 2,\n  wanking: 2,\n  waysted: 2,\n  weapon: 0,\n  weenie: 2,\n  weewee: 2,\n  welcher: 2,\n  welfare: 2,\n  wetb: 2,\n  wetback: 2,\n  wetbacks: 2,\n  wetspot: 2,\n  whacker: 2,\n  whash: 2,\n  whigger: 2,\n  whiggers: 2,\n  whiskey: 0,\n  whiskeydick: 2,\n  whiskydick: 2,\n  whit: 1,\n  'white trash': 2,\n  whitenigger: 2,\n  whites: 1,\n  whitetrash: 2,\n  whitey: 2,\n  whiteys: 2,\n  whities: 2,\n  whiz: 2,\n  whop: 2,\n  whore: 2,\n  whorefucker: 2,\n  whorehouse: 2,\n  wigga: 2,\n  wiggas: 2,\n  wigger: 2,\n  wiggers: 2,\n  willie: 2,\n  williewanker: 2,\n  willy: 1,\n  wn: 2,\n  wog: 2,\n  wogs: 2,\n  womens: 0,\n  wop: 2,\n  wtf: 2,\n  wuss: 2,\n  wuzzie: 2,\n  xkwe: 2,\n  xtc: 1,\n  xxx: 1,\n  yank: 2,\n  yankee: 1,\n  yankees: 1,\n  yanks: 2,\n  yarpie: 2,\n  yarpies: 2,\n  yellowman: 2,\n  yid: 2,\n  yids: 2,\n  zigabo: 2,\n  zigabos: 2,\n  zipperhead: 2,\n  zipperheads: 2\n}\n","var difficultWordWeight = 0.1579\nvar wordWeight = 0.0496\nvar difficultWordThreshold = 0.05\nvar percentage = 100\nvar adjustment = 3.6365\n\n// Grade map associated with the scores.\nvar gradeMap = {\n  4: [0, 4],\n  5: [5, 6],\n  6: [7, 8],\n  7: [9, 10],\n  8: [11, 12],\n  9: [13, 15],\n  10: [16, Number.POSITIVE_INFINITY],\n  NaN: [Number.NaN, Number.NaN]\n}\n\n/**\n * @typedef {Object.<string, number>} DaleChallFormulaCounts\n * @property {number} sentence\n * @property {number} word\n * @property {number} difficultWord\n */\n\n/**\n * Given the number of words (`word`), the number of sentences (`sentence`), and the number of unique unfamiliar words in a document (`difficultWord`), returns the score associated with the document.\n *\n * @param {DaleChallFormulaCounts} counts\n * @returns {number}\n */\nexport function daleChallFormula(counts) {\n  /** @type {number} */\n  var percentageOfDifficultWords\n  /** @type {number} */\n  var score\n\n  if (!counts || !counts.sentence || !counts.word) {\n    return Number.NaN\n  }\n\n  percentageOfDifficultWords = (counts.difficultWord || 0) / counts.word\n\n  score =\n    difficultWordWeight * percentageOfDifficultWords * percentage +\n    (wordWeight * counts.word) / counts.sentence\n\n  if (percentageOfDifficultWords > difficultWordThreshold) {\n    score += adjustment\n  }\n\n  return score\n}\n\n/**\n * Mapping between a dale-chall score and a U.S. grade level.\n *\n * @param {number} score\n * @returns {[number, number]}\n */\nexport function daleChallGradeLevel(score) {\n  var floored = Math.floor(score)\n\n  if (floored < 5) {\n    floored = 4\n  } else if (floored > 9) {\n    floored = 10\n  }\n\n  // eslint-ignore-next-line capitalized-comments\n  // type-coverage:ignore-next-line\n  return gradeMap[floored].concat()\n}\n","export var daleChall = [\n  'a',\n  'able',\n  'aboard',\n  'about',\n  'above',\n  'absent',\n  'accept',\n  'accident',\n  'account',\n  'ache',\n  'aching',\n  'acorn',\n  'acre',\n  'across',\n  'act',\n  'acts',\n  'add',\n  'address',\n  'admire',\n  'adventure',\n  'afar',\n  'afraid',\n  'after',\n  'afternoon',\n  'afterward',\n  'afterwards',\n  'again',\n  'against',\n  'age',\n  'aged',\n  'ago',\n  'agree',\n  'ah',\n  'ahead',\n  'aid',\n  'aim',\n  'air',\n  'airfield',\n  'airplane',\n  'airport',\n  'airship',\n  'airy',\n  'alarm',\n  'alike',\n  'alive',\n  'all',\n  'alley',\n  'alligator',\n  'allow',\n  'almost',\n  'alone',\n  'along',\n  'aloud',\n  'already',\n  'also',\n  'always',\n  'am',\n  'america',\n  'american',\n  'among',\n  'amount',\n  'an',\n  'and',\n  'angel',\n  'anger',\n  'angry',\n  'animal',\n  'another',\n  'answer',\n  'ant',\n  'any',\n  'anybody',\n  'anyhow',\n  'anyone',\n  'anything',\n  'anyway',\n  'anywhere',\n  'apart',\n  'apartment',\n  'ape',\n  'apiece',\n  'appear',\n  'apple',\n  'april',\n  'apron',\n  'are',\n  \"aren't\",\n  'arise',\n  'arithmetic',\n  'arm',\n  'armful',\n  'army',\n  'arose',\n  'around',\n  'arrange',\n  'arrive',\n  'arrived',\n  'arrow',\n  'art',\n  'artist',\n  'as',\n  'ash',\n  'ashes',\n  'aside',\n  'ask',\n  'asleep',\n  'at',\n  'ate',\n  'attack',\n  'attend',\n  'attention',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'automobile',\n  'autumn',\n  'avenue',\n  'awake',\n  'awaken',\n  'away',\n  'awful',\n  'awfully',\n  'awhile',\n  'ax',\n  'axe',\n  'baa',\n  'babe',\n  'babies',\n  'back',\n  'background',\n  'backward',\n  'backwards',\n  'bacon',\n  'bad',\n  'badge',\n  'badly',\n  'bag',\n  'bake',\n  'baker',\n  'bakery',\n  'baking',\n  'ball',\n  'balloon',\n  'banana',\n  'band',\n  'bandage',\n  'bang',\n  'banjo',\n  'bank',\n  'banker',\n  'bar',\n  'barber',\n  'bare',\n  'barefoot',\n  'barely',\n  'bark',\n  'barn',\n  'barrel',\n  'base',\n  'baseball',\n  'basement',\n  'basket',\n  'bat',\n  'batch',\n  'bath',\n  'bathe',\n  'bathing',\n  'bathroom',\n  'bathtub',\n  'battle',\n  'battleship',\n  'bay',\n  'be',\n  'beach',\n  'bead',\n  'beam',\n  'bean',\n  'bear',\n  'beard',\n  'beast',\n  'beat',\n  'beating',\n  'beautiful',\n  'beautify',\n  'beauty',\n  'became',\n  'because',\n  'become',\n  'becoming',\n  'bed',\n  'bedbug',\n  'bedroom',\n  'bedspread',\n  'bedtime',\n  'bee',\n  'beech',\n  'beef',\n  'beefsteak',\n  'beehive',\n  'been',\n  'beer',\n  'beet',\n  'before',\n  'beg',\n  'began',\n  'beggar',\n  'begged',\n  'begin',\n  'beginning',\n  'begun',\n  'behave',\n  'behind',\n  'being',\n  'believe',\n  'bell',\n  'belong',\n  'below',\n  'belt',\n  'bench',\n  'bend',\n  'beneath',\n  'bent',\n  'berries',\n  'berry',\n  'beside',\n  'besides',\n  'best',\n  'bet',\n  'better',\n  'between',\n  'bib',\n  'bible',\n  'bicycle',\n  'bid',\n  'big',\n  'bigger',\n  'bill',\n  'billboard',\n  'bin',\n  'bind',\n  'bird',\n  'birth',\n  'birthday',\n  'biscuit',\n  'bit',\n  'bite',\n  'biting',\n  'bitter',\n  'black',\n  'blackberry',\n  'blackbird',\n  'blackboard',\n  'blackness',\n  'blacksmith',\n  'blame',\n  'blank',\n  'blanket',\n  'blast',\n  'blaze',\n  'bleed',\n  'bless',\n  'blessing',\n  'blew',\n  'blind',\n  'blindfold',\n  'blinds',\n  'block',\n  'blood',\n  'bloom',\n  'blossom',\n  'blot',\n  'blow',\n  'blue',\n  'blueberry',\n  'bluebird',\n  'blush',\n  'board',\n  'boast',\n  'boat',\n  'bob',\n  'bobwhite',\n  'bodies',\n  'body',\n  'boil',\n  'boiler',\n  'bold',\n  'bone',\n  'bonnet',\n  'boo',\n  'book',\n  'bookcase',\n  'bookkeeper',\n  'boom',\n  'boot',\n  'born',\n  'borrow',\n  'boss',\n  'both',\n  'bother',\n  'bottle',\n  'bottom',\n  'bought',\n  'bounce',\n  'bow',\n  'bow-wow',\n  'bowl',\n  'box',\n  'boxcar',\n  'boxer',\n  'boxes',\n  'boy',\n  'boyhood',\n  'bracelet',\n  'brain',\n  'brake',\n  'bran',\n  'branch',\n  'brass',\n  'brave',\n  'bread',\n  'break',\n  'breakfast',\n  'breast',\n  'breath',\n  'breathe',\n  'breeze',\n  'brick',\n  'bride',\n  'bridge',\n  'bright',\n  'brightness',\n  'bring',\n  'broad',\n  'broadcast',\n  'broke',\n  'broken',\n  'brook',\n  'broom',\n  'brother',\n  'brought',\n  'brown',\n  'brush',\n  'bubble',\n  'bucket',\n  'buckle',\n  'bud',\n  'buffalo',\n  'bug',\n  'buggy',\n  'build',\n  'building',\n  'built',\n  'bulb',\n  'bull',\n  'bullet',\n  'bum',\n  'bumblebee',\n  'bump',\n  'bun',\n  'bunch',\n  'bundle',\n  'bunny',\n  'burn',\n  'burst',\n  'bury',\n  'bus',\n  'bush',\n  'bushel',\n  'business',\n  'busy',\n  'but',\n  'butcher',\n  'butt',\n  'butter',\n  'buttercup',\n  'butterfly',\n  'buttermilk',\n  'butterscotch',\n  'button',\n  'buttonhole',\n  'buy',\n  'buzz',\n  'by',\n  'bye',\n  'cab',\n  'cabbage',\n  'cabin',\n  'cabinet',\n  'cackle',\n  'cage',\n  'cake',\n  'calendar',\n  'calf',\n  'call',\n  'caller',\n  'calling',\n  'came',\n  'camel',\n  'camp',\n  'campfire',\n  'can',\n  \"can't\",\n  'canal',\n  'canary',\n  'candle',\n  'candlestick',\n  'candy',\n  'cane',\n  'cannon',\n  'cannot',\n  'canoe',\n  'canyon',\n  'cap',\n  'cape',\n  'capital',\n  'captain',\n  'car',\n  'card',\n  'cardboard',\n  'care',\n  'careful',\n  'careless',\n  'carelessness',\n  'carload',\n  'carpenter',\n  'carpet',\n  'carriage',\n  'carrot',\n  'carry',\n  'cart',\n  'carve',\n  'case',\n  'cash',\n  'cashier',\n  'castle',\n  'cat',\n  'catbird',\n  'catch',\n  'catcher',\n  'caterpillar',\n  'catfish',\n  'catsup',\n  'cattle',\n  'caught',\n  'cause',\n  'cave',\n  'ceiling',\n  'cell',\n  'cellar',\n  'cent',\n  'center',\n  'cereal',\n  'certain',\n  'certainly',\n  'chain',\n  'chair',\n  'chalk',\n  'champion',\n  'chance',\n  'change',\n  'chap',\n  'charge',\n  'charm',\n  'chart',\n  'chase',\n  'chatter',\n  'cheap',\n  'cheat',\n  'check',\n  'checkers',\n  'cheek',\n  'cheer',\n  'cheese',\n  'cherry',\n  'chest',\n  'chew',\n  'chick',\n  'chicken',\n  'chief',\n  'child',\n  'childhood',\n  'children',\n  'chill',\n  'chilly',\n  'chimney',\n  'chin',\n  'china',\n  'chip',\n  'chipmunk',\n  'chocolate',\n  'choice',\n  'choose',\n  'chop',\n  'chorus',\n  'chose',\n  'chosen',\n  'christen',\n  'christmas',\n  'church',\n  'churn',\n  'cigarette',\n  'circle',\n  'circus',\n  'citizen',\n  'city',\n  'clang',\n  'clap',\n  'class',\n  'classmate',\n  'classroom',\n  'claw',\n  'clay',\n  'clean',\n  'cleaner',\n  'clear',\n  'clerk',\n  'clever',\n  'click',\n  'cliff',\n  'climb',\n  'clip',\n  'cloak',\n  'clock',\n  'close',\n  'closet',\n  'cloth',\n  'clothes',\n  'clothing',\n  'cloud',\n  'cloudy',\n  'clover',\n  'clown',\n  'club',\n  'cluck',\n  'clump',\n  'coach',\n  'coal',\n  'coast',\n  'coat',\n  'cob',\n  'cobbler',\n  'cocoa',\n  'coconut',\n  'cocoon',\n  'cod',\n  'codfish',\n  'coffee',\n  'coffeepot',\n  'coin',\n  'cold',\n  'collar',\n  'college',\n  'color',\n  'colored',\n  'colt',\n  'column',\n  'comb',\n  'come',\n  'comfort',\n  'comic',\n  'coming',\n  'company',\n  'compare',\n  'conductor',\n  'cone',\n  'connect',\n  'coo',\n  'cook',\n  'cooked',\n  'cookie',\n  'cookies',\n  'cooking',\n  'cool',\n  'cooler',\n  'coop',\n  'copper',\n  'copy',\n  'cord',\n  'cork',\n  'corn',\n  'corner',\n  'correct',\n  'cost',\n  'cot',\n  'cottage',\n  'cotton',\n  'couch',\n  'cough',\n  'could',\n  \"couldn't\",\n  'count',\n  'counter',\n  'country',\n  'county',\n  'course',\n  'court',\n  'cousin',\n  'cover',\n  'cow',\n  'coward',\n  'cowardly',\n  'cowboy',\n  'cozy',\n  'crab',\n  'crack',\n  'cracker',\n  'cradle',\n  'cramps',\n  'cranberry',\n  'crank',\n  'cranky',\n  'crash',\n  'crawl',\n  'crazy',\n  'cream',\n  'creamy',\n  'creek',\n  'creep',\n  'crept',\n  'cried',\n  'cries',\n  'croak',\n  'crook',\n  'crooked',\n  'crop',\n  'cross',\n  'cross-eyed',\n  'crossing',\n  'crow',\n  'crowd',\n  'crowded',\n  'crown',\n  'cruel',\n  'crumb',\n  'crumble',\n  'crush',\n  'crust',\n  'cry',\n  'cub',\n  'cuff',\n  'cup',\n  'cupboard',\n  'cupful',\n  'cure',\n  'curl',\n  'curly',\n  'curtain',\n  'curve',\n  'cushion',\n  'custard',\n  'customer',\n  'cut',\n  'cute',\n  'cutting',\n  'dab',\n  'dad',\n  'daddy',\n  'daily',\n  'dairy',\n  'daisy',\n  'dam',\n  'damage',\n  'dame',\n  'damp',\n  'dance',\n  'dancer',\n  'dancing',\n  'dandy',\n  'danger',\n  'dangerous',\n  'dare',\n  'dark',\n  'darkness',\n  'darling',\n  'darn',\n  'dart',\n  'dash',\n  'date',\n  'daughter',\n  'dawn',\n  'day',\n  'daybreak',\n  'daytime',\n  'dead',\n  'deaf',\n  'deal',\n  'dear',\n  'death',\n  'december',\n  'decide',\n  'deck',\n  'deed',\n  'deep',\n  'deer',\n  'defeat',\n  'defend',\n  'defense',\n  'delight',\n  'den',\n  'dentist',\n  'depend',\n  'deposit',\n  'describe',\n  'desert',\n  'deserve',\n  'desire',\n  'desk',\n  'destroy',\n  'devil',\n  'dew',\n  'diamond',\n  'did',\n  \"didn't\",\n  'die',\n  'died',\n  'dies',\n  'difference',\n  'different',\n  'dig',\n  'dim',\n  'dime',\n  'dine',\n  'ding-dong',\n  'dinner',\n  'dip',\n  'direct',\n  'direction',\n  'dirt',\n  'dirty',\n  'discover',\n  'dish',\n  'dislike',\n  'dismiss',\n  'ditch',\n  'dive',\n  'diver',\n  'divide',\n  'do',\n  'dock',\n  'doctor',\n  'does',\n  \"doesn't\",\n  'dog',\n  'doll',\n  'dollar',\n  'dolly',\n  \"don't\",\n  'done',\n  'donkey',\n  'door',\n  'doorbell',\n  'doorknob',\n  'doorstep',\n  'dope',\n  'dot',\n  'double',\n  'dough',\n  'dove',\n  'down',\n  'downstairs',\n  'downtown',\n  'dozen',\n  'drag',\n  'drain',\n  'drank',\n  'draw',\n  'drawer',\n  'drawing',\n  'dream',\n  'dress',\n  'dresser',\n  'dressmaker',\n  'drew',\n  'dried',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'driven',\n  'driver',\n  'drop',\n  'drove',\n  'drown',\n  'drowsy',\n  'drub',\n  'drum',\n  'drunk',\n  'dry',\n  'duck',\n  'due',\n  'dug',\n  'dull',\n  'dumb',\n  'dump',\n  'during',\n  'dust',\n  'dusty',\n  'duty',\n  'dwarf',\n  'dwell',\n  'dwelt',\n  'dying',\n  'each',\n  'eager',\n  'eagle',\n  'ear',\n  'early',\n  'earn',\n  'earth',\n  'east',\n  'eastern',\n  'easy',\n  'eat',\n  'eaten',\n  'edge',\n  'egg',\n  'eh',\n  'eight',\n  'eighteen',\n  'eighth',\n  'eighty',\n  'either',\n  'elbow',\n  'elder',\n  'eldest',\n  'electric',\n  'electricity',\n  'elephant',\n  'eleven',\n  'elf',\n  'elm',\n  'else',\n  'elsewhere',\n  'empty',\n  'end',\n  'ending',\n  'enemy',\n  'engine',\n  'engineer',\n  'english',\n  'enjoy',\n  'enough',\n  'enter',\n  'envelope',\n  'equal',\n  'erase',\n  'eraser',\n  'errand',\n  'escape',\n  'eve',\n  'even',\n  'evening',\n  'ever',\n  'every',\n  'everybody',\n  'everyday',\n  'everyone',\n  'everything',\n  'everywhere',\n  'evil',\n  'exact',\n  'except',\n  'exchange',\n  'excited',\n  'exciting',\n  'excuse',\n  'exit',\n  'expect',\n  'explain',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fable',\n  'face',\n  'facing',\n  'fact',\n  'factory',\n  'fail',\n  'faint',\n  'fair',\n  'fairy',\n  'faith',\n  'fake',\n  'fall',\n  'false',\n  'family',\n  'fan',\n  'fancy',\n  'far',\n  'far-off',\n  'faraway',\n  'fare',\n  'farm',\n  'farmer',\n  'farming',\n  'farther',\n  'fashion',\n  'fast',\n  'fasten',\n  'fat',\n  'father',\n  'fault',\n  'favor',\n  'favorite',\n  'fear',\n  'feast',\n  'feather',\n  'february',\n  'fed',\n  'feed',\n  'feel',\n  'feet',\n  'fell',\n  'fellow',\n  'felt',\n  'fence',\n  'fever',\n  'few',\n  'fib',\n  'fiddle',\n  'field',\n  'fife',\n  'fifteen',\n  'fifth',\n  'fifty',\n  'fig',\n  'fight',\n  'figure',\n  'file',\n  'fill',\n  'film',\n  'finally',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firearm',\n  'firecracker',\n  'fireplace',\n  'fireworks',\n  'firing',\n  'first',\n  'fish',\n  'fisherman',\n  'fist',\n  'fit',\n  'fits',\n  'five',\n  'fix',\n  'flag',\n  'flake',\n  'flame',\n  'flap',\n  'flash',\n  'flashlight',\n  'flat',\n  'flea',\n  'flesh',\n  'flew',\n  'flies',\n  'flight',\n  'flip',\n  'flip-flop',\n  'float',\n  'flock',\n  'flood',\n  'floor',\n  'flop',\n  'flour',\n  'flow',\n  'flower',\n  'flowery',\n  'flutter',\n  'fly',\n  'foam',\n  'fog',\n  'foggy',\n  'fold',\n  'folks',\n  'follow',\n  'following',\n  'fond',\n  'food',\n  'fool',\n  'foolish',\n  'foot',\n  'football',\n  'footprint',\n  'for',\n  'forehead',\n  'forest',\n  'forget',\n  'forgive',\n  'forgot',\n  'forgotten',\n  'fork',\n  'form',\n  'fort',\n  'forth',\n  'fortune',\n  'forty',\n  'forward',\n  'fought',\n  'found',\n  'fountain',\n  'four',\n  'fourteen',\n  'fourth',\n  'fox',\n  'frame',\n  'free',\n  'freedom',\n  'freeze',\n  'freight',\n  'french',\n  'fresh',\n  'fret',\n  'friday',\n  'fried',\n  'friend',\n  'friendly',\n  'friendship',\n  'frighten',\n  'frog',\n  'from',\n  'front',\n  'frost',\n  'frown',\n  'froze',\n  'fruit',\n  'fry',\n  'fudge',\n  'fuel',\n  'full',\n  'fully',\n  'fun',\n  'funny',\n  'fur',\n  'furniture',\n  'further',\n  'fuzzy',\n  'gain',\n  'gallon',\n  'gallop',\n  'game',\n  'gang',\n  'garage',\n  'garbage',\n  'garden',\n  'gas',\n  'gasoline',\n  'gate',\n  'gather',\n  'gave',\n  'gay',\n  'gear',\n  'geese',\n  'general',\n  'gentle',\n  'gentleman',\n  'gentlemen',\n  'geography',\n  'get',\n  'getting',\n  'giant',\n  'gift',\n  'gingerbread',\n  'girl',\n  'give',\n  'given',\n  'giving',\n  'glad',\n  'gladly',\n  'glance',\n  'glass',\n  'glasses',\n  'gleam',\n  'glide',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'go',\n  'goal',\n  'goat',\n  'gobble',\n  'god',\n  'godmother',\n  'goes',\n  'going',\n  'gold',\n  'golden',\n  'goldfish',\n  'golf',\n  'gone',\n  'good',\n  'good-by',\n  'good-bye',\n  'good-looking',\n  'goodbye',\n  'goodness',\n  'goods',\n  'goody',\n  'goose',\n  'gooseberry',\n  'got',\n  'govern',\n  'government',\n  'gown',\n  'grab',\n  'gracious',\n  'grade',\n  'grain',\n  'grand',\n  'grandchild',\n  'grandchildren',\n  'granddaughter',\n  'grandfather',\n  'grandma',\n  'grandmother',\n  'grandpa',\n  'grandson',\n  'grandstand',\n  'grape',\n  'grapefruit',\n  'grapes',\n  'grass',\n  'grasshopper',\n  'grateful',\n  'grave',\n  'gravel',\n  'graveyard',\n  'gravy',\n  'gray',\n  'graze',\n  'grease',\n  'great',\n  'green',\n  'greet',\n  'grew',\n  'grind',\n  'groan',\n  'grocery',\n  'ground',\n  'group',\n  'grove',\n  'grow',\n  'guard',\n  'guess',\n  'guest',\n  'guide',\n  'gulf',\n  'gum',\n  'gun',\n  'gunpowder',\n  'guy',\n  'ha',\n  'habit',\n  'had',\n  \"hadn't\",\n  'hail',\n  'hair',\n  'haircut',\n  'hairpin',\n  'half',\n  'hall',\n  'halt',\n  'ham',\n  'hammer',\n  'hand',\n  'handful',\n  'handkerchief',\n  'handle',\n  'handwriting',\n  'hang',\n  'happen',\n  'happily',\n  'happiness',\n  'happy',\n  'harbor',\n  'hard',\n  'hardly',\n  'hardship',\n  'hardware',\n  'hare',\n  'hark',\n  'harm',\n  'harness',\n  'harp',\n  'harvest',\n  'has',\n  \"hasn't\",\n  'haste',\n  'hasten',\n  'hasty',\n  'hat',\n  'hatch',\n  'hatchet',\n  'hate',\n  'haul',\n  'have',\n  \"haven't\",\n  'having',\n  'hawk',\n  'hay',\n  'hayfield',\n  'haystack',\n  'he',\n  \"he'd\",\n  \"he'll\",\n  \"he's\",\n  'head',\n  'headache',\n  'heal',\n  'health',\n  'healthy',\n  'heap',\n  'hear',\n  'heard',\n  'hearing',\n  'heart',\n  'heat',\n  'heater',\n  'heaven',\n  'heavy',\n  'heel',\n  'height',\n  'held',\n  'hell',\n  'hello',\n  'helmet',\n  'help',\n  'helper',\n  'helpful',\n  'hem',\n  'hen',\n  'henhouse',\n  'her',\n  'herd',\n  'here',\n  \"here's\",\n  'hero',\n  'hers',\n  'herself',\n  'hey',\n  'hickory',\n  'hid',\n  'hidden',\n  'hide',\n  'high',\n  'highway',\n  'hill',\n  'hillside',\n  'hilltop',\n  'hilly',\n  'him',\n  'himself',\n  'hind',\n  'hint',\n  'hip',\n  'hire',\n  'his',\n  'hiss',\n  'history',\n  'hit',\n  'hitch',\n  'hive',\n  'ho',\n  'hoe',\n  'hog',\n  'hold',\n  'holder',\n  'hole',\n  'holiday',\n  'hollow',\n  'holy',\n  'home',\n  'homely',\n  'homesick',\n  'honest',\n  'honey',\n  'honeybee',\n  'honeymoon',\n  'honk',\n  'honor',\n  'hood',\n  'hoof',\n  'hook',\n  'hoop',\n  'hop',\n  'hope',\n  'hopeful',\n  'hopeless',\n  'horn',\n  'horse',\n  'horseback',\n  'horseshoe',\n  'hose',\n  'hospital',\n  'host',\n  'hot',\n  'hotel',\n  'hound',\n  'hour',\n  'house',\n  'housetop',\n  'housewife',\n  'housework',\n  'how',\n  'however',\n  'howl',\n  'hug',\n  'huge',\n  'hum',\n  'humble',\n  'hump',\n  'hundred',\n  'hung',\n  'hunger',\n  'hungry',\n  'hunk',\n  'hunt',\n  'hunter',\n  'hurrah',\n  'hurried',\n  'hurry',\n  'hurt',\n  'husband',\n  'hush',\n  'hut',\n  'hymn',\n  'i',\n  \"i'd\",\n  \"i'll\",\n  \"i'm\",\n  \"i've\",\n  'ice',\n  'icy',\n  'idea',\n  'ideal',\n  'if',\n  'ill',\n  'important',\n  'impossible',\n  'improve',\n  'in',\n  'inch',\n  'inches',\n  'income',\n  'indeed',\n  'indian',\n  'indoors',\n  'ink',\n  'inn',\n  'insect',\n  'inside',\n  'instant',\n  'instead',\n  'insult',\n  'intend',\n  'interested',\n  'interesting',\n  'into',\n  'invite',\n  'iron',\n  'is',\n  'island',\n  \"isn't\",\n  'it',\n  \"it's\",\n  'its',\n  'itself',\n  'ivory',\n  'ivy',\n  'jacket',\n  'jacks',\n  'jail',\n  'jam',\n  'january',\n  'jar',\n  'jaw',\n  'jay',\n  'jelly',\n  'jellyfish',\n  'jerk',\n  'jig',\n  'job',\n  'jockey',\n  'join',\n  'joke',\n  'joking',\n  'jolly',\n  'journey',\n  'joy',\n  'joyful',\n  'joyous',\n  'judge',\n  'jug',\n  'juice',\n  'juicy',\n  'july',\n  'jump',\n  'june',\n  'junior',\n  'junk',\n  'just',\n  'keen',\n  'keep',\n  'kept',\n  'kettle',\n  'key',\n  'kick',\n  'kid',\n  'kill',\n  'killed',\n  'kind',\n  'kindly',\n  'kindness',\n  'king',\n  'kingdom',\n  'kiss',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kitty',\n  'knee',\n  'kneel',\n  'knew',\n  'knife',\n  'knit',\n  'knives',\n  'knob',\n  'knock',\n  'knot',\n  'know',\n  'known',\n  'lace',\n  'lad',\n  'ladder',\n  'ladies',\n  'lady',\n  'laid',\n  'lake',\n  'lamb',\n  'lame',\n  'lamp',\n  'land',\n  'lane',\n  'language',\n  'lantern',\n  'lap',\n  'lard',\n  'large',\n  'lash',\n  'lass',\n  'last',\n  'late',\n  'laugh',\n  'laundry',\n  'law',\n  'lawn',\n  'lawyer',\n  'lay',\n  'lazy',\n  'lead',\n  'leader',\n  'leaf',\n  'leak',\n  'lean',\n  'leap',\n  'learn',\n  'learned',\n  'least',\n  'leather',\n  'leave',\n  'leaving',\n  'led',\n  'left',\n  'leg',\n  'lemon',\n  'lemonade',\n  'lend',\n  'length',\n  'less',\n  'lesson',\n  'let',\n  \"let's\",\n  'letter',\n  'letting',\n  'lettuce',\n  'level',\n  'liberty',\n  'library',\n  'lice',\n  'lick',\n  'lid',\n  'lie',\n  'life',\n  'lift',\n  'light',\n  'lightness',\n  'lightning',\n  'like',\n  'likely',\n  'liking',\n  'lily',\n  'limb',\n  'lime',\n  'limp',\n  'line',\n  'linen',\n  'lion',\n  'lip',\n  'list',\n  'listen',\n  'lit',\n  'little',\n  'live',\n  'lively',\n  'liver',\n  'lives',\n  'living',\n  'lizard',\n  'load',\n  'loaf',\n  'loan',\n  'loaves',\n  'lock',\n  'locomotive',\n  'log',\n  'lone',\n  'lonely',\n  'lonesome',\n  'long',\n  'look',\n  'lookout',\n  'loop',\n  'loose',\n  'lord',\n  'lose',\n  'loser',\n  'loss',\n  'lost',\n  'lot',\n  'loud',\n  'love',\n  'lovely',\n  'lover',\n  'low',\n  'luck',\n  'lucky',\n  'lumber',\n  'lump',\n  'lunch',\n  'lying',\n  'ma',\n  'machine',\n  'machinery',\n  'mad',\n  'made',\n  'magazine',\n  'magic',\n  'maid',\n  'mail',\n  'mailbox',\n  'mailman',\n  'major',\n  'make',\n  'making',\n  'male',\n  'mama',\n  'mamma',\n  'man',\n  'manager',\n  'mane',\n  'manger',\n  'many',\n  'map',\n  'maple',\n  'marble',\n  'march',\n  'mare',\n  'mark',\n  'market',\n  'marriage',\n  'married',\n  'marry',\n  'mask',\n  'mast',\n  'master',\n  'mat',\n  'match',\n  'matter',\n  'mattress',\n  'may',\n  'maybe',\n  'mayor',\n  'maypole',\n  'me',\n  'meadow',\n  'meal',\n  'mean',\n  'means',\n  'meant',\n  'measure',\n  'meat',\n  'medicine',\n  'meet',\n  'meeting',\n  'melt',\n  'member',\n  'men',\n  'mend',\n  'meow',\n  'merry',\n  'mess',\n  'message',\n  'met',\n  'metal',\n  'mew',\n  'mice',\n  'middle',\n  'midnight',\n  'might',\n  'mighty',\n  'mile',\n  'miler',\n  'milk',\n  'milkman',\n  'mill',\n  'million',\n  'mind',\n  'mine',\n  'miner',\n  'mint',\n  'minute',\n  'mirror',\n  'mischief',\n  'miss',\n  'misspell',\n  'mistake',\n  'misty',\n  'mitt',\n  'mitten',\n  'mix',\n  'moment',\n  'monday',\n  'money',\n  'monkey',\n  'month',\n  'moo',\n  'moon',\n  'moonlight',\n  'moose',\n  'mop',\n  'more',\n  'morning',\n  'morrow',\n  'moss',\n  'most',\n  'mostly',\n  'mother',\n  'motor',\n  'mount',\n  'mountain',\n  'mouse',\n  'mouth',\n  'move',\n  'movie',\n  'movies',\n  'moving',\n  'mow',\n  'mr.',\n  'mrs.',\n  'much',\n  'mud',\n  'muddy',\n  'mug',\n  'mule',\n  'multiply',\n  'murder',\n  'music',\n  'must',\n  'my',\n  'myself',\n  'nail',\n  'name',\n  'nap',\n  'napkin',\n  'narrow',\n  'nasty',\n  'naughty',\n  'navy',\n  'near',\n  'nearby',\n  'nearly',\n  'neat',\n  'neck',\n  'necktie',\n  'need',\n  'needle',\n  \"needn't\",\n  'negro',\n  'neighbor',\n  'neighborhood',\n  'neither',\n  'nerve',\n  'nest',\n  'net',\n  'never',\n  'nevermore',\n  'new',\n  'news',\n  'newspaper',\n  'next',\n  'nibble',\n  'nice',\n  'nickel',\n  'night',\n  'nightgown',\n  'nine',\n  'nineteen',\n  'ninety',\n  'no',\n  'nobody',\n  'nod',\n  'noise',\n  'noisy',\n  'none',\n  'noon',\n  'nor',\n  'north',\n  'northern',\n  'nose',\n  'not',\n  'note',\n  'nothing',\n  'notice',\n  'november',\n  'now',\n  'nowhere',\n  'number',\n  'nurse',\n  'nut',\n  \"o'clock\",\n  'oak',\n  'oar',\n  'oatmeal',\n  'oats',\n  'obey',\n  'ocean',\n  'october',\n  'odd',\n  'of',\n  'off',\n  'offer',\n  'office',\n  'officer',\n  'often',\n  'oh',\n  'oil',\n  'old',\n  'old-fashioned',\n  'on',\n  'once',\n  'one',\n  'onion',\n  'only',\n  'onward',\n  'open',\n  'or',\n  'orange',\n  'orchard',\n  'order',\n  'ore',\n  'organ',\n  'other',\n  'otherwise',\n  'ouch',\n  'ought',\n  'our',\n  'ours',\n  'ourselves',\n  'out',\n  'outdoors',\n  'outfit',\n  'outlaw',\n  'outline',\n  'outside',\n  'outward',\n  'oven',\n  'over',\n  'overalls',\n  'overcoat',\n  'overeat',\n  'overhead',\n  'overhear',\n  'overnight',\n  'overturn',\n  'owe',\n  'owing',\n  'owl',\n  'own',\n  'owner',\n  'ox',\n  'pa',\n  'pace',\n  'pack',\n  'package',\n  'pad',\n  'page',\n  'paid',\n  'pail',\n  'pain',\n  'painful',\n  'paint',\n  'painter',\n  'painting',\n  'pair',\n  'pal',\n  'palace',\n  'pale',\n  'pan',\n  'pancake',\n  'pane',\n  'pansy',\n  'pants',\n  'papa',\n  'paper',\n  'parade',\n  'pardon',\n  'parent',\n  'park',\n  'part',\n  'partly',\n  'partner',\n  'party',\n  'pass',\n  'passenger',\n  'past',\n  'paste',\n  'pasture',\n  'pat',\n  'patch',\n  'path',\n  'patter',\n  'pave',\n  'pavement',\n  'paw',\n  'pay',\n  'payment',\n  'pea',\n  'peace',\n  'peaceful',\n  'peach',\n  'peaches',\n  'peak',\n  'peanut',\n  'pear',\n  'pearl',\n  'peas',\n  'peck',\n  'peek',\n  'peel',\n  'peep',\n  'peg',\n  'pen',\n  'pencil',\n  'penny',\n  'people',\n  'pepper',\n  'peppermint',\n  'perfume',\n  'perhaps',\n  'person',\n  'pet',\n  'phone',\n  'piano',\n  'pick',\n  'pickle',\n  'picnic',\n  'picture',\n  'pie',\n  'piece',\n  'pig',\n  'pigeon',\n  'piggy',\n  'pile',\n  'pill',\n  'pillow',\n  'pin',\n  'pine',\n  'pineapple',\n  'pink',\n  'pint',\n  'pipe',\n  'pistol',\n  'pit',\n  'pitch',\n  'pitcher',\n  'pity',\n  'place',\n  'plain',\n  'plan',\n  'plane',\n  'plant',\n  'plate',\n  'platform',\n  'platter',\n  'play',\n  'player',\n  'playground',\n  'playhouse',\n  'playmate',\n  'plaything',\n  'pleasant',\n  'please',\n  'pleasure',\n  'plenty',\n  'plow',\n  'plug',\n  'plum',\n  'pocket',\n  'pocketbook',\n  'poem',\n  'point',\n  'poison',\n  'poke',\n  'pole',\n  'police',\n  'policeman',\n  'polish',\n  'polite',\n  'pond',\n  'ponies',\n  'pony',\n  'pool',\n  'poor',\n  'pop',\n  'popcorn',\n  'popped',\n  'porch',\n  'pork',\n  'possible',\n  'post',\n  'postage',\n  'postman',\n  'pot',\n  'potato',\n  'potatoes',\n  'pound',\n  'pour',\n  'powder',\n  'power',\n  'powerful',\n  'praise',\n  'pray',\n  'prayer',\n  'prepare',\n  'present',\n  'pretty',\n  'price',\n  'prick',\n  'prince',\n  'princess',\n  'print',\n  'prison',\n  'prize',\n  'promise',\n  'proper',\n  'protect',\n  'proud',\n  'prove',\n  'prune',\n  'public',\n  'puddle',\n  'puff',\n  'pull',\n  'pump',\n  'pumpkin',\n  'punch',\n  'punish',\n  'pup',\n  'pupil',\n  'puppy',\n  'pure',\n  'purple',\n  'purse',\n  'push',\n  'puss',\n  'pussy',\n  'pussycat',\n  'put',\n  'putting',\n  'puzzle',\n  'quack',\n  'quart',\n  'quarter',\n  'queen',\n  'queer',\n  'question',\n  'quick',\n  'quickly',\n  'quiet',\n  'quilt',\n  'quit',\n  'quite',\n  'rabbit',\n  'race',\n  'rack',\n  'radio',\n  'radish',\n  'rag',\n  'rail',\n  'railroad',\n  'railway',\n  'rain',\n  'rainbow',\n  'rainy',\n  'raise',\n  'raisin',\n  'rake',\n  'ram',\n  'ran',\n  'ranch',\n  'rang',\n  'rap',\n  'rapidly',\n  'rat',\n  'rate',\n  'rather',\n  'rattle',\n  'raw',\n  'ray',\n  'reach',\n  'read',\n  'reader',\n  'reading',\n  'ready',\n  'real',\n  'really',\n  'reap',\n  'rear',\n  'reason',\n  'rebuild',\n  'receive',\n  'recess',\n  'record',\n  'red',\n  'redbird',\n  'redbreast',\n  'refuse',\n  'reindeer',\n  'rejoice',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'rent',\n  'repair',\n  'repay',\n  'repeat',\n  'report',\n  'rest',\n  'return',\n  'review',\n  'reward',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'rid',\n  'riddle',\n  'ride',\n  'rider',\n  'riding',\n  'right',\n  'rim',\n  'ring',\n  'rip',\n  'ripe',\n  'rise',\n  'rising',\n  'river',\n  'road',\n  'roadside',\n  'roar',\n  'roast',\n  'rob',\n  'robber',\n  'robe',\n  'robin',\n  'rock',\n  'rocket',\n  'rocky',\n  'rode',\n  'roll',\n  'roller',\n  'roof',\n  'room',\n  'rooster',\n  'root',\n  'rope',\n  'rose',\n  'rosebud',\n  'rot',\n  'rotten',\n  'rough',\n  'round',\n  'route',\n  'row',\n  'rowboat',\n  'royal',\n  'rub',\n  'rubbed',\n  'rubber',\n  'rubbish',\n  'rug',\n  'rule',\n  'ruler',\n  'rumble',\n  'run',\n  'rung',\n  'runner',\n  'running',\n  'rush',\n  'rust',\n  'rusty',\n  'rye',\n  'sack',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'safety',\n  'said',\n  'sail',\n  'sailboat',\n  'sailor',\n  'saint',\n  'salad',\n  'sale',\n  'salt',\n  'same',\n  'sand',\n  'sandwich',\n  'sandy',\n  'sang',\n  'sank',\n  'sap',\n  'sash',\n  'sat',\n  'satin',\n  'satisfactory',\n  'saturday',\n  'sausage',\n  'savage',\n  'save',\n  'savings',\n  'saw',\n  'say',\n  'scab',\n  'scales',\n  'scare',\n  'scarf',\n  'school',\n  'schoolboy',\n  'schoolhouse',\n  'schoolmaster',\n  'schoolroom',\n  'scorch',\n  'score',\n  'scrap',\n  'scrape',\n  'scratch',\n  'scream',\n  'screen',\n  'screw',\n  'scrub',\n  'sea',\n  'seal',\n  'seam',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'see',\n  'seed',\n  'seeing',\n  'seek',\n  'seem',\n  'seen',\n  'seesaw',\n  'select',\n  'self',\n  'selfish',\n  'sell',\n  'send',\n  'sense',\n  'sent',\n  'sentence',\n  'separate',\n  'september',\n  'servant',\n  'serve',\n  'service',\n  'set',\n  'setting',\n  'settle',\n  'settlement',\n  'seven',\n  'seventeen',\n  'seventh',\n  'seventy',\n  'several',\n  'sew',\n  'shade',\n  'shadow',\n  'shady',\n  'shake',\n  'shaker',\n  'shaking',\n  'shall',\n  'shame',\n  \"shan't\",\n  'shape',\n  'share',\n  'sharp',\n  'shave',\n  'she',\n  \"she'd\",\n  \"she'll\",\n  \"she's\",\n  'shear',\n  'shears',\n  'shed',\n  'sheep',\n  'sheet',\n  'shelf',\n  'shell',\n  'shepherd',\n  'shine',\n  'shining',\n  'shiny',\n  'ship',\n  'shirt',\n  'shock',\n  'shoe',\n  'shoemaker',\n  'shone',\n  'shook',\n  'shoot',\n  'shop',\n  'shopping',\n  'shore',\n  'short',\n  'shot',\n  'should',\n  'shoulder',\n  \"shouldn't\",\n  'shout',\n  'shovel',\n  'show',\n  'shower',\n  'shut',\n  'shy',\n  'sick',\n  'sickness',\n  'side',\n  'sidewalk',\n  'sideways',\n  'sigh',\n  'sight',\n  'sign',\n  'silence',\n  'silent',\n  'silk',\n  'sill',\n  'silly',\n  'silver',\n  'simple',\n  'sin',\n  'since',\n  'sing',\n  'singer',\n  'single',\n  'sink',\n  'sip',\n  'sir',\n  'sis',\n  'sissy',\n  'sister',\n  'sit',\n  'sitting',\n  'six',\n  'sixteen',\n  'sixth',\n  'sixty',\n  'size',\n  'skate',\n  'skater',\n  'ski',\n  'skin',\n  'skip',\n  'skirt',\n  'sky',\n  'slam',\n  'slap',\n  'slate',\n  'slave',\n  'sled',\n  'sleep',\n  'sleepy',\n  'sleeve',\n  'sleigh',\n  'slept',\n  'slice',\n  'slid',\n  'slide',\n  'sling',\n  'slip',\n  'slipped',\n  'slipper',\n  'slippery',\n  'slit',\n  'slow',\n  'slowly',\n  'sly',\n  'smack',\n  'small',\n  'smart',\n  'smell',\n  'smile',\n  'smoke',\n  'smooth',\n  'snail',\n  'snake',\n  'snap',\n  'snapping',\n  'sneeze',\n  'snow',\n  'snowball',\n  'snowflake',\n  'snowy',\n  'snuff',\n  'snug',\n  'so',\n  'soak',\n  'soap',\n  'sob',\n  'socks',\n  'sod',\n  'soda',\n  'sofa',\n  'soft',\n  'soil',\n  'sold',\n  'soldier',\n  'sole',\n  'some',\n  'somebody',\n  'somehow',\n  'someone',\n  'something',\n  'sometime',\n  'sometimes',\n  'somewhere',\n  'son',\n  'song',\n  'soon',\n  'sore',\n  'sorrow',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'sour',\n  'south',\n  'southern',\n  'space',\n  'spade',\n  'spank',\n  'sparrow',\n  'speak',\n  'speaker',\n  'spear',\n  'speech',\n  'speed',\n  'spell',\n  'spelling',\n  'spend',\n  'spent',\n  'spider',\n  'spike',\n  'spill',\n  'spin',\n  'spinach',\n  'spirit',\n  'spit',\n  'splash',\n  'spoil',\n  'spoke',\n  'spook',\n  'spoon',\n  'sport',\n  'spot',\n  'spread',\n  'spring',\n  'springtime',\n  'sprinkle',\n  'square',\n  'squash',\n  'squeak',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stack',\n  'stage',\n  'stair',\n  'stall',\n  'stamp',\n  'stand',\n  'star',\n  'stare',\n  'start',\n  'starve',\n  'state',\n  'states',\n  'station',\n  'stay',\n  'steak',\n  'steal',\n  'steam',\n  'steamboat',\n  'steamer',\n  'steel',\n  'steep',\n  'steeple',\n  'steer',\n  'stem',\n  'step',\n  'stepping',\n  'stick',\n  'sticky',\n  'stiff',\n  'still',\n  'stillness',\n  'sting',\n  'stir',\n  'stitch',\n  'stock',\n  'stocking',\n  'stole',\n  'stone',\n  'stood',\n  'stool',\n  'stoop',\n  'stop',\n  'stopped',\n  'stopping',\n  'store',\n  'stories',\n  'stork',\n  'storm',\n  'stormy',\n  'story',\n  'stove',\n  'straight',\n  'strange',\n  'stranger',\n  'strap',\n  'straw',\n  'strawberry',\n  'stream',\n  'street',\n  'stretch',\n  'string',\n  'strip',\n  'stripes',\n  'strong',\n  'stuck',\n  'study',\n  'stuff',\n  'stump',\n  'stung',\n  'subject',\n  'such',\n  'suck',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suit',\n  'sum',\n  'summer',\n  'sun',\n  'sunday',\n  'sunflower',\n  'sung',\n  'sunk',\n  'sunlight',\n  'sunny',\n  'sunrise',\n  'sunset',\n  'sunshine',\n  'supper',\n  'suppose',\n  'sure',\n  'surely',\n  'surface',\n  'surprise',\n  'swallow',\n  'swam',\n  'swamp',\n  'swan',\n  'swat',\n  'swear',\n  'sweat',\n  'sweater',\n  'sweep',\n  'sweet',\n  'sweetheart',\n  'sweetness',\n  'swell',\n  'swept',\n  'swift',\n  'swim',\n  'swimming',\n  'swing',\n  'switch',\n  'sword',\n  'swore',\n  'table',\n  'tablecloth',\n  'tablespoon',\n  'tablet',\n  'tack',\n  'tag',\n  'tail',\n  'tailor',\n  'take',\n  'taken',\n  'taking',\n  'tale',\n  'talk',\n  'talker',\n  'tall',\n  'tame',\n  'tan',\n  'tank',\n  'tap',\n  'tape',\n  'tar',\n  'tardy',\n  'task',\n  'taste',\n  'taught',\n  'tax',\n  'tea',\n  'teach',\n  'teacher',\n  'team',\n  'tear',\n  'tease',\n  'teaspoon',\n  'teeth',\n  'telephone',\n  'tell',\n  'temper',\n  'ten',\n  'tennis',\n  'tent',\n  'term',\n  'terrible',\n  'test',\n  'than',\n  'thank',\n  'thankful',\n  'thanks',\n  'thanksgiving',\n  'that',\n  \"that's\",\n  'the',\n  'theater',\n  'thee',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  \"they'd\",\n  \"they'll\",\n  \"they're\",\n  \"they've\",\n  'thick',\n  'thief',\n  'thimble',\n  'thin',\n  'thing',\n  'think',\n  'third',\n  'thirsty',\n  'thirteen',\n  'thirty',\n  'this',\n  'thorn',\n  'those',\n  'though',\n  'thought',\n  'thousand',\n  'thread',\n  'three',\n  'threw',\n  'throat',\n  'throne',\n  'through',\n  'throw',\n  'thrown',\n  'thumb',\n  'thunder',\n  'thursday',\n  'thy',\n  'tick',\n  'ticket',\n  'tickle',\n  'tie',\n  'tiger',\n  'tight',\n  'till',\n  'time',\n  'tin',\n  'tinkle',\n  'tiny',\n  'tip',\n  'tiptoe',\n  'tire',\n  'tired',\n  'title',\n  'to',\n  'toad',\n  'toadstool',\n  'toast',\n  'tobacco',\n  'today',\n  'toe',\n  'together',\n  'toilet',\n  'told',\n  'tomato',\n  'tomorrow',\n  'ton',\n  'tone',\n  'tongue',\n  'tonight',\n  'too',\n  'took',\n  'tool',\n  'toot',\n  'tooth',\n  'toothbrush',\n  'toothpick',\n  'top',\n  'tore',\n  'torn',\n  'toss',\n  'touch',\n  'tow',\n  'toward',\n  'towards',\n  'towel',\n  'tower',\n  'town',\n  'toy',\n  'trace',\n  'track',\n  'trade',\n  'train',\n  'tramp',\n  'trap',\n  'tray',\n  'treasure',\n  'treat',\n  'tree',\n  'trick',\n  'tricycle',\n  'tried',\n  'trim',\n  'trip',\n  'trolley',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trunk',\n  'trust',\n  'truth',\n  'try',\n  'tub',\n  'tuesday',\n  'tug',\n  'tulip',\n  'tumble',\n  'tune',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twig',\n  'twin',\n  'two',\n  'ugly',\n  'umbrella',\n  'uncle',\n  'under',\n  'understand',\n  'underwear',\n  'undress',\n  'unfair',\n  'unfinished',\n  'unfold',\n  'unfriendly',\n  'unhappy',\n  'unhurt',\n  'uniform',\n  'united',\n  'unkind',\n  'unknown',\n  'unless',\n  'unpleasant',\n  'until',\n  'unwilling',\n  'up',\n  'upon',\n  'upper',\n  'upset',\n  'upside',\n  'upstairs',\n  'uptown',\n  'upward',\n  'us',\n  'use',\n  'used',\n  'useful',\n  'valentine',\n  'valley',\n  'valuable',\n  'value',\n  'vase',\n  'vegetable',\n  'velvet',\n  'very',\n  'vessel',\n  'victory',\n  'view',\n  'village',\n  'vine',\n  'violet',\n  'visit',\n  'visitor',\n  'voice',\n  'vote',\n  'wag',\n  'wagon',\n  'waist',\n  'wait',\n  'wake',\n  'waken',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'war',\n  'warm',\n  'warn',\n  'was',\n  'wash',\n  'washer',\n  'washtub',\n  \"wasn't\",\n  'waste',\n  'watch',\n  'watchman',\n  'water',\n  'watermelon',\n  'waterproof',\n  'wave',\n  'wax',\n  'way',\n  'wayside',\n  'we',\n  \"we'd\",\n  \"we'll\",\n  \"we're\",\n  \"we've\",\n  'weak',\n  'weaken',\n  'weakness',\n  'wealth',\n  'weapon',\n  'wear',\n  'weary',\n  'weather',\n  'weave',\n  'web',\n  'wedding',\n  'wednesday',\n  'wee',\n  'weed',\n  'week',\n  'weep',\n  'weigh',\n  'welcome',\n  'well',\n  'went',\n  'were',\n  'west',\n  'western',\n  'wet',\n  'whale',\n  'what',\n  \"what's\",\n  'wheat',\n  'wheel',\n  'when',\n  'whenever',\n  'where',\n  'which',\n  'while',\n  'whip',\n  'whipped',\n  'whirl',\n  'whiskey',\n  'whisky',\n  'whisper',\n  'whistle',\n  'white',\n  'who',\n  \"who'd\",\n  \"who'll\",\n  \"who's\",\n  'whole',\n  'whom',\n  'whose',\n  'why',\n  'wicked',\n  'wide',\n  'wife',\n  'wiggle',\n  'wild',\n  'wildcat',\n  'will',\n  'willing',\n  'willow',\n  'win',\n  'wind',\n  'windmill',\n  'window',\n  'windy',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wipe',\n  'wire',\n  'wise',\n  'wish',\n  'wit',\n  'witch',\n  'with',\n  'without',\n  'woke',\n  'wolf',\n  'woman',\n  'women',\n  'won',\n  \"won't\",\n  'wonder',\n  'wonderful',\n  'wood',\n  'wooden',\n  'woodpecker',\n  'woods',\n  'wool',\n  'woolen',\n  'word',\n  'wore',\n  'work',\n  'worker',\n  'workman',\n  'world',\n  'worm',\n  'worn',\n  'worry',\n  'worse',\n  'worst',\n  'worth',\n  'would',\n  \"wouldn't\",\n  'wound',\n  'wove',\n  'wrap',\n  'wrapped',\n  'wreck',\n  'wren',\n  'wring',\n  'write',\n  'writing',\n  'written',\n  'wrong',\n  'wrote',\n  'wrung',\n  'yard',\n  'yarn',\n  'year',\n  'yell',\n  'yellow',\n  'yes',\n  'yesterday',\n  'yet',\n  'yolk',\n  'yonder',\n  'you',\n  \"you'd\",\n  \"you'll\",\n  \"you're\",\n  \"you've\",\n  'young',\n  'youngster',\n  'your',\n  'yours',\n  'yourself',\n  'yourselves',\n  'youth'\n]\n","export var fillers = [\n  'absolutely',\n  'actual',\n  'actually',\n  'amazing',\n  'anyway',\n  'apparently',\n  'approximately',\n  'badly',\n  'basically',\n  'begin',\n  'certainly',\n  'clearly',\n  'completely',\n  'definitely',\n  'easily',\n  'effectively',\n  'entirely',\n  'especially',\n  'essentially',\n  'exactly',\n  'extremely',\n  'fairly',\n  'frankly',\n  'frequently',\n  'fully',\n  'generally',\n  'hardly',\n  'heavily',\n  'highly',\n  'hopefully',\n  'just',\n  'largely',\n  'like',\n  'literally',\n  'maybe',\n  'might',\n  'most',\n  'mostly',\n  'much',\n  'necessarily',\n  'nicely',\n  'obviously',\n  'ok',\n  'okay',\n  'particularly',\n  'perhaps',\n  'possibly',\n  'practically',\n  'precisely',\n  'primarily',\n  'probably',\n  'quite',\n  'rather',\n  'real',\n  'really',\n  'relatively',\n  'right',\n  'seriously',\n  'significantly',\n  'simply',\n  'slightly',\n  'so',\n  'specifically',\n  'start',\n  'strongly',\n  'stuff',\n  'surely',\n  'things',\n  'too',\n  'totally',\n  'truly',\n  'try',\n  'typically',\n  'ultimately',\n  'usually',\n  'very',\n  'virtually',\n  'well',\n  'whatever',\n  'whenever',\n  'wherever',\n  'whoever',\n  'widely'\n]\n","var sentenceWeight = 1.015\nvar wordWeight = 84.6\nvar base = 206.835\n\n/**\n * @typedef {Object.<string, number>} FleschCounts\n * @property {number} sentence\n * @property {number} word\n * @property {number} syllable\n */\n\n/**\n * Given an object containing the number of words (`word`), the number of sentences (`sentence`), and the number of syllables  (`syllable`) in a document, returns the reading ease associated with the document.\n *\n * Returned values are 120 (every sentence consisting of only two one-syllable words), or lower (including negative values).\n *\n * The values have the following semantics:\n *\n * |     Score    | Semantics                                           |\n * | :----------: | :-------------------------------------------------- |\n * | 90.0 – 100.0 | Easily understood by an average 11-year-old student |\n * |  60.0 – 70.0 | Easily understood by 13- to 15-year-old students    |\n * |  0.0 – 30.0  | Best understood by university graduates             |\n *\n * Therefore we can use the following formula to approximate the average age a student would understand a document at, given score `score`:\n *\n * ```js\n * var age = 20 - Math.floor(score / 10)\n * ```\n *\n * @param {FleschCounts} counts\n * @returns {number}\n */\nexport function flesch(counts) {\n  if (!counts || !counts.sentence || !counts.word || !counts.syllable) {\n    return Number.NaN\n  }\n\n  return (\n    base -\n    sentenceWeight * (counts.word / counts.sentence) -\n    wordWeight * (counts.syllable / counts.word)\n  )\n}\n","var complexWordWeight = 100\nvar weight = 0.4\n\n/**\n * @typedef {Object.<string, number>} GunningFogCounts\n * @property {number} sentence\n * @property {number} word\n */\n\n/**\n * Given an object containing the number of words (`word`), the number of sentences (`sentence`), and the number of complex (excluding jargon, proper nouns, compound words) polysillabic (three or more syllables) words (`complexPolysillabicWord`) in a document, returns the grade level associated with the document.\n *\n * @param {GunningFogCounts} counts\n * @returns {number}\n */\nexport function gunningFog(counts) {\n  if (!counts || !counts.sentence || !counts.word) {\n    return Number.NaN\n  }\n\n  return (\n    weight *\n    (counts.word / counts.sentence +\n      complexWordWeight * ((counts.complexPolysillabicWord || 0) / counts.word))\n  )\n}\n","export var hedges = [\n  'a bit',\n  'about',\n  'actually',\n  'allege',\n  'alleged',\n  'almost',\n  'almost never',\n  'always',\n  'and all that',\n  'and so forth',\n  'apparent',\n  'apparently',\n  'appear',\n  'appear to be',\n  'appeared',\n  'appears',\n  'approximately',\n  'around',\n  'assume',\n  'assumed',\n  'assumes',\n  'assumption',\n  'at least',\n  'basically',\n  'be sure',\n  'believe',\n  'believed',\n  'believes',\n  'bunch',\n  'can',\n  'certain',\n  'certainly',\n  'clear',\n  'clearly',\n  'conceivably',\n  'consider',\n  'considered',\n  'considers',\n  'consistent with',\n  'could',\n  'couple',\n  'definite',\n  'definitely',\n  'diagnostic',\n  \"don't know\",\n  'doubt',\n  'doubtful',\n  'effectively',\n  'estimate',\n  'estimated',\n  'estimates',\n  'et cetera',\n  'evidently',\n  'fairly',\n  'few',\n  'find',\n  'finds',\n  'found',\n  'frequently',\n  'generally',\n  'guess',\n  'guessed',\n  'guesses',\n  'hopefully',\n  \"if i'm understanding you correctly\",\n  'improbable',\n  'in general',\n  'in my mind',\n  'in my opinion',\n  'in my understanding',\n  'in my view',\n  'inconclusive',\n  'indicate',\n  'kind of',\n  'largely',\n  'like',\n  'likely',\n  'little',\n  'look like',\n  'looks like',\n  'mainly',\n  'many',\n  'may',\n  'maybe',\n  'might',\n  'more or less',\n  'most',\n  'mostly',\n  'much',\n  'must',\n  'my impression',\n  'my thinking is',\n  'my understanding is',\n  'necessarily',\n  'occasionally',\n  'often',\n  'overall',\n  'partially',\n  'perhaps',\n  'possibility',\n  'possible',\n  'possibly',\n  'practically',\n  'presumable',\n  'presumably',\n  'pretty',\n  'probability',\n  'probable',\n  'probably',\n  'quite',\n  'quite clearly',\n  'rare',\n  'rarely',\n  'rather',\n  'read',\n  'really',\n  'roughly',\n  'say',\n  'says',\n  'seem',\n  'seemed',\n  'seems',\n  'seldom',\n  'several',\n  'should',\n  'so far',\n  'some',\n  'somebody',\n  'somehow',\n  'someone',\n  'something',\n  'something or other',\n  'sometimes',\n  'somewhat',\n  'somewhere',\n  'sort of',\n  'speculate',\n  'speculated',\n  'speculates',\n  'suggest',\n  'suggested',\n  'suggestive',\n  'suggests',\n  'suppose',\n  'supposed',\n  'supposedly',\n  'supposes',\n  'surely',\n  'tend',\n  'their impression',\n  'think',\n  'thinks',\n  'thought',\n  'understand',\n  'understands',\n  'understood',\n  'unlikely',\n  'unsure',\n  'usually',\n  'virtually',\n  'will',\n  'would'\n]\n","/**\n * Transform the case in `value` (`string`) to match that of `base` (`string`).\n *\n * @param {string} value\n * @param {string} base\n * @returns {string}\n */\nexport function matchCasing(value, base) {\n  let index = -1\n  let cap = false\n\n  if (base.toUpperCase() === base) {\n    return value.toUpperCase()\n  }\n\n  if (base.toLowerCase() === base) {\n    return value.toLowerCase()\n  }\n\n  while (++index < base.length) {\n    const char = base.charAt(index)\n\n    if (char.toUpperCase() !== char.toLowerCase()) {\n      const rest = base.slice(index + 1)\n      cap = char === char.toUpperCase() && rest === rest.toLowerCase()\n      break\n    }\n  }\n\n  if (cap) {\n    index = -1\n\n    while (++index < value.length) {\n      const char = value.charAt(index).toUpperCase()\n\n      if (char !== char.toLowerCase()) {\n        return (\n          value.slice(0, index) + char + value.slice(index + 1).toLowerCase()\n        )\n      }\n    }\n  }\n\n  return value\n}\n","/**\n * @typedef {string|number|boolean} MarkerParameterValue\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast-util-mdx-expression').MDXFlowExpression} MDXFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MDXTextExpression} MDXTextExpression\n * @typedef {Root|Content} Node\n * @typedef {Object.<string, MarkerParameterValue>} MarkerParameters\n *\n * @typedef Mdx1CommentNode\n * @property {'comment'} type\n * @property {string} value\n *\n * @typedef Marker\n * @property {string} name\n * @property {string} attributes\n * @property {MarkerParameters|null} parameters\n * @property {HTML|Mdx1CommentNode|MDXFlowExpression|MDXTextExpression} node\n */\n\nconst commentExpression = /\\s*([a-zA-Z\\d-]+)(\\s+([\\s\\S]*))?\\s*/\nconst esCommentExpression = new RegExp(\n  '(\\\\s*\\\\/\\\\*' + commentExpression.source + '\\\\*\\\\/\\\\s*)'\n)\nconst markerExpression = new RegExp(\n  '(\\\\s*<!--' + commentExpression.source + '-->\\\\s*)'\n)\n\n/**\n * Parse a comment marker.\n * @param {unknown} value\n * @returns {Marker|null}\n */\nexport function commentMarker(value) {\n  if (\n    isNode(value) &&\n    (value.type === 'html' ||\n      // @ts-expect-error: MDX@1\n      value.type === 'comment' ||\n      value.type === 'mdxFlowExpression' ||\n      value.type === 'mdxTextExpression')\n  ) {\n    let offset = 2\n    /** @type {RegExpMatchArray|null|undefined} */\n    let match\n\n    // @ts-expect-error: MDX@1\n    if (value.type === 'comment') {\n      // @ts-expect-error: MDX@1\n      match = value.value.match(commentExpression)\n      offset = 1\n    } else if (value.type === 'html') {\n      match = value.value.match(markerExpression)\n    } else if (\n      value.type === 'mdxFlowExpression' ||\n      value.type === 'mdxTextExpression'\n    ) {\n      match = value.value.match(esCommentExpression)\n    }\n\n    if (match && match[0].length === value.value.length) {\n      const parameters = parseParameters(match[offset + 1] || '')\n\n      if (parameters) {\n        return {\n          name: match[offset],\n          attributes: (match[offset + 2] || '').trim(),\n          parameters,\n          node: value\n        }\n      }\n    }\n  }\n\n  return null\n}\n\n/**\n * Parse `value` into an object.\n *\n * @param {string} value\n * @returns {MarkerParameters|null}\n */\nfunction parseParameters(value) {\n  /** @type {MarkerParameters} */\n  const parameters = {}\n\n  return value\n    .replace(\n      /\\s+([-\\w]+)(?:=(?:\"((?:\\\\[\\s\\S]|[^\"])+)\"|'((?:\\\\[\\s\\S]|[^'])+)'|((?:\\\\[\\s\\S]|[^\"'\\s])+)))?/gi,\n      replacer\n    )\n    .replace(/\\s+/g, '')\n    ? null\n    : parameters\n\n  /**\n   * @param {string} _\n   * @param {string} $1\n   * @param {string} $2\n   * @param {string} $3\n   * @param {string} $4\n   */\n  // eslint-disable-next-line max-params\n  function replacer(_, $1, $2, $3, $4) {\n    /** @type {MarkerParameterValue} */\n    let value = $2 || $3 || $4 || ''\n\n    if (value === 'true' || value === '') {\n      value = true\n    } else if (value === 'false') {\n      value = false\n    } else if (!Number.isNaN(Number(value))) {\n      value = Number(value)\n    }\n\n    parameters[$1] = value\n\n    return ''\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n  return Boolean(value && typeof value === 'object' && 'type' in value)\n}\n","/**\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('nlcst').Root} Root\n * @typedef {import('nlcst').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n */\n\nimport {toString} from 'nlcst-to-string'\n\nconst single = [\n  '-', // Hyphen-minus\n  '–', // En dash\n  '—', // Em dash\n  ':', // Colon\n  ';' // Semi-colon\n]\n\n/**\n * Pair delimiters.\n * From common sense, and WikiPedia:\n * <https://en.wikipedia.org/wiki/Quotation_mark>.\n *\n * @type {Record<string, string[]>}\n */\nconst pairs = {\n  ',': [','],\n  '-': ['-'],\n  '–': ['–'],\n  '—': ['—'],\n  '\"': ['\"'],\n  \"'\": [\"'\"],\n  '‘': ['’'],\n  '‚': ['’'],\n  '’': ['’', '‚'],\n  '“': ['”'],\n  '”': ['”'],\n  '„': ['”', '“'],\n  '«': ['»'],\n  '»': ['«'],\n  '‹': ['›'],\n  '›': ['‹'],\n  '(': [')'],\n  '[': [']'],\n  '{': ['}'],\n  '⟨': ['⟩'],\n  '「': ['」']\n}\n\nconst open = Object.keys(pairs)\n\n/**\n * Check if the node in `parent` at `position` is enclosed by matching\n * delimiters.\n *\n * @param {Parent} parent\n * @param {number} index\n * @returns {boolean}\n */\nexport function isLiteral(parent, index) {\n  if (!(parent && parent.children)) {\n    throw new Error('Parent must be a node')\n  }\n\n  if (index !== null && typeof index === 'object' && 'type' in index) {\n    index = parent.children.indexOf(index)\n\n    if (index === -1) {\n      throw new Error('Node must be a child of `parent`')\n    }\n  }\n\n  if (typeof index !== 'number' || Number.isNaN(index)) {\n    throw new TypeError('Index must be a number')\n  }\n\n  return Boolean(\n    (!containsWord(parent, -1, index) &&\n      siblingDelimiter(parent, index, 1, single)) ||\n      (!containsWord(parent, index, parent.children.length) &&\n        siblingDelimiter(parent, index, -1, single)) ||\n      isWrapped(parent, index)\n  )\n}\n\n/**\n * Check if the node in `parent` at `position` is enclosed by matching\n * delimiters.\n * @param {Parent} parent\n * @param {number} position\n * @returns {Node|void}\n */\nfunction isWrapped(parent, position) {\n  const previous = siblingDelimiter(parent, position, -1, open)\n\n  if (previous) {\n    return siblingDelimiter(parent, position, 1, pairs[toString(previous)])\n  }\n}\n\n/**\n * Find the previous or next delimiter before or after `position` in `parent`.\n * Returns the delimiter node when found.\n *\n * @param {Parent} parent\n * @param {number} position\n * @param {number} step\n * @param {Array.<string>} delimiters\n * @returns {Node|void}\n */\nfunction siblingDelimiter(parent, position, step, delimiters) {\n  let index = position + step\n\n  while (index > -1 && index < parent.children.length) {\n    const sibling = parent.children[index]\n\n    if (sibling.type === 'WordNode' || sibling.type === 'SourceNode') {\n      return\n    }\n\n    if (sibling.type !== 'WhiteSpaceNode') {\n      return delimiters.includes(toString(sibling)) ? sibling : undefined\n    }\n\n    index += step\n  }\n}\n\n/**\n * Check if parent contains word-nodes between `start` and `end` (both\n * excluding).\n * @param {Parent} parent\n * @param {number} start\n * @param {number} end\n * @returns {boolean|void}\n */\nfunction containsWord(parent, start, end) {\n  while (++start < end) {\n    if (parent.children[start].type === 'WordNode') {\n      return true\n    }\n  }\n}\n","/**\n * @typedef {import('nlcst').Root} Root\n * @typedef {import('nlcst').Content} Content\n * @typedef {Root|Content} Node\n *\n * @typedef {Object} NormalizeOptions\n * @property {boolean} [allowDashes=false]\n * @property {boolean} [allowApostrophes=false]\n */\n\nimport {toString} from 'nlcst-to-string'\n\n/**\n * @param {string|Node|Array.<Content>} node\n * @param {NormalizeOptions} [options={}]\n */\nexport function normalize(node, options) {\n  let value = (typeof node === 'string' ? node : toString(node))\n    .toLowerCase()\n    .replace(/’/g, \"'\")\n\n  if (!options || !options.allowDashes) {\n    value = value.replace(/-/g, '')\n  }\n\n  if (!options || !options.allowApostrophes) {\n    value = value.replace(/'/g, '')\n  }\n\n  return value\n}\n","/**\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('nlcst').Root} Root\n * @typedef {import('nlcst').Word} Word\n * @typedef {import('nlcst').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('nlcst-normalize').NormalizeOptions} NormalizeOptions\n *\n * @typedef {boolean} AllowApostrophes\n * @typedef {NormalizeOptions & {allowLiterals?: boolean}} SearchOptions\n *\n * @typedef {Array.<string>} PhrasesList\n * @typedef {Object.<string, unknown>} PhrasesMap\n *\n * @typedef {(nodes: Content[], index: number, parent: Parent, pattern: string) => void} Handler\n */\n\nimport {visit} from 'unist-util-visit'\nimport {normalize} from 'nlcst-normalize'\nimport {isLiteral} from 'nlcst-is-literal'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Node} tree\n * @param {PhrasesList|PhrasesMap} phrases\n * @param {Handler} handler\n * @param {AllowApostrophes|SearchOptions} [options=false]\n */\nexport function search(tree, phrases, handler, options) {\n  /** @type {Object.<string, Array.<string>>} */\n  const byWord = {'*': []}\n  let index = -1\n  /** @type {string} */\n  let key\n  /** @type {SearchOptions} */\n  let config\n\n  if (typeof options === 'boolean') {\n    config = options ? {allowApostrophes: true} : {}\n  } else {\n    config = options || {}\n  }\n\n  if (!tree || !tree.type) {\n    throw new Error('Expected node')\n  }\n\n  if (typeof phrases !== 'object') {\n    throw new TypeError('Expected object for phrases')\n  }\n\n  if (Array.isArray(phrases)) {\n    while (++index < phrases.length) {\n      handlePhrase(phrases[index])\n    }\n  } else {\n    for (key in phrases) {\n      if (own.call(phrases, key)) {\n        handlePhrase(key)\n      }\n    }\n  }\n\n  // Search the tree.\n  visit(tree, 'WordNode', (node, position, parent_) => {\n    const parent = /** @type {Parent} */ (parent_)\n\n    if (\n      !parent ||\n      position === null ||\n      (!config.allowLiterals && isLiteral(parent, position))\n    ) {\n      return\n    }\n\n    const word = normalize(node, config)\n    const phrases = byWord['*'].concat(\n      own.call(byWord, word) ? byWord[word] : []\n    )\n    let index = -1\n\n    while (++index < phrases.length) {\n      const result = test(phrases[index], position, parent)\n\n      if (result) {\n        handler(result, position, parent, phrases[index])\n      }\n    }\n  })\n\n  /**\n   * Test a phrase.\n   *\n   * @param {string} phrase\n   * @param {number} position\n   * @param {Parent} parent\n   */\n  function test(phrase, position, parent) {\n    const siblings = parent.children\n    const start = position\n    const expressions = phrase.split(' ').slice(1)\n    let index = -1\n\n    // Move one position forward.\n    position++\n\n    // Iterate over `expressions`.\n    while (++index < expressions.length) {\n      // Allow joining white-space.\n      while (position < siblings.length) {\n        if (siblings[position].type !== 'WhiteSpaceNode') break\n        position++\n      }\n\n      // Exit if there are no nodes left, if the current node is not a word, or\n      // if the current word does not match the search for value.\n      if (\n        !siblings[position] ||\n        siblings[position].type !== 'WordNode' ||\n        (expressions[index] !== '*' &&\n          normalize(expressions[index], config) !==\n            normalize(siblings[position], config))\n      ) {\n        return\n      }\n\n      position++\n    }\n\n    return siblings.slice(start, position)\n  }\n\n  /**\n   * Handle a phrase.\n   *\n   * @param {string} phrase\n   */\n  function handlePhrase(phrase) {\n    const firstWord = normalize(phrase.split(' ', 1)[0], config)\n\n    if (own.call(byWord, firstWord)) {\n      byWord[firstWord].push(phrase)\n    } else {\n      byWord[firstWord] = [phrase]\n    }\n  }\n}\n","/**\n * @typedef {import('nlcst').Content} Content\n * @typedef {import('nlcst').Root} Root\n */\n\n/**\n * Stringify one nlcst node or list of nodes.\n *\n * @param {Root|Content|Content[]} node\n * @param {string} [separator='']\n * @returns {string}\n */\nexport function toString(node, separator = '') {\n  let index = -1\n\n  if (!node || (!Array.isArray(node) && !node.type)) {\n    throw new Error('Expected node, not `' + node + '`')\n  }\n\n  // @ts-expect-error Looks like a literal.\n  if (typeof node.value === 'string') return node.value\n\n  /** @type {Array.<Content|Root>} */\n  // @ts-expect-error Looks like a list of nodes or parent.\n  const children = (Array.isArray(node) ? node : node.children) || []\n\n  // Shortcut: This is pretty common, and a small performance win.\n  if (children.length === 1 && 'value' in children[0]) {\n    return children[0].value\n  }\n\n  /** @type {Array.<string>} */\n  const values = []\n\n  while (++index < children.length) {\n    values[index] = toString(children[index], separator)\n  }\n\n  return values.join(separator)\n}\n","import {ParseLatin} from 'parse-latin'\nimport toString from 'nlcst-to-string'\nimport visitChildren from 'unist-util-visit-children'\nimport modifyChildren from 'unist-util-modify-children'\n\n// Transform English natural language into an NLCST-tree.\nexport class ParseEnglish extends ParseLatin {}\n\n// Add modifiers to `parser`.\nParseEnglish.prototype.tokenizeSentencePlugins = [\n  visitChildren(mergeEnglishElisionExceptions)\n].concat(ParseEnglish.prototype.tokenizeSentencePlugins)\n\nParseEnglish.prototype.tokenizeParagraphPlugins = [\n  modifyChildren(mergeEnglishPrefixExceptions)\n].concat(ParseEnglish.prototype.tokenizeParagraphPlugins)\n\n// Match a blacklisted (case-insensitive) abbreviation which when followed by a\n// full-stop does not depict a sentence terminal marker.\nvar abbreviations = new RegExp(\n  '^(' +\n    // Business Abbreviations: Incorporation, Limited company.\n    'inc|ltd|' +\n    // English unit abbreviations:\n    // -   Note that *Metric abbreviations* do not use full stops.\n    // -   Note that some common plurals are included, although units should not\n    //     be pluralised.\n    //\n    // barrel, cubic, dozen, fluid (ounce), foot, gallon, grain, gross,\n    // inch, karat / knot, pound, mile, ounce, pint, quart, square,\n    // tablespoon, teaspoon, yard.\n    'bbls?|cu|doz|fl|ft|gal|gr|gro|in|kt|lbs?|mi|oz|pt|qt|sq|tbsp|' +\n    'tsp|yds?|' +\n    // Abbreviations of time references:\n    // seconds, minutes, hours, Monday, Tuesday, *, Wednesday, Thursday, *,\n    // Friday, Saturday, Sunday, January, Februari, March, April, June, July,\n    // August, September, *, October, November, December.\n    'sec|min|hr|mon|tue|tues|wed|thu|thurs|fri|sat|sun|jan|feb|mar|' +\n    'apr|jun|jul|aug|sep|sept|oct|nov|dec' +\n    ')$'\n  // Note: There's no `i` flag here because the value to test against should be\n  // all lowercase!\n)\n\n// Match a blacklisted (case-sensitive) abbreviation which when followed by a\n// full-stop does not depict a sentence terminal marker.\nvar abbreviationsSensitive = new RegExp(\n  '^(' +\n    // Social:\n    // Mister, Mistress, Mistress, woman, Mademoiselle, Madame, Monsieur,\n    // Misters, Mesdames, Junior, Senior, *.\n    'Mr|Mrs|Miss|Ms|Mss|Mses|Mlle|Mme|M|Messrs|Mmes|Jr|Sr|Snr|' +\n    // Rank and academic:\n    // Doctor, Magister, Attorney, Profesor, Honourable, Reverend, Father,\n    // Monsignor, Sister, Brother, Saint, President, Superintendent,\n    // Representative, Senator.\n    'Dr|Mgr|Atty|Prof|Hon|Rev|Fr|Msgr|Sr|Br|St|Pres|Supt|Rep|Sen|' +\n    // Rank and military:\n    // Governor, Ambassador, Treasurer, Secretary, Admiral, Brigadier, General,\n    // Commander, Colonel, Captain, Lieutenant, Major, Sergeant, Petty Officer,\n    // Warrant Officer, Purple Heart.\n    'Gov|Amb|Treas|Sec|Amd|Brig|Gen|Cdr|Col|Capt|Lt|Maj|Sgt|Po|Wo|Ph|' +\n    // Common geographical abbreviations:\n    // Avenue, Boulevard, Mountain, Road, Building, National, *, Route, *,\n    // County, Park, Square, Drive, Port or Point, Street or State, Fort,\n    // Peninsula, Territory, Highway, Freeway, Parkway.\n    'Ave|Blvd|Mt|Rd|Bldgs?|Nat|Natl|Rt|Rte|Co|Pk|Sq|Dr|Pt|St|' +\n    'Ft|Pen|Terr|Hwy|Fwy|Pkwy|' +\n    // American state abbreviations:\n    // Alabama, Arizona, Arkansas, California, *, Colorado, *,\n    // Connecticut, Delaware, Florida, Georgia, Idaho, *, Illinois, Indiana,\n    // Iowa, Kansas, *, Kentucky, *, Louisiana, Maine, Maryland, Massachusetts,\n    // Michigan, Minnesota, Mississippi, Missouri, Montana, Nebraska, *, Nevada,\n    // Mexico, Dakota, Oklahoma, *, Oregon, Pennsylvania, *, *, Tennessee,\n    // Texas, Utah, Vermont, Virginia, Washington, Wisconsin, *, Wyoming.\n    'Ala|Ariz|Ark|Cal|Calif|Col|Colo|Conn|Del|Fla|Ga|Ida|Id|Ill|Ind|' +\n    'Ia|Kan|Kans|Ken|Ky|La|Me|Md|Mass|Mich|Minn|Miss|Mo|Mont|Neb|' +\n    'Nebr|Nev|Mex|Dak|Okla|Ok|Ore|Penna|Penn|Pa|Tenn|Tex|Ut|Vt|Va|' +\n    'Wash|Wis|Wisc|Wyo|' +\n    // Canadian province abbreviations:\n    // Alberta, Manitoba, Ontario, Quebec, *, Saskatchewan, Yukon Territory.\n    'Alta|Man|Ont|Qu\\u00E9|Que|Sask|Yuk|' +\n    // English county abbreviations:\n    // Bedfordshire, Berkshire, Buckinghamshire, Cambridgeshire, Cheshire,\n    // Cornwall, Cumberland, Derbyshire, *, Devon, Dorset, Durham,\n    // Gloucestershire, Hampshire, Herefordshire, *, Hertfordshire,\n    // Huntingdonshire, Lancashire, Leicestershire, Lincolnshire, Middlesex,\n    // *, *, Norfolk, Northamptonshire, Northumberland, *, Nottinghamshire,\n    // Oxfordshire, Rutland, Shropshire, Somerset, Staffordshire, *, Suffolk,\n    // Surrey, Sussex, *, Warwickshire, *, *, Westmorland, Wiltshire,\n    // Worcestershire, Yorkshire.\n    'Beds|Berks|Bucks|Cambs|Ches|Corn|Cumb|Derbys|Derbs|Dev|Dor|Dur|' +\n    'Glos|Hants|Here|Heref|Herts|Hunts|Lancs|Leics|Lincs|Mx|Middx|Mddx|' +\n    'Norf|Northants|Northumb|Northd|Notts|Oxon|Rut|Shrops|Salop|Som|' +\n    'Staffs|Staf|Suff|Sy|Sx|Ssx|Warks|War|Warw|Westm|Wilts|Worcs|Yorks' +\n    ')$'\n)\n\n// Match a blacklisted word which when followed by an apostrophe depicts\n// elision.\nvar elisionPrefix = new RegExp(\n  '^(' +\n    // Includes: - o' > of; - ol' > old.\n    'o|ol' +\n    ')$'\n)\n\n// Match a blacklisted word which when preceded by an apostrophe depicts\n// elision.\nvar elisionAffix = new RegExp(\n  '^(' +\n    // Includes: 'im > him; 'er > her; 'em > them. 'cause > because.\n    'im|er|em|cause|' +\n    // Includes: 'twas > it was; 'tis > it is; 'twere > it were.\n    'twas|tis|twere|' +\n    // Matches groups of year, optionally followed by an `s`.\n    '\\\\d\\\\ds?' +\n    ')$'\n)\n\n// Match one apostrophe.\nvar apostrophe = /^['\\u2019]$/\n\n// Merge a sentence into its next sentence, when the sentence ends with a\n// certain word.\nfunction mergeEnglishPrefixExceptions(sentence, index, paragraph) {\n  var children = sentence.children\n  var period = children[children.length - 1]\n  var word = children[children.length - 2]\n  var value\n  var next\n\n  if (period && toString(period) === '.' && word && word.type === 'WordNode') {\n    value = toString(word)\n\n    if (\n      abbreviations.test(lower(value)) ||\n      abbreviationsSensitive.test(value)\n    ) {\n      // Merge period into abbreviation.\n      word.children.push(period)\n      children.pop()\n\n      if (period.position && word.position) {\n        word.position.end = period.position.end\n      }\n\n      // Merge sentences.\n      next = paragraph.children[index + 1]\n\n      if (next) {\n        sentence.children = children.concat(next.children)\n\n        paragraph.children.splice(index + 1, 1)\n\n        // Update position.\n        if (next.position && sentence.position) {\n          sentence.position.end = next.position.end\n        }\n\n        // Next, iterate over the current node again.\n        return index - 1\n      }\n    }\n  }\n}\n\n// Merge an apostrophe depicting elision into its surrounding word.\nfunction mergeEnglishElisionExceptions(child, index, sentence) {\n  var siblings\n  var sibling\n  var other\n  var length\n  var value\n\n  if (child.type !== 'PunctuationNode' && child.type !== 'SymbolNode') {\n    return\n  }\n\n  siblings = sentence.children\n  length = siblings.length\n  value = toString(child)\n\n  // Match abbreviation of `with`, `w/`\n  if (value === '/') {\n    sibling = siblings[index - 1]\n\n    if (sibling && lower(toString(sibling)) === 'w') {\n      // Remove the slash from the sentence.\n      siblings.splice(index, 1)\n\n      // Append the slash into the children of the previous node.\n      sibling.children.push(child)\n\n      // Update position.\n      if (sibling.position && child.position) {\n        sibling.position.end = child.position.end\n      }\n    }\n  } else if (apostrophe.test(value)) {\n    // If two preceding (the first white space and the second a word), and one\n    // following (white space) nodes exist...\n    sibling = siblings[index - 1]\n\n    if (\n      index > 2 &&\n      index < length - 1 &&\n      sibling.type === 'WordNode' &&\n      siblings[index - 2].type === 'WhiteSpaceNode' &&\n      siblings[index + 1].type === 'WhiteSpaceNode' &&\n      elisionPrefix.test(lower(toString(sibling)))\n    ) {\n      // Remove the apostrophe from the sentence.\n      siblings.splice(index, 1)\n\n      // Append the apostrophe into the children of node.\n      sibling.children.push(child)\n\n      // Update position.\n      if (sibling.position && child.position) {\n        sibling.position.end = child.position.end\n      }\n\n      return\n    }\n\n    // If a following word exists, and the preceding node is not a word...\n    if (\n      index !== length - 1 &&\n      siblings[index + 1].type === 'WordNode' &&\n      (index === 0 || siblings[index - 1].type !== 'WordNode')\n    ) {\n      sibling = siblings[index + 1]\n      value = lower(toString(sibling))\n\n      if (elisionAffix.test(value)) {\n        // Remove the apostrophe from the sentence.\n        siblings.splice(index, 1)\n\n        // Prepend the apostrophe into the children of node.\n        sibling.children = [child].concat(sibling.children)\n\n        // Update position.\n        if (sibling.position && child.position) {\n          sibling.position.start = child.position.start\n        }\n        // If both preceded and followed by an apostrophe, and the word is\n        // `n`...\n      } else if (\n        value === 'n' &&\n        index < length - 2 &&\n        apostrophe.test(toString(siblings[index + 2]))\n      ) {\n        other = siblings[index + 2]\n\n        // Remove the apostrophe from the sentence.\n        siblings.splice(index, 1)\n        siblings.splice(index + 1, 1)\n\n        // Prepend the preceding apostrophe and append the into the following\n        // apostrophe into the children of node.\n        sibling.children = [child].concat(sibling.children, other)\n\n        // Update position.\n        if (sibling.position) {\n          if (child.position) {\n            sibling.position.start = child.position.start\n          }\n\n          if (other.position) {\n            sibling.position.end = other.position.end\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction lower(value) {\n  return value.toLowerCase()\n}\n","// This module is generated by `script/build-expressions.js`.\nexport var affixSymbol = /^([!\"').?\\u00BB\\u0F3B\\u0F3D\\u169C\\u2019\\u201D\\u2026\\u203A\\u203D\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21\\u2E23\\u2E25\\u2E27\\u2E29\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3E\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63\\]}])\\1*$/\nexport var newLine = /^[ \\t]*((\\r?\\n|\\r)[\\t ]*)+$/\nexport var newLineMulti = /^[ \\t]*((\\r?\\n|\\r)[\\t ]*){2,}$/\nexport var terminalMarker = /^([!.?\\u2026\\u203D]+)$/\nexport var wordSymbolInner = /^([&'\\-.:=?@\\u00AD\\u00B7\\u2010\\u2011\\u2019\\u2027]|_+)$/\nexport var numerical = /^(?:[\\d\\u00B2\\u00B3\\u00B9\\u00BC-\\u00BE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D58-\\u0D5E\\u0D66-\\u0D78\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]|\\uD800[\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD801[\\uDCA0-\\uDCA9]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE48\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDF1D-\\uDF26\\uDF51-\\uDF54\\uDFC5-\\uDFCB]|\\uD804[\\uDC52-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDDE1-\\uDDF4\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF3B]|\\uD806[\\uDCE0-\\uDCF2\\uDD50-\\uDD59]|\\uD807[\\uDC50-\\uDC6C\\uDD50-\\uDD59\\uDDA0-\\uDDA9\\uDFC0-\\uDFD4]|\\uD809[\\uDC00-\\uDC6E]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59\\uDF5B-\\uDF61]|\\uD81B[\\uDE80-\\uDE96]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDFCE-\\uDFFF]|\\uD838[\\uDD40-\\uDD49\\uDEF0-\\uDEF9]|\\uD83A[\\uDCC7-\\uDCCF\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9])+$/\nexport var digitStart = /^\\d/\nexport var lowerInitial = /^(?:[a-z\\u00B5\\u00DF-\\u00F6\\u00F8-\\u00FF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0560-\\u0588\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7AF\\uA7B5\\uA7B7\\uA7B9\\uA7BB\\uA7BD\\uA7BF\\uA7C3\\uA7C8\\uA7CA\\uA7F6\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]|\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD81B[\\uDE60-\\uDE7F]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD83A[\\uDD22-\\uDD43])/\nexport var surrogates = /[\\uD800-\\uDFFF]/\nexport var punctuation = /[!\"'-),-/:;?[-\\]_{}\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u201F\\u2022-\\u2027\\u2032-\\u203A\\u203C-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/\nexport var word = /[\\dA-Za-z\\u00AA\\u00B2\\u00B3\\u00B5\\u00B9\\u00BA\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D63\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F33\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1AC0\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u20D0-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA672\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA827\\uA82C\\uA830-\\uA835\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD27\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEAB\\uDEAC\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC52-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD47\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDCE-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E-\\uDC61\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD43\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3\\uDFE4\\uDFF0\\uDFF1]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]|\\uDB40[\\uDD00-\\uDDEF]/\nexport var whiteSpace = /[\\t-\\r \\u0085\\u00A0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/\n","import {mergeInitialWordSymbol} from './plugin/merge-initial-word-symbol.js'\nimport {mergeFinalWordSymbol} from './plugin/merge-final-word-symbol.js'\nimport {mergeInnerWordSymbol} from './plugin/merge-inner-word-symbol.js'\nimport {mergeInnerWordSlash} from './plugin/merge-inner-word-slash.js'\nimport {mergeInitialisms} from './plugin/merge-initialisms.js'\nimport {mergeWords} from './plugin/merge-words.js'\nimport {patchPosition} from './plugin/patch-position.js'\nimport {mergeNonWordSentences} from './plugin/merge-non-word-sentences.js'\nimport {mergeAffixSymbol} from './plugin/merge-affix-symbol.js'\nimport {mergeInitialLowerCaseLetterSentences} from './plugin/merge-initial-lower-case-letter-sentences.js'\nimport {mergeInitialDigitSentences} from './plugin/merge-initial-digit-sentences.js'\nimport {mergePrefixExceptions} from './plugin/merge-prefix-exceptions.js'\nimport {mergeAffixExceptions} from './plugin/merge-affix-exceptions.js'\nimport {mergeRemainingFullStops} from './plugin/merge-remaining-full-stops.js'\nimport {makeInitialWhiteSpaceSiblings} from './plugin/make-initial-white-space-siblings.js'\nimport {makeFinalWhiteSpaceSiblings} from './plugin/make-final-white-space-siblings.js'\nimport {breakImplicitSentences} from './plugin/break-implicit-sentences.js'\nimport {removeEmptyNodes} from './plugin/remove-empty-nodes.js'\nimport {parserFactory} from './parser.js'\nimport {\n  newLine,\n  punctuation,\n  surrogates,\n  terminalMarker,\n  whiteSpace,\n  word\n} from './expressions.js'\n\n// PARSE LATIN\n\n// Transform Latin-script natural language into an NLCST-tree.\nexport class ParseLatin {\n  constructor(doc, file) {\n    var value = file || doc\n    this.doc = value ? String(value) : null\n  }\n\n  // Run transform plugins for `key` on `nodes`.\n  run(key, nodes) {\n    var wareKey = key + 'Plugins'\n    var plugins = this[wareKey]\n    var index = -1\n\n    if (plugins) {\n      while (plugins[++index]) {\n        plugins[index](nodes)\n      }\n    }\n\n    return nodes\n  }\n\n  // Easy access to the document parser. This additionally supports retext-style\n  // invocation: where an instance is created for each file, and the file is given\n  // on construction.\n  parse(value) {\n    return this.tokenizeRoot(value || this.doc)\n  }\n\n  // Transform a `value` into a list of `NLCSTNode`s.\n  tokenize(value) {\n    var parser = this\n    var tokens = []\n    var index = 0\n    var offset = 0\n    var line = 1\n    var column = 1\n    var character\n    var queue\n    var previous\n    var left\n    var right\n    var eater\n\n    if (value === null || value === undefined) {\n      value = ''\n    } else if (value instanceof String) {\n      value = value.toString()\n    }\n\n    if (typeof value !== 'string') {\n      // Return the given nodes if this is either an empty array, or an array with\n      // a node as a first child.\n      if ('length' in value && (!value[0] || value[0].type)) {\n        return value\n      }\n\n      throw new Error(\n        \"Illegal invocation: '\" +\n          value +\n          \"' is not a valid argument for 'ParseLatin'\"\n      )\n    }\n\n    if (!value) {\n      return tokens\n    }\n\n    // Eat mechanism to use.\n    eater = this.position ? eat : noPositionEat\n\n    previous = ''\n    queue = ''\n\n    while (index < value.length) {\n      character = value.charAt(index)\n\n      if (whiteSpace.test(character)) {\n        right = 'WhiteSpace'\n      } else if (punctuation.test(character)) {\n        right = 'Punctuation'\n      } else if (word.test(character)) {\n        right = 'Word'\n      } else {\n        right = 'Symbol'\n      }\n\n      tick()\n\n      previous = character\n      character = ''\n      left = right\n      right = null\n\n      index++\n    }\n\n    tick()\n\n    return tokens\n\n    // Check one character.\n    function tick() {\n      if (\n        left === right &&\n        (left === 'Word' ||\n          left === 'WhiteSpace' ||\n          character === previous ||\n          surrogates.test(character))\n      ) {\n        queue += character\n      } else {\n        // Flush the previous queue.\n        if (queue) {\n          parser['tokenize' + left](queue, eater)\n        }\n\n        queue = character\n      }\n    }\n\n    // Remove `subvalue` from `value`.\n    // Expects `subvalue` to be at the start from `value`, and applies no\n    // validation.\n    function eat(subvalue) {\n      var pos = position()\n\n      update(subvalue)\n\n      return apply\n\n      // Add the given arguments, add `position` to the returned node, and return\n      // the node.\n      function apply(...input) {\n        return pos(add(...input))\n      }\n    }\n\n    // Remove `subvalue` from `value`.\n    // Does not patch positional information.\n    function noPositionEat() {\n      return add\n    }\n\n    // Add mechanism.\n    function add(node, parent) {\n      if (parent) {\n        parent.children.push(node)\n      } else {\n        tokens.push(node)\n      }\n\n      return node\n    }\n\n    // Mark position and patch `node.position`.\n    function position() {\n      var before = now()\n\n      // Add the position to a node.\n      function patch(node) {\n        node.position = new Position(before)\n\n        return node\n      }\n\n      return patch\n    }\n\n    // Update line and column based on `value`.\n    function update(subvalue) {\n      var character = -1\n      var lastIndex = -1\n\n      offset += subvalue.length\n\n      while (++character < subvalue.length) {\n        if (subvalue.charAt(character) === '\\n') {\n          lastIndex = character\n          line++\n        }\n      }\n\n      if (lastIndex < 0) {\n        column += subvalue.length\n      } else {\n        column = subvalue.length - lastIndex\n      }\n    }\n\n    // Store position information for a node.\n    function Position(start) {\n      this.start = start\n      this.end = now()\n    }\n\n    // Get the current position.\n    function now() {\n      return {line, column, offset}\n    }\n  }\n}\n\n// Default position.\nParseLatin.prototype.position = true\n\n// Create text nodes.\nParseLatin.prototype.tokenizeSymbol = createTextFactory('Symbol')\nParseLatin.prototype.tokenizeWhiteSpace = createTextFactory('WhiteSpace')\nParseLatin.prototype.tokenizePunctuation = createTextFactory('Punctuation')\nParseLatin.prototype.tokenizeSource = createTextFactory('Source')\nParseLatin.prototype.tokenizeText = createTextFactory('Text')\n\n// Inject `plugins` to modifiy the result of the method at `key` on the operated\n// on context.\nParseLatin.prototype.use = useFactory(function (context, key, plugins) {\n  context[key] = context[key].concat(plugins)\n})\n\n// Inject `plugins` to modifiy the result of the method at `key` on the operated\n// on context, before any other.\nParseLatin.prototype.useFirst = useFactory(function (context, key, plugins) {\n  context[key] = plugins.concat(context[key])\n})\n\n// PARENT NODES\n//\n// All these nodes are `pluggable`: they come with a `use` method which accepts\n// a plugin (`function(NLCSTNode)`).\n// Every time one of these methods are called, the plugin is invoked with the\n// node, allowing for easy modification.\n//\n// In fact, the internal transformation from `tokenize` (a list of words, white\n// space, punctuation, and symbols) to `tokenizeRoot` (an NLCST tree), is also\n// implemented through this mechanism.\n\n// Create a `WordNode` with its children set to a single `TextNode`, its value\n// set to the given `value`.\npluggable(ParseLatin, 'tokenizeWord', function (value, eat) {\n  var add = (eat || noopEat)('')\n  var parent = {type: 'WordNode', children: []}\n\n  this.tokenizeText(value, eat, parent)\n\n  return add(parent)\n})\n\n// Create a `SentenceNode` with its children set to `Node`s, their values set\n// to the tokenized given `value`.\n//\n// Unless plugins add new nodes, the sentence is populated by `WordNode`s,\n// `SymbolNode`s, `PunctuationNode`s, and `WhiteSpaceNode`s.\npluggable(\n  ParseLatin,\n  'tokenizeSentence',\n  parserFactory({type: 'SentenceNode', tokenizer: 'tokenize'})\n)\n\n// Create a `ParagraphNode` with its children set to `Node`s, their values set\n// to the tokenized given `value`.\n//\n// Unless plugins add new nodes, the paragraph is populated by `SentenceNode`s\n// and `WhiteSpaceNode`s.\npluggable(\n  ParseLatin,\n  'tokenizeParagraph',\n  parserFactory({\n    type: 'ParagraphNode',\n    delimiter: terminalMarker,\n    delimiterType: 'PunctuationNode',\n    tokenizer: 'tokenizeSentence'\n  })\n)\n\n// Create a `RootNode` with its children set to `Node`s, their values set to the\n// tokenized given `value`.\npluggable(\n  ParseLatin,\n  'tokenizeRoot',\n  parserFactory({\n    type: 'RootNode',\n    delimiter: newLine,\n    delimiterType: 'WhiteSpaceNode',\n    tokenizer: 'tokenizeParagraph'\n  })\n)\n\n// PLUGINS\n\nParseLatin.prototype.use('tokenizeSentence', [\n  mergeInitialWordSymbol,\n  mergeFinalWordSymbol,\n  mergeInnerWordSymbol,\n  mergeInnerWordSlash,\n  mergeInitialisms,\n  mergeWords,\n  patchPosition\n])\n\nParseLatin.prototype.use('tokenizeParagraph', [\n  mergeNonWordSentences,\n  mergeAffixSymbol,\n  mergeInitialLowerCaseLetterSentences,\n  mergeInitialDigitSentences,\n  mergePrefixExceptions,\n  mergeAffixExceptions,\n  mergeRemainingFullStops,\n  makeInitialWhiteSpaceSiblings,\n  makeFinalWhiteSpaceSiblings,\n  breakImplicitSentences,\n  removeEmptyNodes,\n  patchPosition\n])\n\nParseLatin.prototype.use('tokenizeRoot', [\n  makeInitialWhiteSpaceSiblings,\n  makeFinalWhiteSpaceSiblings,\n  removeEmptyNodes,\n  patchPosition\n])\n\n// TEXT NODES\n\n// Factory to create a `Text`.\nfunction createTextFactory(type) {\n  type += 'Node'\n\n  return createText\n\n  // Construct a `Text` from a bound `type`\n  function createText(value, eat, parent) {\n    if (value === null || value === undefined) {\n      value = ''\n    }\n\n    return (eat || noopEat)(value)({type, value: String(value)}, parent)\n  }\n}\n\n// Make a method “pluggable”.\nfunction pluggable(Constructor, key, callback) {\n  // Set a pluggable version of `callback` on `Constructor`.\n  Constructor.prototype[key] = function (...input) {\n    return this.run(key, callback.apply(this, input))\n  }\n}\n\n// Factory to inject `plugins`. Takes `callback` for the actual inserting.\nfunction useFactory(callback) {\n  return use\n\n  // Validate if `plugins` can be inserted.\n  // Invokes the bound `callback` to do the actual inserting.\n  function use(key, plugins) {\n    var wareKey\n\n    // Throw if the method is not pluggable.\n    if (!(key in this)) {\n      throw new Error(\n        'Illegal Invocation: Unsupported `key` for ' +\n          '`use(key, plugins)`. Make sure `key` is a ' +\n          'supported function'\n      )\n    }\n\n    // Fail silently when no plugins are given.\n    if (!plugins) {\n      return\n    }\n\n    wareKey = key + 'Plugins'\n\n    // Make sure `plugins` is a list.\n    plugins = typeof plugins === 'function' ? [plugins] : plugins.concat()\n\n    // Make sure `wareKey` exists.\n    if (!this[wareKey]) {\n      this[wareKey] = []\n    }\n\n    // Invoke callback with the ware key and plugins.\n    callback(this, wareKey, plugins)\n  }\n}\n\n// Add mechanism used when text-tokenisers are called directly outside of the\n// `tokenize` function.\nfunction noopAdd(node, parent) {\n  if (parent) {\n    parent.children.push(node)\n  }\n\n  return node\n}\n\n// Eat and add mechanism without adding positional information, used when\n// text-tokenisers are called directly outside of the `tokenize` function.\nfunction noopEat() {\n  return noopAdd\n}\n","import {tokenizerFactory} from './tokenizer.js'\n\n// Construct a parser based on `options`.\nexport function parserFactory(options) {\n  var type = options.type\n  var tokenizerProperty = options.tokenizer\n  var delimiter = options.delimiter\n  var tokenize = delimiter && tokenizerFactory(options.delimiterType, delimiter)\n\n  return parser\n\n  function parser(value) {\n    var children = this[tokenizerProperty](value)\n\n    return {type, children: tokenize ? tokenize(children) : children}\n  }\n}\n","import toString from 'nlcst-to-string'\nimport modifyChildren from 'unist-util-modify-children'\n\n// Two or more new line characters.\nimport {newLineMulti} from '../expressions.js'\n\n// Break a sentence if a white space with more than one new-line is found.\nexport var breakImplicitSentences = modifyChildren(function (\n  child,\n  index,\n  parent\n) {\n  var children\n  var position\n  var tail\n  var head\n  var end\n  var insertion\n  var node\n\n  if (child.type !== 'SentenceNode') {\n    return\n  }\n\n  children = child.children\n\n  // Ignore first and last child.\n  position = 0\n\n  while (++position < children.length - 1) {\n    node = children[position]\n\n    if (node.type !== 'WhiteSpaceNode' || !newLineMulti.test(toString(node))) {\n      continue\n    }\n\n    child.children = children.slice(0, position)\n\n    insertion = {\n      type: 'SentenceNode',\n      children: children.slice(position + 1)\n    }\n\n    tail = children[position - 1]\n    head = children[position + 1]\n\n    parent.children.splice(index + 1, 0, node, insertion)\n\n    if (child.position && tail.position && head.position) {\n      end = child.position.end\n\n      child.position.end = tail.position.end\n\n      insertion.position = {start: head.position.start, end}\n    }\n\n    return index + 1\n  }\n})\n","import modifyChildren from 'unist-util-modify-children'\n\n// Move white space ending a paragraph up, so they are the siblings of\n// paragraphs.\nexport var makeFinalWhiteSpaceSiblings = modifyChildren(function (\n  child,\n  index,\n  parent\n) {\n  var children = child.children\n  var previous\n\n  if (\n    children &&\n    children.length > 0 &&\n    children[children.length - 1].type === 'WhiteSpaceNode'\n  ) {\n    parent.children.splice(index + 1, 0, child.children.pop())\n    previous = children[children.length - 1]\n\n    if (previous && previous.position && child.position) {\n      child.position.end = previous.position.end\n    }\n\n    // Next, iterate over the current node again.\n    return index\n  }\n})\n","import visitChildren from 'unist-util-visit-children'\n\n// Move white space starting a sentence up, so they are the siblings of\n// sentences.\nexport var makeInitialWhiteSpaceSiblings = visitChildren(function (\n  child,\n  index,\n  parent\n) {\n  var children = child.children\n  var next\n\n  if (\n    children &&\n    children.length > 0 &&\n    children[0].type === 'WhiteSpaceNode'\n  ) {\n    parent.children.splice(index, 0, children.shift())\n    next = children[0]\n\n    if (next && next.position && child.position) {\n      child.position.start = next.position.start\n    }\n  }\n})\n","import toString from 'nlcst-to-string'\nimport modifyChildren from 'unist-util-modify-children'\n\n// Merge a sentence into its previous sentence, when the sentence starts with a\n// comma.\nexport var mergeAffixExceptions = modifyChildren(function (\n  child,\n  index,\n  parent\n) {\n  var children = child.children\n  var node\n  var position\n  var value\n  var previousChild\n\n  if (!children || children.length === 0 || index < 1) {\n    return\n  }\n\n  position = -1\n\n  while (children[++position]) {\n    node = children[position]\n\n    if (node.type === 'WordNode') {\n      return\n    }\n\n    if (node.type === 'SymbolNode' || node.type === 'PunctuationNode') {\n      value = toString(node)\n\n      if (value !== ',' && value !== ';') {\n        return\n      }\n\n      previousChild = parent.children[index - 1]\n\n      previousChild.children = previousChild.children.concat(children)\n\n      // Update position.\n      if (previousChild.position && child.position) {\n        previousChild.position.end = child.position.end\n      }\n\n      parent.children.splice(index, 1)\n\n      // Next, iterate over the node *now* at the current position.\n      return index\n    }\n  }\n})\n","import toString from 'nlcst-to-string'\nimport modifyChildren from 'unist-util-modify-children'\n\n// Closing or final punctuation, or terminal markers that should still be\n// included in the previous sentence, even though they follow the sentence’s\n// terminal marker.\nimport {affixSymbol} from '../expressions.js'\n\n// Move certain punctuation following a terminal marker (thus in the next\n// sentence) to the previous sentence.\nexport var mergeAffixSymbol = modifyChildren(function (child, index, parent) {\n  var children = child.children\n  var first\n  var second\n  var previous\n\n  if (children && children.length > 0 && index > 0) {\n    first = children[0]\n    second = children[1]\n    previous = parent.children[index - 1]\n\n    if (\n      (first.type === 'SymbolNode' || first.type === 'PunctuationNode') &&\n      affixSymbol.test(toString(first))\n    ) {\n      previous.children.push(children.shift())\n\n      // Update position.\n      if (first.position && previous.position) {\n        previous.position.end = first.position.end\n      }\n\n      if (second && second.position && child.position) {\n        child.position.start = second.position.start\n      }\n\n      // Next, iterate over the previous node again.\n      return index - 1\n    }\n  }\n})\n","import toString from 'nlcst-to-string'\nimport modifyChildren from 'unist-util-modify-children'\n\n// Merge certain punctuation marks into their preceding words.\nexport var mergeFinalWordSymbol = modifyChildren(function (\n  child,\n  index,\n  parent\n) {\n  var children\n  var previous\n  var next\n\n  if (\n    index > 0 &&\n    (child.type === 'SymbolNode' || child.type === 'PunctuationNode') &&\n    toString(child) === '-'\n  ) {\n    children = parent.children\n    previous = children[index - 1]\n    next = children[index + 1]\n\n    if (\n      (!next || next.type !== 'WordNode') &&\n      previous &&\n      previous.type === 'WordNode'\n    ) {\n      // Remove `child` from parent.\n      children.splice(index, 1)\n\n      // Add the punctuation mark at the end of the previous node.\n      previous.children.push(child)\n\n      // Update position.\n      if (previous.position && child.position) {\n        previous.position.end = child.position.end\n      }\n\n      // Next, iterate over the node *now* at the current position (which was\n      // the next node).\n      return index\n    }\n  }\n})\n","import toString from 'nlcst-to-string'\nimport modifyChildren from 'unist-util-modify-children'\nimport {digitStart} from '../expressions.js'\n\n// Merge a sentence into its previous sentence, when the sentence starts with a\n// lower case letter.\nexport var mergeInitialDigitSentences = modifyChildren(function (\n  child,\n  index,\n  parent\n) {\n  var children = child.children\n  var siblings = parent.children\n  var previous = siblings[index - 1]\n  var head = children[0]\n\n  if (\n    previous &&\n    head &&\n    head.type === 'WordNode' &&\n    digitStart.test(toString(head))\n  ) {\n    previous.children = previous.children.concat(children)\n    siblings.splice(index, 1)\n\n    // Update position.\n    if (previous.position && child.position) {\n      previous.position.end = child.position.end\n    }\n\n    // Next, iterate over the node *now* at the current position.\n    return index\n  }\n})\n","import toString from 'nlcst-to-string'\nimport modifyChildren from 'unist-util-modify-children'\n\n// Initial lowercase letter.\nimport {lowerInitial} from '../expressions.js'\n\n// Merge a sentence into its previous sentence, when the sentence starts with a\n// lower case letter.\nexport var mergeInitialLowerCaseLetterSentences = modifyChildren(function (\n  child,\n  index,\n  parent\n) {\n  var children = child.children\n  var position\n  var node\n  var siblings\n  var previous\n\n  if (children && children.length > 0 && index > 0) {\n    position = -1\n\n    while (children[++position]) {\n      node = children[position]\n\n      if (node.type === 'WordNode') {\n        if (!lowerInitial.test(toString(node))) {\n          return\n        }\n\n        siblings = parent.children\n\n        previous = siblings[index - 1]\n\n        previous.children = previous.children.concat(children)\n\n        siblings.splice(index, 1)\n\n        // Update position.\n        if (previous.position && child.position) {\n          previous.position.end = child.position.end\n        }\n\n        // Next, iterate over the node *now* at the current position.\n        return index\n      }\n\n      if (node.type === 'SymbolNode' || node.type === 'PunctuationNode') {\n        return\n      }\n    }\n  }\n})\n","import toString from 'nlcst-to-string'\nimport modifyChildren from 'unist-util-modify-children'\n\n// Merge certain punctuation marks into their following words.\nexport var mergeInitialWordSymbol = modifyChildren(function (\n  child,\n  index,\n  parent\n) {\n  var children\n  var next\n\n  if (\n    (child.type !== 'SymbolNode' && child.type !== 'PunctuationNode') ||\n    toString(child) !== '&'\n  ) {\n    return\n  }\n\n  children = parent.children\n\n  next = children[index + 1]\n\n  // If either a previous word, or no following word, exists, exit early.\n  if (\n    (index > 0 && children[index - 1].type === 'WordNode') ||\n    !(next && next.type === 'WordNode')\n  ) {\n    return\n  }\n\n  // Remove `child` from parent.\n  children.splice(index, 1)\n\n  // Add the punctuation mark at the start of the next node.\n  next.children.unshift(child)\n\n  // Update position.\n  if (next.position && child.position) {\n    next.position.start = child.position.start\n  }\n\n  // Next, iterate over the node at the previous position, as it's now adjacent\n  // to a following word.\n  return index - 1\n})\n","import toString from 'nlcst-to-string'\nimport modifyChildren from 'unist-util-modify-children'\nimport {numerical} from '../expressions.js'\n\n// Merge initialisms.\nexport var mergeInitialisms = modifyChildren(function (child, index, parent) {\n  var siblings\n  var previous\n  var children\n  var position\n  var otherChild\n  var isAllDigits\n  var value\n\n  if (index > 0 && toString(child) === '.') {\n    siblings = parent.children\n\n    previous = siblings[index - 1]\n    children = previous.children\n\n    if (\n      previous.type === 'WordNode' &&\n      children &&\n      children.length !== 1 &&\n      children.length % 2 !== 0\n    ) {\n      position = children.length\n      isAllDigits = true\n\n      while (children[--position]) {\n        otherChild = children[position]\n\n        value = toString(otherChild)\n\n        if (position % 2 === 0) {\n          // Initialisms consist of one character values.\n          if (value.length > 1) {\n            return\n          }\n\n          if (!numerical.test(value)) {\n            isAllDigits = false\n          }\n        } else if (value !== '.') {\n          if (position < children.length - 2) {\n            break\n          } else {\n            return\n          }\n        }\n      }\n\n      if (!isAllDigits) {\n        // Remove `child` from parent.\n        siblings.splice(index, 1)\n\n        // Add child to the previous children.\n        children.push(child)\n\n        // Update position.\n        if (previous.position && child.position) {\n          previous.position.end = child.position.end\n        }\n\n        // Next, iterate over the node *now* at the current position.\n        return index\n      }\n    }\n  }\n})\n","import toString from 'nlcst-to-string'\nimport modifyChildren from 'unist-util-modify-children'\n\nvar slash = '/'\n\n// Merge words joined by certain punctuation marks.\nexport var mergeInnerWordSlash = modifyChildren(function (\n  child,\n  index,\n  parent\n) {\n  var siblings = parent.children\n  var previous\n  var next\n  var previousValue\n  var nextValue\n  var queue\n  var tail\n  var count\n\n  previous = siblings[index - 1]\n  next = siblings[index + 1]\n\n  if (\n    previous &&\n    previous.type === 'WordNode' &&\n    (child.type === 'SymbolNode' || child.type === 'PunctuationNode') &&\n    toString(child) === slash\n  ) {\n    previousValue = toString(previous)\n    tail = child\n    queue = [child]\n    count = 1\n\n    if (next && next.type === 'WordNode') {\n      nextValue = toString(next)\n      tail = next\n      queue = queue.concat(next.children)\n      count++\n    }\n\n    if (previousValue.length < 3 && (!nextValue || nextValue.length < 3)) {\n      // Add all found tokens to `prev`s children.\n      previous.children = previous.children.concat(queue)\n\n      siblings.splice(index, count)\n\n      // Update position.\n      if (previous.position && tail.position) {\n        previous.position.end = tail.position.end\n      }\n\n      // Next, iterate over the node *now* at the current position.\n      return index\n    }\n  }\n})\n","import toString from 'nlcst-to-string'\nimport modifyChildren from 'unist-util-modify-children'\n\n// Symbols part of surrounding words.\nimport {wordSymbolInner} from '../expressions.js'\n\n// Merge words joined by certain punctuation marks.\nexport var mergeInnerWordSymbol = modifyChildren(function (\n  child,\n  index,\n  parent\n) {\n  var siblings\n  var sibling\n  var previous\n  var last\n  var position\n  var tokens\n  var queue\n\n  if (\n    index > 0 &&\n    (child.type === 'SymbolNode' || child.type === 'PunctuationNode')\n  ) {\n    siblings = parent.children\n    previous = siblings[index - 1]\n\n    if (previous && previous.type === 'WordNode') {\n      position = index - 1\n\n      tokens = []\n      queue = []\n\n      // -   If a token which is neither word nor inner word symbol is found,\n      //     the loop is broken\n      // -   If an inner word symbol is found,  it’s queued\n      // -   If a word is found, it’s queued (and the queue stored and emptied)\n      while (siblings[++position]) {\n        sibling = siblings[position]\n\n        if (sibling.type === 'WordNode') {\n          tokens = tokens.concat(queue, sibling.children)\n\n          queue = []\n        } else if (\n          (sibling.type === 'SymbolNode' ||\n            sibling.type === 'PunctuationNode') &&\n          wordSymbolInner.test(toString(sibling))\n        ) {\n          queue.push(sibling)\n        } else {\n          break\n        }\n      }\n\n      if (tokens.length > 0) {\n        // If there is a queue, remove its length from `position`.\n        if (queue.length > 0) {\n          position -= queue.length\n        }\n\n        // Remove every (one or more) inner-word punctuation marks and children\n        // of words.\n        siblings.splice(index, position - index)\n\n        // Add all found tokens to `prev`s children.\n        previous.children = previous.children.concat(tokens)\n\n        last = tokens[tokens.length - 1]\n\n        // Update position.\n        if (previous.position && last.position) {\n          previous.position.end = last.position.end\n        }\n\n        // Next, iterate over the node *now* at the current position.\n        return index\n      }\n    }\n  }\n})\n","import modifyChildren from 'unist-util-modify-children'\n\n// Merge a sentence into the following sentence, when the sentence does not\n// contain word tokens.\nexport var mergeNonWordSentences = modifyChildren(function (\n  child,\n  index,\n  parent\n) {\n  var children = child.children\n  var position = -1\n  var previous\n  var next\n\n  while (children[++position]) {\n    if (children[position].type === 'WordNode') {\n      return\n    }\n  }\n\n  previous = parent.children[index - 1]\n\n  if (previous) {\n    previous.children = previous.children.concat(children)\n\n    // Remove the child.\n    parent.children.splice(index, 1)\n\n    // Patch position.\n    if (previous.position && child.position) {\n      previous.position.end = child.position.end\n    }\n\n    // Next, iterate over the node *now* at the current position (which was the\n    // next node).\n    return index\n  }\n\n  next = parent.children[index + 1]\n\n  if (next) {\n    next.children = children.concat(next.children)\n\n    // Patch position.\n    if (next.position && child.position) {\n      next.position.start = child.position.start\n    }\n\n    // Remove the child.\n    parent.children.splice(index, 1)\n  }\n})\n","import toString from 'nlcst-to-string'\nimport modifyChildren from 'unist-util-modify-children'\n\n// Full stop characters that should not be treated as terminal sentence markers:\n// A case-insensitive abbreviation.\nvar abbreviationPrefix = new RegExp(\n  '^(' +\n    '[0-9]{1,3}|' +\n    '[a-z]|' +\n    // Common Latin Abbreviations:\n    // Based on: <https://en.wikipedia.org/wiki/List_of_Latin_abbreviations>.\n    // Where only the abbreviations written without joining full stops,\n    // but with a final full stop, were extracted.\n    //\n    // circa, capitulus, confer, compare, centum weight, eadem, (et) alii,\n    // et cetera, floruit, foliis, ibidem, idem, nemine && contradicente,\n    // opere && citato, (per) cent, (per) procurationem, (pro) tempore,\n    // sic erat scriptum, (et) sequentia, statim, videlicet. */\n    'al|ca|cap|cca|cent|cf|cit|con|cp|cwt|ead|etc|ff|' +\n    'fl|ibid|id|nem|op|pro|seq|sic|stat|tem|viz' +\n    ')$'\n)\n\n// Merge a sentence into its next sentence, when the sentence ends with a\n// certain word.\nexport var mergePrefixExceptions = modifyChildren(function (\n  child,\n  index,\n  parent\n) {\n  var children = child.children\n  var period\n  var node\n  var next\n\n  if (children && children.length > 1) {\n    period = children[children.length - 1]\n\n    if (period && toString(period) === '.') {\n      node = children[children.length - 2]\n\n      if (\n        node &&\n        node.type === 'WordNode' &&\n        abbreviationPrefix.test(toString(node).toLowerCase())\n      ) {\n        // Merge period into abbreviation.\n        node.children.push(period)\n        children.pop()\n\n        // Update position.\n        if (period.position && node.position) {\n          node.position.end = period.position.end\n        }\n\n        // Merge sentences.\n        next = parent.children[index + 1]\n\n        if (next) {\n          child.children = children.concat(next.children)\n\n          parent.children.splice(index + 1, 1)\n\n          // Update position.\n          if (next.position && child.position) {\n            child.position.end = next.position.end\n          }\n\n          // Next, iterate over the current node again.\n          return index - 1\n        }\n      }\n    }\n  }\n})\n","import toString from 'nlcst-to-string'\nimport visitChildren from 'unist-util-visit-children'\n\n// Full stop characters that should not be treated as terminal sentence markers:\n// A case-insensitive abbreviation.\nimport {terminalMarker} from '../expressions.js'\n\n// Merge non-terminal-marker full stops into the previous word (if available),\n// or the next word (if available).\nexport var mergeRemainingFullStops = visitChildren(function (child) {\n  var children = child.children\n  var position = children.length\n  var hasFoundDelimiter = false\n  var grandchild\n  var previous\n  var next\n  var nextNext\n\n  while (children[--position]) {\n    grandchild = children[position]\n\n    if (\n      grandchild.type !== 'SymbolNode' &&\n      grandchild.type !== 'PunctuationNode'\n    ) {\n      // This is a sentence without terminal marker, so we 'fool' the code to\n      // make it think we have found one.\n      if (grandchild.type === 'WordNode') {\n        hasFoundDelimiter = true\n      }\n\n      continue\n    }\n\n    // Exit when this token is not a terminal marker.\n    if (!terminalMarker.test(toString(grandchild))) {\n      continue\n    }\n\n    // Ignore the first terminal marker found (starting at the end), as it\n    // should not be merged.\n    if (!hasFoundDelimiter) {\n      hasFoundDelimiter = true\n\n      continue\n    }\n\n    // Only merge a single full stop.\n    if (toString(grandchild) !== '.') {\n      continue\n    }\n\n    previous = children[position - 1]\n    next = children[position + 1]\n\n    if (previous && previous.type === 'WordNode') {\n      nextNext = children[position + 2]\n\n      // Continue when the full stop is followed by a space and another full\n      // stop, such as: `{.} .`\n      if (\n        next &&\n        nextNext &&\n        next.type === 'WhiteSpaceNode' &&\n        toString(nextNext) === '.'\n      ) {\n        continue\n      }\n\n      // Remove `child` from parent.\n      children.splice(position, 1)\n\n      // Add the punctuation mark at the end of the previous node.\n      previous.children.push(grandchild)\n\n      // Update position.\n      if (grandchild.position && previous.position) {\n        previous.position.end = grandchild.position.end\n      }\n\n      position--\n    } else if (next && next.type === 'WordNode') {\n      // Remove `child` from parent.\n      children.splice(position, 1)\n\n      // Add the punctuation mark at the start of the next node.\n      next.children.unshift(grandchild)\n\n      if (grandchild.position && next.position) {\n        next.position.start = grandchild.position.start\n      }\n    }\n  }\n})\n","import modifyChildren from 'unist-util-modify-children'\n\n// Merge multiple words. This merges the children of adjacent words, something\n// which should not occur naturally by parse-latin, but might happen when custom\n// tokens were passed in.\nexport var mergeWords = modifyChildren(function (child, index, parent) {\n  var siblings = parent.children\n  var next\n\n  if (child.type === 'WordNode') {\n    next = siblings[index + 1]\n\n    if (next && next.type === 'WordNode') {\n      // Remove `next` from parent.\n      siblings.splice(index + 1, 1)\n\n      // Add the punctuation mark at the end of the previous node.\n      child.children = child.children.concat(next.children)\n\n      // Update position.\n      if (next.position && child.position) {\n        child.position.end = next.position.end\n      }\n\n      // Next, re-iterate the current node.\n      return index\n    }\n  }\n})\n","import visitChildren from 'unist-util-visit-children'\n\n// Patch the position on a parent node based on its first and last child.\nexport var patchPosition = visitChildren(function (child, index, node) {\n  var siblings = node.children\n\n  if (!child.position) {\n    return\n  }\n\n  if (\n    index < 1 &&\n    /* c8 ignore next */\n    (!node.position || !node.position.start)\n  ) {\n    patch(node)\n    node.position.start = child.position.start\n  }\n\n  if (index === siblings.length - 1 && (!node.position || !node.position.end)) {\n    patch(node)\n    node.position.end = child.position.end\n  }\n})\n\n// Add a `position` object when it does not yet exist on `node`.\nfunction patch(node) {\n  if (!node.position) {\n    node.position = {}\n  }\n}\n","import modifyChildren from 'unist-util-modify-children'\n\n// Remove empty children.\nexport var removeEmptyNodes = modifyChildren(function (child, index, parent) {\n  if ('children' in child && child.children.length === 0) {\n    parent.children.splice(index, 1)\n\n    // Next, iterate over the node *now* at the current position (which was the\n    // next node).\n    return index\n  }\n})\n","import toString from 'nlcst-to-string'\n\n// Factory to create a tokenizer based on a given `expression`.\nexport function tokenizerFactory(childType, expression) {\n  return tokenizer\n\n  // A function that splits.\n  function tokenizer(node) {\n    var children = []\n    var tokens = node.children\n    var type = node.type\n    var index = -1\n    var lastIndex = tokens.length - 1\n    var start = 0\n    var first\n    var last\n    var parent\n\n    while (++index < tokens.length) {\n      if (\n        index === lastIndex ||\n        (tokens[index].type === childType &&\n          expression.test(toString(tokens[index])))\n      ) {\n        first = tokens[start]\n        last = tokens[index]\n\n        parent = {type, children: tokens.slice(start, index + 1)}\n\n        if (first.position && last.position) {\n          parent.position = {\n            start: first.position.start,\n            end: last.position.end\n          }\n        }\n\n        children.push(parent)\n\n        start = index + 1\n      }\n    }\n\n    return children\n  }\n}\n","export var emoji = {\n  '💯': 3,\n  ':100:': 3,\n  '😠': -3,\n  ':angry:': -3,\n  '😧': -3,\n  ':anguished:': -3,\n  '😲': 2,\n  ':astonished:': 2,\n  '🖤': 3,\n  ':black_heart:': 3,\n  '💙': 3,\n  ':blue_heart:': 3,\n  '😊': 2,\n  ':blush:': 2,\n  '💔': -3,\n  ':broken_heart:': -3,\n  '👏': 3,\n  ':clap:': 3,\n  '🤡': 0,\n  ':clown_face:': 0,\n  '😰': -2,\n  ':cold_sweat:': -2,\n  '😖': -2,\n  ':confounded:': -2,\n  '😕': -2,\n  ':confused:': -2,\n  '🤠': 2,\n  ':cowboy_hat_face:': 2,\n  '🤞': 2,\n  ':crossed_fingers:': 2,\n  '😢': -2,\n  ':cry:': -2,\n  '😿': -2,\n  ':crying_cat_face:': -2,\n  '💘': 3,\n  ':cupid:': 3,\n  '😞': -2,\n  ':disappointed:': -2,\n  '😥': -1,\n  ':disappointed_relieved:': -1,\n  '😵': -1,\n  ':dizzy_face:': -1,\n  '🤤': 0,\n  ':drooling_face:': 0,\n  '😑': 0,\n  ':expressionless:': 0,\n  '🤕': -2,\n  ':face_with_head_bandage:': -2,\n  '🤒': -1,\n  ':face_with_thermometer:': -1,\n  '😨': -2,\n  ':fearful:': -2,\n  '😳': -2,\n  ':flushed:': -2,\n  '😦': -1,\n  ':frowning:': -1,\n  '☹️': -2,\n  ':frowning_face:': -2,\n  '🖕': -4,\n  ':middle_finger:': -4,\n  '👻': -1,\n  ':ghost:': -1,\n  '💝': 3,\n  ':gift_heart:': 3,\n  '💚': 3,\n  ':green_heart:': 3,\n  '😬': -2,\n  ':grimacing:': -2,\n  '😁': 2,\n  ':grin:': 2,\n  '😀': 2,\n  ':grinning:': 2,\n  '🤝': 1,\n  ':handshake:': 1,\n  '❤️': 3,\n  ':heart:': 3,\n  '😍': 3,\n  ':heart_eyes:': 3,\n  '😻': 3,\n  ':heart_eyes_cat:': 3,\n  '💓': 3,\n  ':heartbeat:': 3,\n  '💗': 3,\n  ':heartpulse:': 3,\n  '🤗': 2,\n  ':hugs:': 2,\n  '😯': -1,\n  ':hushed:': -1,\n  '👿': -4,\n  ':imp:': -4,\n  '😇': 3,\n  ':innocent:': 3,\n  '😂': 3,\n  ':joy:': 3,\n  '😹': 3,\n  ':joy_cat:': 3,\n  '💋': 2,\n  ':kiss:': 2,\n  '😗': 2,\n  ':kissing:': 2,\n  '😽': 2,\n  ':kissing_cat:': 2,\n  '😚': 2,\n  ':kissing_closed_eyes:': 2,\n  '😘': 3,\n  ':kissing_heart:': 3,\n  '😙': 2,\n  ':kissing_smiling_eyes:': 2,\n  '😆': 1,\n  ':laughing:': 1,\n  '👄': 2,\n  ':lips:': 2,\n  '🤥': -2,\n  ':lying_face:': -2,\n  '😷': -1,\n  ':mask:': -1,\n  '🤑': 0,\n  ':money_mouth_face:': 0,\n  '🤢': -2,\n  ':nauseated_face:': -2,\n  '🤓': -1,\n  ':nerd_face:': -1,\n  '😐': 0,\n  ':neutral_face:': 0,\n  '😶': 0,\n  ':no_mouth:': 0,\n  '👌': 2,\n  ':ok_hand:': 2,\n  '😮': -2,\n  ':open_mouth:': -2,\n  '😔': -1,\n  ':pensive:': -1,\n  '😣': -2,\n  ':persevere:': -2,\n  '😾': -4,\n  ':pouting_cat:': -4,\n  '🙏': 1,\n  ':pray:': 1,\n  '👊': -1,\n  ':fist_oncoming:': -1,\n  '💜': 3,\n  ':purple_heart:': 3,\n  '😡': -4,\n  ':rage:': -4,\n  '🙌': 4,\n  ':raised_hands:': 4,\n  '☺️': 2,\n  ':relaxed:': 2,\n  '😌': 2,\n  ':relieved:': 2,\n  '💞': 3,\n  ':revolving_hearts:': 3,\n  '🤣': 4,\n  ':rofl:': 4,\n  '🙄': -1,\n  ':roll_eyes:': -1,\n  '😱': -3,\n  ':scream:': -3,\n  '🙀': -3,\n  ':scream_cat:': -3,\n  '💩': -3,\n  ':hankey:': -3,\n  '💀': -2,\n  ':skull:': -2,\n  '☠️': -2,\n  ':skull_and_crossbones:': -2,\n  '😴': 0,\n  ':sleeping:': 0,\n  '😪': 0,\n  ':sleepy:': 0,\n  '🙁': -1,\n  ':slightly_frowning_face:': -1,\n  '🙂': 1,\n  ':slightly_smiling_face:': 1,\n  '😄': 2,\n  ':smile:': 2,\n  '😸': 2,\n  ':smile_cat:': 2,\n  '😃': 2,\n  ':smiley:': 2,\n  '😺': 2,\n  ':smiley_cat:': 2,\n  '😈': -3,\n  ':smiling_imp:': -3,\n  '😏': 2,\n  ':smirk:': 2,\n  '😼': 2,\n  ':smirk_cat:': 2,\n  '🤧': -2,\n  ':sneezing_face:': -2,\n  '😭': -3,\n  ':sob:': -3,\n  '💖': 3,\n  ':sparkling_heart:': 3,\n  '😛': 1,\n  ':stuck_out_tongue:': 1,\n  '😝': 0,\n  ':stuck_out_tongue_closed_eyes:': 0,\n  '😜': -1,\n  ':stuck_out_tongue_winking_eye:': -1,\n  '😎': 1,\n  ':sunglasses:': 1,\n  '😓': -1,\n  ':sweat:': -1,\n  '😅': 2,\n  ':sweat_smile:': 2,\n  '🤔': -1,\n  ':thinking:': -1,\n  '👎': -2,\n  ':-1:': -2,\n  '👍': 2,\n  ':+1:': 2,\n  '😫': -2,\n  ':tired_face:': -2,\n  '😤': 0,\n  ':triumph:': 0,\n  '💕': 3,\n  ':two_hearts:': 3,\n  '😒': -2,\n  ':unamused:': -2,\n  '🙃': 0,\n  ':upside_down_face:': 0,\n  '✌️': 2,\n  ':v:': 2,\n  '😩': -2,\n  ':weary:': -2,\n  '😉': 3,\n  ':wink:': 3,\n  '😟': -3,\n  ':worried:': -3,\n  '💛': 3,\n  ':yellow_heart:': 3,\n  '😋': 3,\n  ':yum:': 3,\n  '🤐': -1,\n  ':zipper_mouth_face:': -1\n}\n","/**\n * @typedef {Object} Polarity\n * @property {number} polarity\n * @property {number} positivity\n * @property {number} negativity\n * @property {Array.<string>} positive\n * @property {Array.<string>} negative\n *\n * @typedef {Object.<string, number>} Inject\n */\n\nimport {afinn165} from 'afinn-165'\nimport {emoji} from './emoji.js'\n\nexport var polarities = {}\n\nvar own = {}.hasOwnProperty\n\ninject(afinn165)\ninject(emoji)\n\n/**\n * Get a polarity result from given values, optionally with one time injections.\n *\n * @param {Array.<string>} values\n * @param {Inject} inject\n * @returns {Polarity}\n */\nexport function polarity(values, inject) {\n  var words = values || []\n  var index = words.length === 0 ? 1 : words.length\n  var positivity = 0\n  var negativity = 0\n  /** @type {Array.<string>} */\n  var positive = []\n  /** @type {Array.<string>} */\n  var negative = []\n  /** @type {string} */\n  var value\n  /** @type {number} */\n  var weight\n\n  while (index--) {\n    value = words[index]\n    weight = getPolarity(value, inject)\n\n    if (!weight) {\n      continue\n    }\n\n    if (weight > 0) {\n      positive.push(value)\n      positivity += weight\n    } else {\n      negative.push(value)\n      negativity += weight\n    }\n  }\n\n  return {\n    polarity: positivity + negativity,\n    positivity,\n    negativity,\n    positive,\n    negative\n  }\n}\n\n/**\n * Inject values on the `polarities` object.\n *\n * @param {Inject} values\n */\nexport function inject(values) {\n  /** @type {string} */\n  var value\n\n  for (value in values) {\n    if (own.call(values, value)) {\n      polarities[value] = values[value]\n    }\n  }\n}\n\n/**\n * Get the polarity of a word.\n *\n * @param {string} value\n * @param {Inject} inject\n */\nfunction getPolarity(value, inject) {\n  if (own.call(polarities, value)) {\n    return polarities[value]\n  }\n\n  if (inject && own.call(inject, value)) {\n    return inject[value]\n  }\n\n  return 0\n}\n","/**\n * Quote a value.\n *\n * @param value\n *   Value(s) to wrap in quotes\n * @param [open='\"']\n *   Opening quote\n * @param [close=open]\n *   Closing quote\n */\nexport const quotation =\n  /**\n   * @type {{\n   *   (value: string, open?: string, close?: string): string\n   *   (value: string[], open?: string, close?: string): string[]\n   * }}\n   */\n  (\n    /**\n     * @param {string|Array<string>} value\n     * @param {string} open\n     * @param {string} close\n     * @returns {string|string[]}\n     */\n    function (value, open, close) {\n      const start = open || '\"'\n      const end = close || start\n      /** @type {string[]} */\n      const result = []\n      let index = -1\n\n      if (Array.isArray(value)) {\n        while (++index < value.length) {\n          result[index] = start + value[index] + end\n        }\n\n        return result\n      }\n\n      if (typeof value === 'string') {\n        return start + value + end\n      }\n\n      throw new TypeError('Expected string or array of strings')\n    }\n  )\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('unified-message-control')} MessageControl\n * @typedef {Omit<import('unified-message-control').OptionsWithoutReset, 'marker'>|Omit<import('unified-message-control').OptionsWithReset, 'marker'>} Options\n */\n\nimport unifiedMessageControl from 'unified-message-control'\nimport {commentMarker} from 'mdast-comment-marker'\n\nconst test = [\n  'html', // Comments are `html` nodes in mdast.\n  'comment', // In MDX@1, comments have their own node.\n  'mdxFlowExpression', // In MDX@2, comments exist in bracketed expressions.\n  'mdxTextExpression'\n]\n\n/**\n * Plugin to enable, disable, and ignore messages.\n *\n * @type {import('unified').Plugin<[Options], Root>}\n * @returns {(node: Root, file: VFile) => void}\n */\nexport default function remarkMessageControl(options) {\n  return unifiedMessageControl(\n    Object.assign({marker: commentMarker, test}, options)\n  )\n}\n","/**\n * @typedef {import('nlcst').Root} Root\n * @typedef {import('nlcst').Sentence} Sentence\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean} [allowLiterals=false]\n *   Suggest straight (`'`) instead of smart (`’`) apostrophes.\n *   Use `retext-quotes` if you want to properly check that though.\n * @property {boolean} [straight=false]\n *   Include literal phrases.\n *   The default is to ignore them.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {toString} from 'nlcst-to-string'\nimport {isLiteral} from 'nlcst-is-literal'\nimport {list} from './list.js'\n\n// Rules.\nconst source = 'retext-contractions'\nconst url = 'https://github.com/retextjs/retext-contractions#readme'\n\nconst own = {}.hasOwnProperty\n\nconst data = initialize()\n\n/**\n * Plugin to check contractions use.\n *\n * @type {import('unified').Plugin<[Options?], Root>}\n */\nexport default function retextContractions(options = {}) {\n  const ignore = options.allowLiterals\n  const straight = options.straight\n\n  return (tree, file) => {\n    visit(tree, 'WordNode', (node, index, parent_) => {\n      const parent = /** @type {Sentence} */ (parent_)\n      const actual = toString(node)\n      const normal = actual.replace(/['’]/g, '')\n\n      // Suggest if the straightened version is listed.\n      if (own.call(data, normal)) {\n        let expected = data[normal]\n\n        if (!straight) {\n          expected = expected.replace(/'/g, '’')\n        }\n\n        if (\n          // Perfect.\n          actual === expected ||\n          // Ignore literal misspelt words: `like this: “hasnt”`.\n          (parent && index !== null && !ignore && isLiteral(parent, index))\n        ) {\n          return\n        }\n\n        Object.assign(\n          file.message(\n            normal === actual\n              ? 'Expected an apostrophe in `' +\n                  actual +\n                  '`, ' +\n                  'like this: `' +\n                  expected +\n                  '`'\n              : 'Expected the apostrophe in `' +\n                  actual +\n                  '` to be ' +\n                  'like this: `' +\n                  expected +\n                  '`',\n            node,\n            [\n              source,\n              (normal === actual ? 'missing-' : '') +\n                (straight ? 'straight-apostrophe' : 'smart-apostrophe')\n            ].join(':')\n          ),\n          {actual, expected: [expected], url}\n        )\n      }\n    })\n  }\n}\n\n/** @returns {Record<string, string>} */\nfunction initialize() {\n  /** @type {Record<string, string>} */\n  const result = {}\n  /** @type {string} */\n  let key\n\n  for (key in list) {\n    if (own.call(list, key)) {\n      const value = list[key]\n\n      result[key] = value\n\n      // Add upper- and sentence case as well.\n      if (key === key.toLowerCase()) {\n        result[key.toUpperCase()] = value.toUpperCase()\n        result[key.charAt(0).toUpperCase() + key.slice(1)] =\n          value.charAt(0).toUpperCase() + value.slice(1)\n      }\n    }\n  }\n\n  return result\n}\n","/** @type {Record<string, string>} */\nexport const list = {\n  aint: \"ain't\",\n  arent: \"aren't\",\n  couldnt: \"couldn't\",\n  didnt: \"didn't\",\n  doesnt: \"doesn't\",\n  dont: \"don't\",\n  hadnt: \"hadn't\",\n  hasnt: \"hasn't\",\n  havent: \"haven't\",\n  hed: \"he'd\",\n  hes: \"he's\",\n  howd: \"how'd\",\n  hows: \"how's\",\n  howll: \"how'll\",\n  Id: \"I'd\",\n  Im: \"I'm\",\n  Ive: \"I've\",\n  isnt: \"isn't\",\n  mightnt: \"mightn't\",\n  mustve: \"must've\",\n  mustnt: \"mustn't\",\n  neednt: \"needn't\",\n  oclock: \"o'clock\",\n  shant: \"shan't\",\n  shes: \"she's\",\n  shouldve: \"should've\",\n  shouldnt: \"shouldn't\",\n  thatd: \"that'd\",\n  thats: \"that's\",\n  thered: \"there'd\",\n  theres: \"there's\",\n  therere: \"there're\",\n  theyd: \"they'd\",\n  theyll: \"they'll\",\n  theyre: \"they're\",\n  theyve: \"they've\",\n  tis: \"'tis\",\n  twas: \"'twas\",\n  twere: \"'twere\",\n  wasnt: \"wasn't\",\n  weve: \"we've\",\n  werent: \"weren't\",\n  whatll: \"what'll\",\n  whatre: \"what're\",\n  whats: \"what's\",\n  whatve: \"what've\",\n  whens: \"when's\",\n  wheres: \"where's\",\n  whereve: \"where've\",\n  whod: \"who'd\",\n  wholl: \"who'll\",\n  whos: \"who's\",\n  whove: \"who've\",\n  whys: \"why's\",\n  wouldve: \"would've\",\n  wouldnt: \"wouldn't\",\n  yall: \"y'all\",\n  youd: \"you'd\",\n  youll: \"you'll\",\n  youre: \"you're\",\n  youve: \"you've\"\n}\n","/**\n * @typedef {import('nlcst').Root} Root\n */\n\nimport {matchCasing} from 'match-casing'\nimport {search} from 'nlcst-search'\nimport {toString} from 'nlcst-to-string'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {quotation} from 'quotation'\nimport {schema} from './schema.js'\n\nconst source = 'retext-diacritics'\nconst url = 'https://github.com/retext/retext-diacritics#readme'\n\nconst list = Object.keys(schema)\n\n/**\n * Plugin to check for proper use of diacritics.\n *\n * @type {import('unified').Plugin<[], Root>}\n */\nexport default function retextDiacritics() {\n  return (tree, file) => {\n    search(tree, list, (match, _, _1, phrase) => {\n      const actual = toString(match)\n      const expected = matchCasing(schema[phrase], actual)\n\n      Object.assign(\n        file.message(\n          'Replace ' +\n            quotation(actual, '`') +\n            ' with ' +\n            quotation(expected, '`'),\n          {start: pointStart(match[0]), end: pointEnd(match[match.length - 1])},\n          [source, phrase.replace(/\\s+/g, '-').toLowerCase()].join(':')\n        ),\n        {actual, expected: [expected], url}\n      )\n    })\n  }\n}\n","/** @type {Record<string, string>} */\nexport const schema = {\n  // French.\n  'beau ideal': 'beau idéal',\n  boutonniere: 'boutonnière',\n  'bric-a-brac': 'bric-à-brac',\n  cafe: 'café',\n  'cause celebre': 'cause célèbre',\n  chevre: 'chèvre',\n  cliche: 'cliché',\n  'comsi comsa': 'comme ci comme ça',\n  'comme ci comme ca': 'comme ci comme ça',\n  consomme: 'consommé',\n  \"coup d'etat\": \"coup d'état\",\n  'coup de grace': 'coup de grâce',\n  crudites: 'crudités',\n  'creme brulee': 'crème brûlée',\n  'creme de menthe': 'crème de menthe',\n  'creme fraice': 'crème fraîche',\n  'creme fresh': 'crème fraîche',\n  crepe: 'crêpe',\n  debutante: 'débutante',\n  decor: 'décor',\n  'deja vu': 'déjà vu',\n  denouement: 'dénouement',\n  facade: 'façade',\n  fiance: 'fiancé',\n  fiancee: 'fiancée',\n  flambe: 'flambé',\n  garcon: 'garçon',\n  lycee: 'lycée',\n  'maitre d': 'maître d',\n  'menage a trois': 'ménage à trois',\n  negligee: 'négligée',\n  'papier-mache': 'papier-mâché',\n  'paper mache': 'papier-mâché',\n  'paper-mache': 'papier-mâché',\n  protege: 'protégé',\n  protegee: 'protégée',\n  puree: 'purée',\n\n  \"raison d'etre\": \"raison d'être\",\n  'my resume': 'my résumé',\n  'your resume': 'your résumé',\n  'his resume': 'his résumé',\n  'her resume': 'her résumé',\n  'a resume': 'a résumé',\n  'the resume': 'the résumé',\n  risque: 'risqué',\n  roue: 'roué',\n  soiree: 'soirée',\n  souffle: 'soufflé',\n  soupcon: 'soupçon',\n  touche: 'touché',\n  'tete-a-tete': 'tête-à-tête',\n  voila: 'voilà',\n  'a la carte': 'à la carte',\n  'a la mode': 'à la mode',\n  emigre: 'émigré',\n\n  // Spanish.\n  'el nino': 'el niño',\n  jalapeno: 'jalapeño',\n  'la nina': 'la niña',\n  'pina colada': 'piña colada',\n  senor: 'señor',\n  senora: 'señora',\n  senorita: 'señorita',\n\n  // Portuguese.\n  acai: 'açaí',\n\n  // German.\n  doppelganger: 'doppelgänger',\n  fuhrer: 'führer',\n  gewurztraminer: 'gewürztraminer',\n  ubermensch: 'Übermensch',\n\n  // Latin.\n  'vis-a-vis': 'vis-à-vis',\n\n  // Swedish.\n  filmjolk: 'filmjölk',\n  smorgasbord: 'smörgåsbord',\n\n  // Names, places, and companies.\n  beyonce: 'beyoncé',\n  bronte: 'brontë',\n  'champs-elysees': 'champs-Élysées',\n  citroen: 'citroën',\n  curacao: 'curaçao',\n  'haagen-dazs': 'häagen-dazs',\n  'haagen dazs': 'häagen-dazs',\n  lowenbrau: 'löwenbräu',\n  monegasque: 'monégasque',\n  'motley crue': 'mötley crüe',\n  nescafe: 'nescafé',\n  queensryche: 'Queensrÿche',\n  quebec: 'québec',\n  quebecois: 'québécois',\n  Angstrom: 'Ångström',\n  angstrom: 'ångström',\n  skoda: 'Škoda'\n}\n","import retextEnglish, {Parser} from './lib/index.js'\n\nexport {Parser}\nexport default retextEnglish\n","/**\n * @typedef {import('nlcst').Root} Root\n */\n\nimport {unherit} from 'unherit'\n// @ts-expect-error: untyped.\nimport {ParseEnglish} from 'parse-english'\n\n/** @type {import('unified').ParserClass<Root>} */\nexport const Parser = ParseEnglish\n\n/** @type {import('unified').Plugin<void[], string, Root>} */\nexport default function retextEnglish() {\n  Object.assign(this, {Parser: unherit(ParseEnglish)})\n}\n","import {factory} from './lib/factory.js'\nimport {patterns} from './lib/en.js'\n\nconst retextEquality = factory(patterns, 'en')\n\nexport default retextEquality\n","/**\n * @typedef {import('./lib/factory.js').Options} Options\n */\n\nimport retextEquality from './en.js'\n\nexport default retextEquality\n","/**\n * @typedef Pattern\n * @property {string} id\n * @property {'or'|'basic'} type\n * @property {string[]} categories\n * @property {Record<string, string>} [considerate]\n * @property {Record<string, string>} inconsiderate\n * @property {string} [condition]\n * @property {string} [note]\n * @property {boolean} [apostrophe]\n */\n\n/** @type {Pattern[]} */\nexport const patterns = [\n  {\n    id: 'learning-disabled',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with learning disabilities': 'a'\n    },\n    inconsiderate: {\n      'learning disabled': 'a'\n    },\n    note: 'Refer to the person, rather than the disability, first.'\n  },\n  {\n    id: 'invalid',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'turned off': 'a',\n      'has a disability': 'a',\n      'person with a disability': 'a',\n      'people with disabilities': 'a'\n    },\n    inconsiderate: {\n      disabled: 'a',\n      invalid: 'a'\n    },\n    note: 'Refer to the person, rather than the disability, first.'\n  },\n  {\n    id: 'birth-defect',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'has a disability': 'a',\n      'person with a disability': 'a',\n      'people with disabilities': 'a'\n    },\n    inconsiderate: {\n      'birth defect': 'a'\n    },\n    note: 'Assumes/implies that a person with a disability is deficient or inferior to others. When possible, specify the functional ability or its restriction. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'suffers-from-disabilities',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'has a disability': 'a',\n      'person with a disability': 'a',\n      'people with disabilities': 'a'\n    },\n    inconsiderate: {\n      'suffers from disabilities': 'a',\n      'suffering from disabilities': 'a',\n      'suffering from a disability': 'a',\n      'afflicted with disabilities': 'a',\n      'afflicted with a disability': 'a'\n    },\n    note: 'Assumes that a person with a disability has a reduced quality of life. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'intellectually-disabled-people',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'people with intellectual disabilities': 'a'\n    },\n    inconsiderate: {\n      'intellectually disabled people': 'a'\n    },\n    note: 'Refer to the person, rather than the disability, first. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'intellectually-disabled',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with an intellectual disability': 'a'\n    },\n    inconsiderate: {\n      'intellectually disabled': 'a',\n      'has intellectual issues': 'a',\n      'suffers from intellectual disabilities': 'a',\n      'suffering from intellectual disabilities': 'a',\n      'suffering from an intellectual disability': 'a',\n      'afflicted with intellectual disabilities': 'a',\n      'afflicted with a intellectual disability': 'a'\n    },\n    note: 'Assumes that a person with an intellectual disability has a reduced quality of life. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'nuts',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      rude: 'a',\n      malicious: 'a',\n      mean: 'a',\n      disgusting: 'a',\n      incredible: 'a',\n      vile: 'a',\n      'person with symptoms of mental illness': 'a',\n      'person with mental illness': 'a',\n      'person with symptoms of a mental disorder': 'a',\n      'person with a mental disorder': 'a'\n    },\n    inconsiderate: {\n      batshit: 'a',\n      psycho: 'a',\n      crazy: 'a',\n      delirious: 'a',\n      insane: 'a',\n      insanity: 'a',\n      loony: 'a',\n      lunacy: 'a',\n      lunatic: 'a',\n      'mentally ill': 'a',\n      psychopathology: 'a',\n      'mental defective': 'a',\n      moron: 'a',\n      moronic: 'a',\n      nuts: 'a',\n      'mental case': 'a',\n      mental: 'a'\n    },\n    note: 'Describe the behavior or illness without derogatory words. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'insanely',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      incredibly: 'a'\n    },\n    inconsiderate: {\n      insanely: 'a'\n    },\n    note: 'Describe the behavior or illness without derogatory words.'\n  },\n  {\n    id: 'sane',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      correct: 'a',\n      adequate: 'a',\n      sufficient: 'a',\n      consistent: 'a',\n      valid: 'a',\n      coherent: 'a',\n      sensible: 'a',\n      reasonable: 'a'\n    },\n    inconsiderate: {\n      sane: 'a'\n    },\n    note: 'When describing a mathematical or programmatic value, using the word “sane” needlessly invokes the topic of mental health.  Consider using a domain-specific or neutral term instead.'\n  },\n  {\n    id: 'sanity-check',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      check: 'a',\n      assertion: 'a',\n      validation: 'a',\n      'smoke test': 'a'\n    },\n    inconsiderate: {\n      'sanity check': 'a'\n    },\n    note: 'When describing a mathematical or programmatic value, using the phrase “sanity check” needlessly invokes the topic of mental health.  Consider using simply “check”, or a domain-specific or neutral term, instead.'\n  },\n  {\n    id: 'bipolar',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      fluctuating: 'a',\n      'person with bipolar disorder': 'a'\n    },\n    inconsiderate: {\n      bipolar: 'a'\n    },\n    note: 'Only use terms describing mental illness when referring to a professionally diagnosed medical condition. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'schizo',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with schizophrenia': 'a'\n    },\n    inconsiderate: {\n      schizophrenic: 'a',\n      schizo: 'a'\n    },\n    note: 'Only use terms describing mental illness when referring to a professionally diagnosed medical condition. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'manic',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with schizophrenia': 'a'\n    },\n    inconsiderate: {\n      'suffers from schizophrenia': 'a',\n      'suffering from schizophrenia': 'a',\n      'afflicted with schizophrenia': 'a',\n      manic: 'a'\n    },\n    note: 'Assumes a person with schizophrenia experiences a reduced quality of life. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'handicapped-parking',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'accessible parking': 'a'\n    },\n    inconsiderate: {\n      'handicapped parking': 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'handicapped',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with a handicap': 'a',\n      accessible: 'a'\n    },\n    inconsiderate: {\n      handicapped: 'a'\n    },\n    note: 'Refer to the person, rather than the disability, first. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'amputee',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with an amputation': 'a'\n    },\n    inconsiderate: {\n      amputee: 'a'\n    },\n    note: 'Refer to the person, rather than the condition, first. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'gimp',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with a limp': 'a'\n    },\n    inconsiderate: {\n      cripple: 'a',\n      crippled: 'a',\n      gimp: 'a'\n    },\n    note: 'Refer to the specific disability.'\n  },\n  {\n    id: 'mongoloid',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with Down Syndrome': 'a'\n    },\n    inconsiderate: {\n      mongoloid: 'a'\n    }\n  },\n  {\n    id: 'stroke-victim',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'individual who has had a stroke': 'a'\n    },\n    inconsiderate: {\n      'stroke victim': 'a',\n      'suffering from a stroke': 'a',\n      'victim of a stroke': 'a'\n    },\n    note: 'Refer to the person, rather than the condition, first.'\n  },\n  {\n    id: 'multiple-sclerosis-victim',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person who has multiple sclerosis': 'a'\n    },\n    inconsiderate: {\n      'suffers from multiple sclerosis': 'a',\n      'suffering from multiple sclerosis': 'a',\n      'victim of multiple sclerosis': 'a',\n      'multiple sclerosis victim': 'a',\n      'afflicted with multiple sclerosis': 'a'\n    }\n  },\n  {\n    id: 'suffers-from-md',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person who has muscular dystrophy': 'a'\n    },\n    inconsiderate: {\n      'suffers from muscular dystrophy': 'a',\n      'afflicted with muscular dystrophy': 'a',\n      'suffers from MD': 'a',\n      'afflicted with MD': 'a'\n    },\n    note: \"Refer to a person's condition as a state, not as an affliction. (source: https://ncdj.org/style-guide)\"\n  },\n  {\n    id: 'family-burden',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'with family support needs': 'a'\n    },\n    inconsiderate: {\n      'family burden': 'a'\n    }\n  },\n  {\n    id: 'asylum',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'psychiatric hospital': 'a',\n      'mental health hospital': 'a'\n    },\n    inconsiderate: {\n      asylum: 'a'\n    }\n  },\n  {\n    id: 'bedlam',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      chaos: 'a',\n      hectic: 'a',\n      pandemonium: 'a'\n    },\n    inconsiderate: {\n      bedlam: 'a',\n      madhouse: 'a',\n      'loony bin': 'a'\n    }\n  },\n  {\n    id: 'downs-syndrome',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'Down Syndrome': 'a'\n    },\n    inconsiderate: {\n      'downs syndrome': 'a'\n    },\n    note: 'Source: https://media.specialolympics.org/soi/files/press-kit/2014_FactSheet_Final.pdf'\n  },\n  {\n    id: 'retard',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      silly: 'a',\n      dullard: 'a',\n      'person with Down Syndrome': 'a',\n      'person with developmental disabilities': 'a',\n      delay: 'a',\n      'hold back': 'a'\n    },\n    inconsiderate: {\n      retard: 'a',\n      retarded: 'a',\n      'short bus': 'a'\n    }\n  },\n  {\n    id: 'retards',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      sillies: 'a',\n      dullards: 'a',\n      'people with developmental disabilities': 'a',\n      'people with Down’s Syndrome': 'a',\n      delays: 'a',\n      'holds back': 'a'\n    },\n    inconsiderate: {\n      retards: 'a'\n    }\n  },\n  {\n    id: 'psychotic',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with a psychotic condition': 'a',\n      'person with psychosis': 'a'\n    },\n    inconsiderate: {\n      psychotic: 'a',\n      'suffers from psychosis': 'a',\n      'suffering from psychosis': 'a',\n      'afflicted with psychosis': 'a',\n      'victim of psychosis': 'a'\n    },\n    note: 'Only use terms describing mental illness when referring to a professionally diagnosed medical condition.'\n  },\n  {\n    id: 'lame',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      boring: 'a',\n      dull: 'a'\n    },\n    inconsiderate: {\n      lame: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'aids-victim',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with AIDS': 'a'\n    },\n    inconsiderate: {\n      'suffering from aids': 'a',\n      'suffer from aids': 'a',\n      'suffers from aids': 'a',\n      'afflicted with aids': 'a',\n      'victim of aids': 'a',\n      'aids victim': 'a'\n    }\n  },\n  {\n    id: 'wheelchair-bound',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'uses a wheelchair': 'a'\n    },\n    inconsiderate: {\n      'confined to a wheelchair': 'a',\n      'bound to a wheelchair': 'a',\n      'restricted to a wheelchair': 'a',\n      'wheelchair bound': 'a'\n    }\n  },\n  {\n    id: 'special-olympians',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      athletes: 'a',\n      'Special Olympics athletes': 'a'\n    },\n    inconsiderate: {\n      'special olympians': 'a',\n      'special olympic athletes': 'a'\n    },\n    note: 'When possible, use the exact discipline of sport. (source: https://media.specialolympics.org/soi/files/press-kit/2014_FactSheet_Final.pdf)'\n  },\n  {\n    id: 'ablebodied',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'non-disabled': 'a'\n    },\n    inconsiderate: {\n      ablebodied: 'a'\n    },\n    note: 'Can imply that people with disabilities lack the ability to use their bodies well. Sometimes `typical` can be used. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'addict',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with a drug addiction': 'a',\n      'person recovering from a drug addiction': 'a'\n    },\n    inconsiderate: {\n      addict: 'a',\n      junkie: 'a'\n    },\n    note: 'Addiction is a neurobiological disease. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'addicts',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'people with a drug addiction': 'a',\n      'people recovering from a drug addiction': 'a'\n    },\n    inconsiderate: {\n      addicts: 'a',\n      junkies: 'a'\n    },\n    note: 'Addiction is a neurobiological disease. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'alcoholic',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'someone with an alcohol problem': 'a'\n    },\n    inconsiderate: {\n      alcoholic: 'a',\n      'alcohol abuser': 'a'\n    },\n    note: 'Alcoholism is a neurobiological disease. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'deafmute',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      deaf: 'a'\n    },\n    inconsiderate: {\n      'deaf and dumb': 'a',\n      deafmute: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'senile',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with dementia': 'a'\n    },\n    inconsiderate: {\n      demented: 'a',\n      senile: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'depressed',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      sad: 'a',\n      blue: 'a',\n      'bummed out': 'a',\n      'person with seasonal affective disorder': 'a',\n      'person with psychotic depression': 'a',\n      'person with postpartum depression': 'a'\n    },\n    inconsiderate: {\n      depressed: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'dwarf',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with dwarfism': 'a',\n      'little person': 'a',\n      'little people': 'a',\n      LP: 'a',\n      'person of short stature': 'a'\n    },\n    inconsiderate: {\n      'vertically challenged': 'a',\n      midget: 'a',\n      'small person': 'a',\n      dwarf: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/,https://www.lpaonline.org/faq-#Midget'\n  },\n  {\n    id: 'dyslexic',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with dyslexia': 'a'\n    },\n    inconsiderate: {\n      dyslexic: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'epileptic',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with epilepsy': 'a'\n    },\n    inconsiderate: {\n      epileptic: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'hearing-impaired',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'hard of hearing': 'a',\n      'partially deaf': 'a',\n      'partial hearing loss': 'a',\n      deaf: 'a'\n    },\n    inconsiderate: {\n      'hearing impaired': 'a',\n      'hearing impairment': 'a'\n    },\n    note: 'When possible, ask the person what they prefer. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'victim-of-polio',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      polio: 'a',\n      'person who had polio': 'a'\n    },\n    inconsiderate: {\n      'infantile paralysis': 'a',\n      'suffers from polio': 'a',\n      'suffering from polio': 'a',\n      'suffering from a polio': 'a',\n      'afflicted with polio': 'a',\n      'afflicted with a polio': 'a',\n      'victim of polio': 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'victim-of-an-injury',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'sustain an injury': 'a',\n      'receive an injury': 'a'\n    },\n    inconsiderate: {\n      'suffer from an injury': 'a',\n      'suffers from an injury': 'a',\n      'suffering from an injury': 'a',\n      'afflicted with an injury': 'a',\n      'victim of an injury': 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'victim-of-injuries',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'sustain injuries': 'a',\n      'receive injuries': 'a'\n    },\n    inconsiderate: {\n      'suffer from injuries': 'a',\n      'suffers from injuries': 'a',\n      'suffering from injuries': 'a',\n      'afflicted with injuries': 'a',\n      'victim of injuries': 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'paraplegic',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with paraplegia': 'a'\n    },\n    inconsiderate: {\n      paraplegic: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'quadriplegic',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with quadriplegia': 'a'\n    },\n    inconsiderate: {\n      quadriplegic: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'spaz',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with cerebral palsy': 'a',\n      twitch: 'a',\n      flinch: 'a',\n      hectic: 'a'\n    },\n    inconsiderate: {\n      spaz: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'spastic',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with cerebral palsy': 'a',\n      twitch: 'a',\n      flinch: 'a'\n    },\n    inconsiderate: {\n      spastic: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'stammering',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      stuttering: 'a',\n      'disfluency of speech': 'a'\n    },\n    inconsiderate: {\n      stammering: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'stutterer',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person who stutters': 'a'\n    },\n    inconsiderate: {\n      stutterer: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'tourettes-syndrome',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'Tourette syndrome': 'a'\n    },\n    inconsiderate: {\n      'tourettes syndrome': 'a',\n      'tourettes disorder': 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'rehab-center',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'treatment center': 'a'\n    },\n    inconsiderate: {\n      'rehab center': 'a',\n      'detox center': 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'rehab',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      treatment: 'a'\n    },\n    inconsiderate: {\n      rehab: 'a',\n      detox: 'a'\n    },\n    note: 'Source: https://ncdj.org/style-guide/'\n  },\n  {\n    id: 'sociopath',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with a personality disorder': 'a',\n      'person with psychopathic personality': 'a'\n    },\n    inconsiderate: {\n      sociopath: 'a'\n    },\n    note: 'Only use terms describing mental illness when referring to a professionally diagnosed medical condition. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'sociopaths',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'people with psychopathic personalities': 'a',\n      'people with a personality disorder': 'a'\n    },\n    inconsiderate: {\n      sociopaths: 'a'\n    },\n    note: 'Only use terms describing mental illness when referring to a professionally diagnosed medical condition. (source: https://ncdj.org/style-guide/)'\n  },\n  {\n    id: 'dumb',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      foolish: 'a',\n      ludicrous: 'a',\n      speechless: 'a',\n      silent: 'a'\n    },\n    inconsiderate: {\n      dumb: 'a'\n    },\n    note: 'Dumb here is used in 2 different contexts , the inability to talk or as a curse word. (source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html)'\n  },\n  {\n    id: 'wacko',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      foolish: 'a',\n      ludicrous: 'a',\n      unintelligent: 'a'\n    },\n    inconsiderate: {\n      simpleton: 'a',\n      stupid: 'a',\n      wacko: 'a',\n      whacko: 'a',\n      'low iq': 'a'\n    },\n    note: 'Source: http://www.mmonjejr.com/2014/02/deconstructing-stupid.html'\n  },\n  {\n    id: 'panic-attack',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'fit of terror': 'a',\n      scare: 'a'\n    },\n    inconsiderate: {\n      'panic attack': 'a'\n    }\n  },\n  {\n    id: 'bony',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      thin: 'a',\n      slim: 'a'\n    },\n    inconsiderate: {\n      anorexic: 'a',\n      bony: 'a'\n    }\n  },\n  {\n    id: 'ocd',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'has an anxiety disorder': 'a',\n      obsessive: 'a',\n      pedantic: 'a',\n      niggly: 'a',\n      picky: 'a'\n    },\n    inconsiderate: {\n      neurotic: 'a',\n      ocd: 'a',\n      'o.c.d': 'a',\n      'o.c.d.': 'a'\n    },\n    note: 'Only use terms describing mental illness when referring to a professionally diagnosed medical condition. (source: https://english.stackexchange.com/questions/247550/)'\n  },\n  {\n    id: 'insomnia',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      restlessness: 'a',\n      sleeplessness: 'a'\n    },\n    inconsiderate: {\n      insomnia: 'a'\n    }\n  },\n  {\n    id: 'insomniac',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person who has insomnia': 'a'\n    },\n    inconsiderate: {\n      insomniac: 'a'\n    }\n  },\n  {\n    id: 'insomniacs',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'people who have insomnia': 'a'\n    },\n    inconsiderate: {\n      insomniacs: 'a'\n    }\n  },\n  {\n    id: 'barren',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      empty: 'a',\n      sterile: 'a',\n      infertile: 'a'\n    },\n    inconsiderate: {\n      barren: 'a'\n    },\n    note: 'Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html'\n  },\n  {\n    id: 'deaf-to',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      careless: 'a',\n      heartless: 'a',\n      indifferent: 'a',\n      insensitive: 'a'\n    },\n    inconsiderate: {\n      'blind to': 'a',\n      'blind eye to': 'a',\n      'blinded by': 'a',\n      'deaf to': 'a',\n      'deaf ear to': 'a',\n      'deafened by': 'a'\n    },\n    note: 'Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html'\n  },\n  {\n    id: 'cretin',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      creep: 'a',\n      fool: 'a'\n    },\n    inconsiderate: {\n      cretin: 'a'\n    },\n    note: 'Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html'\n  },\n  {\n    id: 'daft',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      absurd: 'a',\n      foolish: 'a'\n    },\n    inconsiderate: {\n      daft: 'a'\n    },\n    note: 'Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html'\n  },\n  {\n    id: 'idiot',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      foolish: 'a',\n      ludicrous: 'a',\n      silly: 'a'\n    },\n    inconsiderate: {\n      feebleminded: 'a',\n      'feeble minded': 'a',\n      idiot: 'a',\n      imbecile: 'a'\n    },\n    note: 'Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html'\n  },\n  {\n    id: 'harelipped',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with a cleft-lip and palate': 'a'\n    },\n    inconsiderate: {\n      harelipped: 'a',\n      cleftlipped: 'a'\n    },\n    note: \"Sometimes it's cleft lip or palate, not both. Specify when possible. (source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html)\"\n  },\n  {\n    id: 'harelip',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'cleft-lip and palate': 'a'\n    },\n    inconsiderate: {\n      harelip: 'a',\n      'hare lip': 'a'\n    },\n    note: 'Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html'\n  },\n  {\n    id: 'maniac',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      fanatic: 'a',\n      zealot: 'a',\n      enthusiast: 'a'\n    },\n    inconsiderate: {\n      maniac: 'a'\n    },\n    note: 'Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html'\n  },\n  {\n    id: 'buckteeth',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person with prominent teeth': 'a',\n      'prominent teeth': 'a'\n    },\n    inconsiderate: {\n      bucktoothed: 'a',\n      buckteeth: 'a'\n    }\n  },\n  {\n    id: 'special',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'has a disability': 'a',\n      'person with a disability': 'a',\n      'people with disabilities': 'a'\n    },\n    inconsiderate: {\n      challenged: 'a',\n      diffability: 'a',\n      'differently abled': 'a',\n      handicapable: 'a',\n      special: 'a',\n      'special needs': 'a',\n      'specially abled': 'a'\n    },\n    note: 'Euphemisms for disabilities can be infantilizing. (source: http://cdrnys.org/blog/disability-dialogue/the-disability-dialogue-4-disability-euphemisms-that-need-to-bite-the-dust/,https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html)'\n  },\n  {\n    id: 'libtard',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      disagreeable: 'a',\n      uneducated: 'a',\n      ignorant: 'a',\n      naive: 'a',\n      inconsiderate: 'a'\n    },\n    inconsiderate: {\n      fucktard: 'a',\n      libtard: 'a',\n      contard: 'a'\n    },\n    note: 'Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html'\n  },\n  {\n    id: 'add',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      disorganized: 'a',\n      distracted: 'a',\n      energetic: 'a',\n      hyperactive: 'a',\n      impetuous: 'a',\n      impulsive: 'a',\n      inattentive: 'a',\n      restless: 'a',\n      unfocused: 'a'\n    },\n    inconsiderate: {\n      ADD: 'a',\n      adhd: 'a',\n      'a.d.d.': 'a',\n      'a.d.h.d.': 'a'\n    }\n  },\n  {\n    id: 'dummy',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'test double': 'a',\n      placeholder: 'a',\n      fake: 'a',\n      stub: 'a'\n    },\n    inconsiderate: {\n      dummyvariable: 'a',\n      dummyvalue: 'a',\n      dummyobject: 'a',\n      dummy: 'a'\n    },\n    note: 'Dummy can refer to the inability to talk or be used as a derogatory word meaning stupid. In computer programming it is used where a value or behavior is unimportant. There are better alternatives for other use cases also.'\n  },\n  {\n    id: 'binge',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      enthusiastic: 'a',\n      spree: 'a'\n    },\n    inconsiderate: {\n      binge: 'a'\n    },\n    note: 'Binge might be insensitive towards folks with eating or drinking disorders (source: https://github.com/retextjs/retext-equality/issues/110)'\n  },\n  {\n    id: 'obvious',\n    type: 'basic',\n    categories: ['a'],\n    inconsiderate: {\n      obvious: 'a',\n      obviously: 'a'\n    },\n    note: 'Not everything is as obvious as you might think. And if it isn’t obvious to the reader, it can hurt. (source: https://css-tricks.com/words-avoid-educational-writing/)'\n  },\n  {\n    id: 'just',\n    type: 'basic',\n    categories: ['a'],\n    inconsiderate: {\n      just: 'a'\n    },\n    note: 'Not everything is as easy as you might think. And if it isn’t easy for the reader, it can hurt. (source: https://css-tricks.com/words-avoid-educational-writing/)'\n  },\n  {\n    id: 'basically',\n    type: 'basic',\n    categories: ['a'],\n    inconsiderate: {\n      basically: 'a'\n    },\n    note: 'It’s probably not that basic. If you’re going to explain a confusing previous sentence with a clearer next sentence, why not drop the former and only use the latter? (source: https://css-tricks.com/words-avoid-educational-writing/)'\n  },\n  {\n    id: 'simple',\n    type: 'basic',\n    categories: ['a'],\n    inconsiderate: {\n      simple: 'a',\n      simply: 'a'\n    },\n    note: 'It’s probably not that simple. Even if it is, you probably don’t need to specifically say it. (source: https://css-tricks.com/words-avoid-educational-writing/)'\n  },\n  {\n    id: 'easy',\n    type: 'basic',\n    categories: ['a'],\n    inconsiderate: {\n      easy: 'a',\n      easily: 'a'\n    },\n    note: 'It’s probably not that easy. Even if it is, you probably don’t need to specifically say it. (source: https://css-tricks.com/words-avoid-educational-writing/)'\n  },\n  {\n    id: 'of-course',\n    type: 'basic',\n    categories: ['a'],\n    inconsiderate: {\n      'of course': 'a'\n    },\n    note: 'If it’s self-evident then maybe you don’t need to describe it. If it isn’t, don’t say it. (source: https://css-tricks.com/words-avoid-educational-writing/)'\n  },\n  {\n    id: 'clearly',\n    type: 'basic',\n    categories: ['a'],\n    inconsiderate: {\n      clearly: 'a'\n    },\n    note: 'If it’s self-evident then maybe you don’t need to describe it. If it isn’t, don’t say it. (source: https://css-tricks.com/words-avoid-educational-writing/)'\n  },\n  {\n    id: 'everyone-knows',\n    type: 'basic',\n    categories: ['a'],\n    inconsiderate: {\n      'everyone knows': 'a'\n    },\n    note: 'If it’s self-evident then maybe you don’t need to describe it. If it isn’t, don’t say it. (source: https://css-tricks.com/words-avoid-educational-writing/)'\n  },\n  {\n    id: 'her-him',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      their: 'a',\n      theirs: 'a',\n      them: 'a'\n    },\n    inconsiderate: {\n      her: 'female',\n      hers: 'female',\n      him: 'male',\n      his: 'male'\n    },\n    condition: 'when referring to a person'\n  },\n  {\n    id: 'he-she',\n    type: 'or',\n    apostrophe: true,\n    categories: ['female', 'male'],\n    considerate: {\n      they: 'a',\n      it: 'a'\n    },\n    inconsiderate: {\n      she: 'female',\n      he: 'male',\n      \"she'd\": 'female',\n      \"he'd\": 'male',\n      \"she'll\": 'female',\n      \"he'll\": 'male',\n      \"she's\": 'female',\n      \"he's\": 'male'\n    }\n  },\n  {\n    id: 'herself-himself',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      themselves: 'a',\n      theirself: 'a',\n      self: 'a'\n    },\n    inconsiderate: {\n      herself: 'female',\n      himself: 'male'\n    }\n  },\n  {\n    id: 'boy-girl',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      kid: 'a',\n      child: 'a',\n      youth: 'a'\n    },\n    inconsiderate: {\n      girl: 'female',\n      boy: 'male'\n    },\n    condition: 'when referring to a person'\n  },\n  {\n    id: 'gals-man',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      people: 'a',\n      persons: 'a',\n      folks: 'a'\n    },\n    inconsiderate: {\n      women: 'female',\n      girls: 'female',\n      gals: 'female',\n      ladies: 'female',\n      man: 'male',\n      boys: 'male',\n      men: 'male',\n      guys: 'male',\n      dudes: 'male',\n      gents: 'male',\n      gentlemen: 'male'\n    }\n  },\n  {\n    id: 'gal-guy',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      person: 'a',\n      friend: 'a',\n      pal: 'a',\n      folk: 'a',\n      individual: 'a'\n    },\n    inconsiderate: {\n      woman: 'female',\n      gal: 'female',\n      lady: 'female',\n      babe: 'female',\n      bimbo: 'female',\n      chick: 'female',\n      guy: 'male',\n      lad: 'male',\n      fellow: 'male',\n      dude: 'male',\n      bro: 'male',\n      gentleman: 'male'\n    }\n  },\n  {\n    id: 'fatherland-motherland',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'native land': 'a',\n      homeland: 'a'\n    },\n    inconsiderate: {\n      motherland: 'female',\n      fatherland: 'male'\n    }\n  },\n  {\n    id: 'father-tongue-mother-tongue',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'native tongue': 'a',\n      'native language': 'a'\n    },\n    inconsiderate: {\n      'mother tongue': 'female',\n      'father tongue': 'male'\n    }\n  },\n  {\n    id: 'freshmen-freshwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'first-year students': 'a',\n      freshers: 'a'\n    },\n    inconsiderate: {\n      freshwomen: 'female',\n      freshmen: 'male'\n    }\n  },\n  {\n    id: 'garbageman-garbagewoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'garbage collector': 'a',\n      'waste collector': 'a',\n      'trash collector': 'a'\n    },\n    inconsiderate: {\n      garbagewoman: 'female',\n      garbageman: 'male'\n    }\n  },\n  {\n    id: 'garbagemen-garbagewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'garbage collectors': 'a',\n      'waste collectors': 'a',\n      'trash collectors': 'a'\n    },\n    inconsiderate: {\n      garbagewomen: 'female',\n      garbagemen: 'male'\n    }\n  },\n  {\n    id: 'chairman-chairwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      chair: 'a',\n      head: 'a',\n      chairperson: 'a',\n      coordinator: 'a',\n      'committee head': 'a',\n      moderator: 'a',\n      'presiding officer': 'a'\n    },\n    inconsiderate: {\n      chairwoman: 'female',\n      chairman: 'male'\n    }\n  },\n  {\n    id: 'committee-man-committee-woman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'committee member': 'a'\n    },\n    inconsiderate: {\n      'committee woman': 'female',\n      'committee man': 'male'\n    }\n  },\n  {\n    id: 'cowboy-cowgirl',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      cowhand: 'a'\n    },\n    inconsiderate: {\n      cowgirl: 'female',\n      cowboy: 'male'\n    }\n  },\n  {\n    id: 'cowboys-cowgirls',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      cowhands: 'a'\n    },\n    inconsiderate: {\n      cowgirls: 'female',\n      cowboys: 'male'\n    }\n  },\n  {\n    id: 'cattleman-cattlewoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'cattle rancher': 'a'\n    },\n    inconsiderate: {\n      cattlewoman: 'female',\n      cattleman: 'male'\n    }\n  },\n  {\n    id: 'cattlemen-cattlewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'cattle ranchers': 'a'\n    },\n    inconsiderate: {\n      cattlewomen: 'female',\n      cattlemen: 'male'\n    }\n  },\n  {\n    id: 'chairmen-chairwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      chairs: 'a',\n      chairpersons: 'a',\n      coordinators: 'a'\n    },\n    inconsiderate: {\n      chairwomen: 'female',\n      chairmen: 'male'\n    }\n  },\n  {\n    id: 'postman-postwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'mail carrier': 'a',\n      'letter carrier': 'a',\n      'postal worker': 'a'\n    },\n    inconsiderate: {\n      postwoman: 'female',\n      mailwoman: 'female',\n      postman: 'male',\n      mailman: 'male'\n    }\n  },\n  {\n    id: 'postmen-postwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'mail carriers': 'a',\n      'letter carriers': 'a',\n      'postal workers': 'a'\n    },\n    inconsiderate: {\n      postwomen: 'female',\n      mailwomen: 'female',\n      postmen: 'male',\n      mailmen: 'male'\n    }\n  },\n  {\n    id: 'chick-cop-policeman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      officer: 'a',\n      'police officer': 'a'\n    },\n    inconsiderate: {\n      policewoman: 'female',\n      policeman: 'male',\n      'chick cop': 'female'\n    }\n  },\n  {\n    id: 'policemen-policewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      officers: 'a',\n      'police officers': 'a'\n    },\n    inconsiderate: {\n      policewomen: 'female',\n      policemen: 'male'\n    }\n  },\n  {\n    id: 'steward-stewardess',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'flight attendant': 'a'\n    },\n    inconsiderate: {\n      stewardess: 'female',\n      steward: 'male'\n    }\n  },\n  {\n    id: 'stewardesses-stewards',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'flight attendants': 'a'\n    },\n    inconsiderate: {\n      stewardesses: 'female',\n      stewards: 'male'\n    }\n  },\n  {\n    id: 'congressman-congresswoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'member of congress': 'a',\n      'congress person': 'a',\n      legislator: 'a',\n      representative: 'a'\n    },\n    inconsiderate: {\n      congresswoman: 'female',\n      congressman: 'male'\n    }\n  },\n  {\n    id: 'congressmen-congresswomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'members of congress': 'a',\n      'congress persons': 'a',\n      legislators: 'a',\n      representatives: 'a'\n    },\n    inconsiderate: {\n      congresswomen: 'female',\n      congressmen: 'male'\n    }\n  },\n  {\n    id: 'fireman-firewoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'fire fighter': 'a',\n      'fire officer': 'a'\n    },\n    inconsiderate: {\n      firewoman: 'female',\n      fireman: 'male'\n    }\n  },\n  {\n    id: 'firemen-firewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'fire fighters': 'a'\n    },\n    inconsiderate: {\n      firewomen: 'female',\n      firemen: 'male'\n    }\n  },\n  {\n    id: 'fisherman-fisherwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      fisher: 'a',\n      'crew member': 'a',\n      fisherfolk: 'a',\n      angler: 'a'\n    },\n    inconsiderate: {\n      fisherwoman: 'female',\n      fisherman: 'male'\n    }\n  },\n  {\n    id: 'fishermen-fisherwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      fishers: 'a'\n    },\n    inconsiderate: {\n      fisherwomen: 'female',\n      fishermen: 'male'\n    }\n  },\n  {\n    id: 'brotherhood-sisterhood',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      kinship: 'a',\n      community: 'a'\n    },\n    inconsiderate: {\n      sisterhood: 'female',\n      brotherhood: 'male'\n    }\n  },\n  {\n    id: 'common-girl-common-man',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'common person': 'a',\n      'average person': 'a'\n    },\n    inconsiderate: {\n      'common girl': 'female',\n      'common man': 'male'\n    }\n  },\n  {\n    id: 'salaryman-salarywoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'business executive': 'a',\n      entrepreneur: 'a',\n      'business person': 'a',\n      professional: 'a'\n    },\n    inconsiderate: {\n      businesswoman: 'female',\n      salarywoman: 'female',\n      businessman: 'male',\n      salaryman: 'male'\n    }\n  },\n  {\n    id: 'salarymen-salarywomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'business executives': 'a',\n      entrepreneurs: 'a'\n    },\n    inconsiderate: {\n      businesswomen: 'female',\n      salarywomen: 'female',\n      'career girl': 'female',\n      'career woman': 'female',\n      businessmen: 'male',\n      salarymen: 'male'\n    }\n  },\n  {\n    id: 'janitor-janitress',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      cleaner: 'a'\n    },\n    inconsiderate: {\n      'cleaning lady': 'female',\n      'cleaning girl': 'female',\n      'cleaning woman': 'female',\n      janitress: 'female',\n      'cleaning man': 'male',\n      'cleaning boy': 'male',\n      janitor: 'male'\n    }\n  },\n  {\n    id: 'janitors-janitresses',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      cleaners: 'a',\n      housekeeping: 'a'\n    },\n    inconsiderate: {\n      'cleaning ladies': 'female',\n      'cleaning girls': 'female',\n      janitresses: 'female',\n      'cleaning men': 'male',\n      janitors: 'male'\n    }\n  },\n  {\n    id: 'delivery-boy-delivery-girl',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      courier: 'a',\n      messenger: 'a'\n    },\n    inconsiderate: {\n      'delivery girl': 'female',\n      'delivery boy': 'male'\n    }\n  },\n  {\n    id: 'foreman-forewoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      supervisor: 'a',\n      'shift boss': 'a'\n    },\n    inconsiderate: {\n      forewoman: 'female',\n      foreman: 'male'\n    }\n  },\n  {\n    id: 'frontman,-front-man-frontwoman,-front-woman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      lead: 'a',\n      front: 'a',\n      figurehead: 'a'\n    },\n    inconsiderate: {\n      'frontwoman, front woman': 'female',\n      'frontman, front man': 'male'\n    }\n  },\n  {\n    id: 'front-men,-frontmen-front-women,-frontwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      figureheads: 'a'\n    },\n    inconsiderate: {\n      'front women, frontwomen': 'female',\n      'front men, frontmen': 'male'\n    }\n  },\n  {\n    id: 'foremen-forewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      supervisors: 'a',\n      'shift bosses': 'a'\n    },\n    inconsiderate: {\n      forewomen: 'female',\n      foremen: 'male'\n    }\n  },\n  {\n    id: 'insurance-man-insurance-woman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'insurance agent': 'a'\n    },\n    inconsiderate: {\n      'insurance woman': 'female',\n      'insurance man': 'male'\n    }\n  },\n  {\n    id: 'insurance-men-insurance-women',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'insurance agents': 'a'\n    },\n    inconsiderate: {\n      'insurance women': 'female',\n      'insurance men': 'male'\n    }\n  },\n  {\n    id: 'landlady-landlord',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      proprietor: 'a',\n      'building manager': 'a'\n    },\n    inconsiderate: {\n      landlady: 'female',\n      landlord: 'male'\n    }\n  },\n  {\n    id: 'landladies-landlords',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      proprietors: 'a',\n      'building managers': 'a'\n    },\n    inconsiderate: {\n      landladies: 'female',\n      landlords: 'male'\n    }\n  },\n  {\n    id: 'alumna-alumnus',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      graduate: 'a'\n    },\n    inconsiderate: {\n      alumna: 'female',\n      alumnus: 'male'\n    }\n  },\n  {\n    id: 'alumnae-alumni',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      graduates: 'a'\n    },\n    inconsiderate: {\n      alumnae: 'female',\n      alumni: 'male'\n    }\n  },\n  {\n    id: 'newsman-newswoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      anchor: 'a',\n      journalist: 'a'\n    },\n    inconsiderate: {\n      newswoman: 'female',\n      newspaperwoman: 'female',\n      anchorwoman: 'female',\n      newsman: 'male',\n      newspaperman: 'male',\n      anchorman: 'male'\n    }\n  },\n  {\n    id: 'newsmen-newswomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      anchors: 'a',\n      journalists: 'a'\n    },\n    inconsiderate: {\n      newswomen: 'female',\n      newspaperwomen: 'female',\n      anchorwomen: 'female',\n      newsmen: 'male',\n      newspapermen: 'male',\n      anchormen: 'male'\n    }\n  },\n  {\n    id: 'repairman-repairwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      repairer: 'a',\n      technician: 'a'\n    },\n    inconsiderate: {\n      repairwoman: 'female',\n      repairman: 'male'\n    }\n  },\n  {\n    id: 'repairmen-repairwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      technicians: 'a'\n    },\n    inconsiderate: {\n      repairwomen: 'female',\n      repairmen: 'male'\n    }\n  },\n  {\n    id: 'saleslady-salesman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      salesperson: 'a',\n      'sales clerk': 'a',\n      'sales rep': 'a',\n      'sales agent': 'a',\n      'sales attendant': 'a',\n      seller: 'a',\n      'shop assistant': 'a'\n    },\n    inconsiderate: {\n      saleswoman: 'female',\n      'sales woman': 'female',\n      saleslady: 'female',\n      salesman: 'male',\n      'sales man': 'male'\n    }\n  },\n  {\n    id: 'salesmen-saleswomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'sales clerks': 'a',\n      'sales reps': 'a',\n      'sales agents': 'a',\n      sellers: 'a'\n    },\n    inconsiderate: {\n      saleswomen: 'female',\n      'sales women': 'female',\n      salesladies: 'female',\n      salesmen: 'male',\n      'sales men': 'male'\n    }\n  },\n  {\n    id: 'serviceman-servicewoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      soldier: 'a',\n      'service representative': 'a'\n    },\n    inconsiderate: {\n      servicewoman: 'female',\n      serviceman: 'male'\n    }\n  },\n  {\n    id: 'servicemen-servicewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      soldiers: 'a',\n      'service representatives': 'a'\n    },\n    inconsiderate: {\n      servicewomen: 'female',\n      servicemen: 'male'\n    }\n  },\n  {\n    id: 'waiter-waitress',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      server: 'a'\n    },\n    inconsiderate: {\n      waitress: 'female',\n      waiter: 'male'\n    }\n  },\n  {\n    id: 'waiters-waitresses',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      servers: 'a'\n    },\n    inconsiderate: {\n      waitresses: 'female',\n      waiters: 'male'\n    }\n  },\n  {\n    id: 'workman-workwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      worker: 'a',\n      'wage earner': 'a',\n      taxpayer: 'a'\n    },\n    inconsiderate: {\n      workwoman: 'female',\n      'working woman': 'female',\n      workman: 'male',\n      'working man': 'male'\n    }\n  },\n  {\n    id: 'workmen-workwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      workers: 'a'\n    },\n    inconsiderate: {\n      workwomen: 'female',\n      workmen: 'male'\n    }\n  },\n  {\n    id: 'actor-actress',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      performer: 'a',\n      star: 'a',\n      artist: 'a',\n      entertainer: 'a'\n    },\n    inconsiderate: {\n      actress: 'female',\n      actor: 'male'\n    }\n  },\n  {\n    id: 'actors-actresses',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      performers: 'a',\n      stars: 'a',\n      artists: 'a',\n      entertainers: 'a'\n    },\n    inconsiderate: {\n      actresses: 'female',\n      actors: 'male'\n    }\n  },\n  {\n    id: 'aircrewwoman-airman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      pilot: 'a',\n      aviator: 'a',\n      airstaff: 'a'\n    },\n    inconsiderate: {\n      aircrewwoman: 'female',\n      'aircrew woman': 'female',\n      aircrewman: 'male',\n      airman: 'male'\n    }\n  },\n  {\n    id: 'aircrewwomen-airmen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      pilots: 'a',\n      aviators: 'a',\n      airstaff: 'a'\n    },\n    inconsiderate: {\n      aircrewwomen: 'female',\n      'aircrew women': 'female',\n      aircrewmen: 'male',\n      airmen: 'male'\n    }\n  },\n  {\n    id: 'alderman-alderwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'cabinet member': 'a'\n    },\n    inconsiderate: {\n      alderwoman: 'female',\n      alderman: 'male'\n    }\n  },\n  {\n    id: 'aldermen-alderwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      cabinet: 'a',\n      'cabinet members': 'a',\n      alderperson: 'a'\n    },\n    inconsiderate: {\n      alderwomen: 'female',\n      aldermen: 'male'\n    }\n  },\n  {\n    id: 'assemblyman-assemblywoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'assembly person': 'a',\n      'assembly worker': 'a'\n    },\n    inconsiderate: {\n      assemblywoman: 'female',\n      assemblyman: 'male'\n    }\n  },\n  {\n    id: 'aunt-uncle',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      relative: 'a'\n    },\n    inconsiderate: {\n      kinswoman: 'female',\n      aunt: 'female',\n      kinsman: 'male',\n      uncle: 'male'\n    }\n  },\n  {\n    id: 'aunts-uncles',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      relatives: 'a'\n    },\n    inconsiderate: {\n      kinswomen: 'female',\n      aunts: 'female',\n      kinsmen: 'male',\n      uncles: 'male'\n    }\n  },\n  {\n    id: 'boogeyman-boogeywoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      boogeymonster: 'a'\n    },\n    inconsiderate: {\n      boogeywoman: 'female',\n      boogeyman: 'male'\n    }\n  },\n  {\n    id: 'boogieman-boogiewoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      boogeymonster: 'a'\n    },\n    inconsiderate: {\n      boogiewoman: 'female',\n      boogieman: 'male'\n    }\n  },\n  {\n    id: 'bogeyman-bogeywoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      bogeymonster: 'a'\n    },\n    inconsiderate: {\n      bogeywoman: 'female',\n      bogeyman: 'male'\n    }\n  },\n  {\n    id: 'bogieman-bogiewoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      bogeymonster: 'a'\n    },\n    inconsiderate: {\n      bogiewoman: 'female',\n      bogieman: 'male'\n    }\n  },\n  {\n    id: 'boogiemen-boogiewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      boogeymonsters: 'a'\n    },\n    inconsiderate: {\n      boogiewomen: 'female',\n      boogiemen: 'male'\n    }\n  },\n  {\n    id: 'bogiemen-bogiewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      bogeymonsters: 'a'\n    },\n    inconsiderate: {\n      bogiewomen: 'female',\n      bogiemen: 'male'\n    }\n  },\n  {\n    id: 'bondsman-bondswoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      bonder: 'a'\n    },\n    inconsiderate: {\n      bondswoman: 'female',\n      bondsman: 'male'\n    }\n  },\n  {\n    id: 'bondsmen-bondswomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      bonders: 'a'\n    },\n    inconsiderate: {\n      bondswomen: 'female',\n      bondsmen: 'male'\n    }\n  },\n  {\n    id: 'husband-wife',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      partner: 'a',\n      'significant other': 'a',\n      spouse: 'a'\n    },\n    inconsiderate: {\n      wife: 'female',\n      husband: 'male'\n    },\n    note: 'Source: https://www.bustle.com/articles/108321-6-reasons-to-refer-to-your-significant-other-as-your-partner'\n  },\n  {\n    id: 'husbands-wives',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      partners: 'a',\n      'significant others': 'a',\n      spouses: 'a'\n    },\n    inconsiderate: {\n      wives: 'female',\n      husbands: 'male'\n    },\n    note: 'Source: https://www.bustle.com/articles/108321-6-reasons-to-refer-to-your-significant-other-as-your-partner'\n  },\n  {\n    id: 'boyfriend-girlfriend',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      partner: 'a',\n      friend: 'a',\n      'significant other': 'a'\n    },\n    inconsiderate: {\n      girlfriend: 'female',\n      boyfriend: 'male'\n    },\n    note: 'Source: https://www.bustle.com/articles/108321-6-reasons-to-refer-to-your-significant-other-as-your-partner'\n  },\n  {\n    id: 'boyfriends-girlfriends',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      partners: 'a',\n      friends: 'a',\n      'significant others': 'a'\n    },\n    inconsiderate: {\n      girlfriends: 'female',\n      boyfriends: 'male'\n    },\n    note: 'Source: https://www.bustle.com/articles/108321-6-reasons-to-refer-to-your-significant-other-as-your-partner'\n  },\n  {\n    id: 'boyhood-girlhood',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      childhood: 'a'\n    },\n    inconsiderate: {\n      girlhood: 'female',\n      boyhood: 'male'\n    }\n  },\n  {\n    id: 'boyish-girly',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      childish: 'a'\n    },\n    inconsiderate: {\n      girly: 'female',\n      girlish: 'female',\n      boyish: 'male'\n    }\n  },\n  {\n    id: 'journeyman-journeywoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      journeyperson: 'a'\n    },\n    inconsiderate: {\n      journeywoman: 'female',\n      journeyman: 'male'\n    }\n  },\n  {\n    id: 'journeymen-journeywomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      journeypersons: 'a'\n    },\n    inconsiderate: {\n      journeywomen: 'female',\n      journeymen: 'male'\n    }\n  },\n  {\n    id: 'godfather-godmother',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      godparent: 'a',\n      elder: 'a',\n      patron: 'a'\n    },\n    inconsiderate: {\n      godmother: 'female',\n      patroness: 'female',\n      godfather: 'male'\n    }\n  },\n  {\n    id: 'granddaughter-grandson',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      grandchild: 'a'\n    },\n    inconsiderate: {\n      granddaughter: 'female',\n      grandson: 'male'\n    }\n  },\n  {\n    id: 'granddaughters-grandsons',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      grandchildren: 'a'\n    },\n    inconsiderate: {\n      granddaughters: 'female',\n      grandsons: 'male'\n    }\n  },\n  {\n    id: 'forefather-foremother',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      ancestor: 'a'\n    },\n    inconsiderate: {\n      foremother: 'female',\n      forefather: 'male'\n    }\n  },\n  {\n    id: 'forefathers-foremothers',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      ancestors: 'a'\n    },\n    inconsiderate: {\n      foremothers: 'female',\n      forefathers: 'male'\n    }\n  },\n  {\n    id: 'gramps-granny',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      grandparent: 'a',\n      ancestor: 'a'\n    },\n    inconsiderate: {\n      granny: 'female',\n      grandma: 'female',\n      grandmother: 'female',\n      grandpappy: 'male',\n      granddaddy: 'male',\n      gramps: 'male',\n      grandpa: 'male',\n      grandfather: 'male'\n    }\n  },\n  {\n    id: 'grandfathers-grandmothers',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      grandparents: 'a',\n      ancestors: 'a'\n    },\n    inconsiderate: {\n      grandmothers: 'female',\n      grandfathers: 'male'\n    }\n  },\n  {\n    id: 'bride-groom',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      spouse: 'a',\n      newlywed: 'a'\n    },\n    inconsiderate: {\n      bride: 'female',\n      groom: 'male'\n    }\n  },\n  {\n    id: 'brother-sister',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      sibling: 'a'\n    },\n    inconsiderate: {\n      sister: 'female',\n      brother: 'male'\n    }\n  },\n  {\n    id: 'brothers-sisters',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      siblings: 'a'\n    },\n    inconsiderate: {\n      sisters: 'female',\n      brothers: 'male'\n    }\n  },\n  {\n    id: 'cameraman-camerawoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'camera operator': 'a',\n      'camera person': 'a'\n    },\n    inconsiderate: {\n      camerawoman: 'female',\n      cameraman: 'male'\n    }\n  },\n  {\n    id: 'cameramen-camerawomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'camera operators': 'a'\n    },\n    inconsiderate: {\n      camerawomen: 'female',\n      cameramen: 'male'\n    }\n  },\n  {\n    id: 'caveman-cavewoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      troglodyte: 'a',\n      hominidae: 'a'\n    },\n    inconsiderate: {\n      cavewoman: 'female',\n      caveman: 'male'\n    }\n  },\n  {\n    id: 'cavemen-cavewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      troglodytae: 'a',\n      troglodyti: 'a',\n      troglodytes: 'a',\n      hominids: 'a'\n    },\n    inconsiderate: {\n      cavewomen: 'female',\n      cavemen: 'male'\n    }\n  },\n  {\n    id: 'clergyman-clergywoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      clergyperson: 'a',\n      clergy: 'a',\n      cleric: 'a'\n    },\n    inconsiderate: {\n      clergywoman: 'female',\n      clergyman: 'male'\n    }\n  },\n  {\n    id: 'clergymen-clergywomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      clergies: 'a',\n      clerics: 'a'\n    },\n    inconsiderate: {\n      clergywomen: 'female',\n      clergymen: 'male'\n    }\n  },\n  {\n    id: 'councilman-councilwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'council member': 'a'\n    },\n    inconsiderate: {\n      councilwoman: 'female',\n      councilman: 'male'\n    }\n  },\n  {\n    id: 'councilmen-councilwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'council members': 'a'\n    },\n    inconsiderate: {\n      councilwomen: 'female',\n      councilmen: 'male'\n    }\n  },\n  {\n    id: 'countryman-countrywoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'country person': 'a'\n    },\n    inconsiderate: {\n      countrywoman: 'female',\n      countryman: 'male'\n    }\n  },\n  {\n    id: 'countrymen-countrywomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'country folk': 'a'\n    },\n    inconsiderate: {\n      countrywomen: 'female',\n      countrymen: 'male'\n    }\n  },\n  {\n    id: 'handyman-handywoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      artisan: 'a',\n      craftsperson: 'a',\n      'skilled worker': 'a'\n    },\n    inconsiderate: {\n      handywoman: 'female',\n      craftswoman: 'female',\n      handyman: 'male',\n      craftsman: 'male'\n    }\n  },\n  {\n    id: 'host-hostess',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      presenter: 'a',\n      entertainer: 'a',\n      emcee: 'a'\n    },\n    inconsiderate: {\n      hostess: 'female',\n      host: 'male'\n    }\n  },\n  {\n    id: 'hostesses-hosts',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      presenters: 'a',\n      entertainers: 'a',\n      emcees: 'a'\n    },\n    inconsiderate: {\n      hostesses: 'female',\n      hosts: 'male'\n    }\n  },\n  {\n    id: 'handymen-handywomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      artisans: 'a',\n      craftspersons: 'a',\n      'skilled workers': 'a'\n    },\n    inconsiderate: {\n      handywomen: 'female',\n      craftswomen: 'female',\n      handymen: 'male',\n      craftsmen: 'male'\n    }\n  },\n  {\n    id: 'hangman-hangwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      guillotine: 'a'\n    },\n    inconsiderate: {\n      hangwoman: 'female',\n      hangman: 'male'\n    }\n  },\n  {\n    id: 'hangmen-hangwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      guillotines: 'a'\n    },\n    inconsiderate: {\n      hangwomen: 'female',\n      hangmen: 'male'\n    }\n  },\n  {\n    id: 'henchman-henchwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      sidekick: 'a'\n    },\n    inconsiderate: {\n      henchwoman: 'female',\n      henchman: 'male'\n    }\n  },\n  {\n    id: 'henchmen-henchwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      sidekicks: 'a'\n    },\n    inconsiderate: {\n      henchwomen: 'female',\n      henchmen: 'male'\n    }\n  },\n  {\n    id: 'hero-heroine',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'role-model': 'a',\n      mentor: 'a'\n    },\n    inconsiderate: {\n      heroine: 'female',\n      hero: 'male'\n    }\n  },\n  {\n    id: 'heroes-heroines',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'role-models': 'a',\n      mentor: 'a'\n    },\n    inconsiderate: {\n      heroines: 'female',\n      heroes: 'male'\n    }\n  },\n  {\n    id: 'maternal-paternal',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      parental: 'a',\n      warm: 'a',\n      intimate: 'a'\n    },\n    inconsiderate: {\n      maternal: 'female',\n      paternal: 'male',\n      fraternal: 'male'\n    }\n  },\n  {\n    id: 'maternity-paternity',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      parental: 'a'\n    },\n    inconsiderate: {\n      maternity: 'female',\n      paternity: 'male'\n    }\n  },\n  {\n    id: 'dads-moms',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      parents: 'a'\n    },\n    inconsiderate: {\n      mamas: 'female',\n      mothers: 'female',\n      moms: 'female',\n      mums: 'female',\n      mommas: 'female',\n      mommies: 'female',\n      papas: 'male',\n      fathers: 'male',\n      dads: 'male',\n      daddies: 'male'\n    }\n  },\n  {\n    id: 'dad-mom',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      parent: 'a'\n    },\n    inconsiderate: {\n      mama: 'female',\n      mother: 'female',\n      mom: 'female',\n      mum: 'female',\n      momma: 'female',\n      mommy: 'female',\n      papa: 'male',\n      father: 'male',\n      dad: 'male',\n      pop: 'male',\n      daddy: 'male'\n    }\n  },\n  {\n    id: 'daughter-son',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      child: 'a'\n    },\n    inconsiderate: {\n      daughter: 'female',\n      son: 'male'\n    }\n  },\n  {\n    id: 'daughters-sons',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      children: 'a'\n    },\n    inconsiderate: {\n      daughters: 'female',\n      sons: 'male'\n    }\n  },\n  {\n    id: 'doorman-doorwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      concierge: 'a'\n    },\n    inconsiderate: {\n      doorwoman: 'female',\n      doorman: 'male'\n    }\n  },\n  {\n    id: 'doormen-doorwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      concierges: 'a'\n    },\n    inconsiderate: {\n      doorwomen: 'female',\n      doormen: 'male'\n    }\n  },\n  {\n    id: 'feminin-manly',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      humanly: 'a',\n      mature: 'a'\n    },\n    inconsiderate: {\n      feminin: 'female',\n      dudely: 'male',\n      manly: 'male'\n    }\n  },\n  {\n    id: 'females-males',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      humans: 'a'\n    },\n    inconsiderate: {\n      females: 'female',\n      males: 'male'\n    }\n  },\n  {\n    id: 'king-queen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      ruler: 'a'\n    },\n    inconsiderate: {\n      empress: 'female',\n      queen: 'female',\n      emperor: 'male',\n      king: 'male'\n    }\n  },\n  {\n    id: 'kings-queens',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      rulers: 'a'\n    },\n    inconsiderate: {\n      empresses: 'female',\n      queens: 'female',\n      emperors: 'male',\n      kings: 'male'\n    }\n  },\n  {\n    id: 'kingsize-queensize',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      jumbo: 'a',\n      gigantic: 'a'\n    },\n    inconsiderate: {\n      queensize: 'female',\n      kingsize: 'male'\n    }\n  },\n  {\n    id: 'kingmaker-queenmaker',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'power behind the throne': 'a'\n    },\n    inconsiderate: {\n      queenmaker: 'female',\n      kingmaker: 'male'\n    }\n  },\n  {\n    id: 'layman-laywoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      civilian: 'a'\n    },\n    inconsiderate: {\n      laywoman: 'female',\n      layman: 'male'\n    }\n  },\n  {\n    id: 'laymen-laywomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      civilians: 'a'\n    },\n    inconsiderate: {\n      laywomen: 'female',\n      laymen: 'male'\n    }\n  },\n  {\n    id: 'dame-lord',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      official: 'a',\n      owner: 'a',\n      expert: 'a',\n      superior: 'a',\n      chief: 'a',\n      ruler: 'a'\n    },\n    inconsiderate: {\n      dame: 'female',\n      lord: 'male'\n    }\n  },\n  {\n    id: 'dames-lords',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      officials: 'a',\n      chiefs: 'a',\n      rulers: 'a'\n    },\n    inconsiderate: {\n      dames: 'female',\n      lords: 'male'\n    }\n  },\n  {\n    id: 'manhood-womanhood',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      adulthood: 'a',\n      personhood: 'a',\n      maturity: 'a'\n    },\n    inconsiderate: {\n      womanhood: 'female',\n      masculinity: 'male',\n      manhood: 'male'\n    }\n  },\n  {\n    id: 'femininity-manliness',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      humanity: 'a'\n    },\n    inconsiderate: {\n      femininity: 'female',\n      manliness: 'male'\n    }\n  },\n  {\n    id: 'marksman-markswoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      shooter: 'a'\n    },\n    inconsiderate: {\n      markswoman: 'female',\n      marksman: 'male'\n    }\n  },\n  {\n    id: 'marksmen-markswomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      shooters: 'a'\n    },\n    inconsiderate: {\n      markswomen: 'female',\n      marksmen: 'male'\n    }\n  },\n  {\n    id: 'middleman-middlewoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      intermediary: 'a',\n      'go-between': 'a'\n    },\n    inconsiderate: {\n      middlewoman: 'female',\n      middleman: 'male'\n    }\n  },\n  {\n    id: 'middlemen-middlewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      intermediaries: 'a',\n      'go-betweens': 'a'\n    },\n    inconsiderate: {\n      middlewomen: 'female',\n      middlemen: 'male'\n    }\n  },\n  {\n    id: 'milkman-milkwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'milk person': 'a'\n    },\n    inconsiderate: {\n      milkwoman: 'female',\n      milkman: 'male'\n    }\n  },\n  {\n    id: 'milkmen-milkwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'milk people': 'a'\n    },\n    inconsiderate: {\n      milkwomen: 'female',\n      milkmen: 'male'\n    }\n  },\n  {\n    id: 'nephew-niece',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      nibling: 'a',\n      'sibling’s child': 'a'\n    },\n    inconsiderate: {\n      niece: 'female',\n      nephew: 'male'\n    }\n  },\n  {\n    id: 'nephews-nieces',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      niblings: 'a',\n      'sibling’s children': 'a'\n    },\n    inconsiderate: {\n      nieces: 'female',\n      nephews: 'male'\n    }\n  },\n  {\n    id: 'nobleman-noblewoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      noble: 'a'\n    },\n    inconsiderate: {\n      noblewoman: 'female',\n      nobleman: 'male'\n    }\n  },\n  {\n    id: 'noblemen-noblewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      nobles: 'a'\n    },\n    inconsiderate: {\n      noblewomen: 'female',\n      noblemen: 'male'\n    }\n  },\n  {\n    id: 'ombudsman-ombudswoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      notary: 'a',\n      'consumer advocate': 'a',\n      'trouble shooter': 'a',\n      omsbudperson: 'a',\n      mediator: 'a'\n    },\n    inconsiderate: {\n      ombudswoman: 'female',\n      ombudsman: 'male'\n    }\n  },\n  {\n    id: 'ombudsmen-ombudswomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      notaries: 'a',\n      omsbudpersons: 'a',\n      omsbudpeople: 'a',\n      mediators: 'a'\n    },\n    inconsiderate: {\n      ombudswomen: 'female',\n      ombudsmen: 'male'\n    }\n  },\n  {\n    id: 'prince-princess',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      heir: 'a'\n    },\n    inconsiderate: {\n      princess: 'female',\n      prince: 'male'\n    }\n  },\n  {\n    id: 'princes-princesses',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      heirs: 'a'\n    },\n    inconsiderate: {\n      princesses: 'female',\n      princes: 'male'\n    }\n  },\n  {\n    id: 'sandman-sandwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      fairy: 'a'\n    },\n    inconsiderate: {\n      sandwoman: 'female',\n      sandman: 'male'\n    }\n  },\n  {\n    id: 'sandmen-sandwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      fairies: 'a'\n    },\n    inconsiderate: {\n      sandwomen: 'female',\n      sandmen: 'male'\n    }\n  },\n  {\n    id: 'showman-showwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      promoter: 'a'\n    },\n    inconsiderate: {\n      showwoman: 'female',\n      showman: 'male'\n    }\n  },\n  {\n    id: 'showmen-showwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      promoters: 'a'\n    },\n    inconsiderate: {\n      showwomen: 'female',\n      'show women': 'female',\n      showmen: 'male'\n    }\n  },\n  {\n    id: 'spaceman-spacewoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      astronaut: 'a'\n    },\n    inconsiderate: {\n      spacewoman: 'female',\n      spaceman: 'male'\n    }\n  },\n  {\n    id: 'spacemen-spacewomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      astronauts: 'a'\n    },\n    inconsiderate: {\n      spacewomen: 'female',\n      spacemen: 'male'\n    }\n  },\n  {\n    id: 'spokesman-spokeswoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      speaker: 'a',\n      spokesperson: 'a',\n      representative: 'a'\n    },\n    inconsiderate: {\n      spokeswoman: 'female',\n      spokesman: 'male'\n    }\n  },\n  {\n    id: 'spokesmen-spokeswomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      speakers: 'a',\n      spokespersons: 'a'\n    },\n    inconsiderate: {\n      spokeswomen: 'female',\n      spokesmen: 'male'\n    }\n  },\n  {\n    id: 'sportsman-sportswoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      athlete: 'a',\n      'sports person': 'a'\n    },\n    inconsiderate: {\n      sportswoman: 'female',\n      sportsman: 'male'\n    }\n  },\n  {\n    id: 'sportsmen-sportswomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      athletes: 'a',\n      'sports persons': 'a'\n    },\n    inconsiderate: {\n      sportswomen: 'female',\n      sportsmen: 'male'\n    }\n  },\n  {\n    id: 'statesman-stateswoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      senator: 'a'\n    },\n    inconsiderate: {\n      stateswoman: 'female',\n      statesman: 'male'\n    }\n  },\n  {\n    id: 'stepbrother-stepsister',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'step-sibling': 'a'\n    },\n    inconsiderate: {\n      stepsister: 'female',\n      stepbrother: 'male'\n    }\n  },\n  {\n    id: 'stepbrothers-stepsisters',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'step-siblings': 'a'\n    },\n    inconsiderate: {\n      stepsisters: 'female',\n      stepbrothers: 'male'\n    }\n  },\n  {\n    id: 'stepdad-stepmom',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'step-parent': 'a'\n    },\n    inconsiderate: {\n      stepmom: 'female',\n      stepmother: 'female',\n      stepdad: 'male',\n      stepfather: 'male'\n    }\n  },\n  {\n    id: 'stepfathers-stepmothers',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'step-parents': 'a'\n    },\n    inconsiderate: {\n      stepmothers: 'female',\n      stepfathers: 'male'\n    }\n  },\n  {\n    id: 'superman-superwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      titan: 'a'\n    },\n    inconsiderate: {\n      superwoman: 'female',\n      superman: 'male'\n    }\n  },\n  {\n    id: 'supermen-superwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      titans: 'a'\n    },\n    inconsiderate: {\n      superwomen: 'female',\n      supermen: 'male'\n    }\n  },\n  {\n    id: 'unmanly-unwomanly',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      inhumane: 'a'\n    },\n    inconsiderate: {\n      unwomanly: 'female',\n      unwomenly: 'female',\n      unmanly: 'male',\n      unmenly: 'male'\n    }\n  },\n  {\n    id: 'watchman-watchwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      watcher: 'a'\n    },\n    inconsiderate: {\n      watchwoman: 'female',\n      watchman: 'male'\n    }\n  },\n  {\n    id: 'watchmen-watchwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      watchers: 'a'\n    },\n    inconsiderate: {\n      watchwomen: 'female',\n      watchmen: 'male'\n    }\n  },\n  {\n    id: 'weatherman-weatherwoman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'weather forecaster': 'a',\n      meteorologist: 'a'\n    },\n    inconsiderate: {\n      weatherwoman: 'female',\n      weatherman: 'male'\n    }\n  },\n  {\n    id: 'weathermen-weatherwomen',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'weather forecasters': 'a',\n      meteorologists: 'a'\n    },\n    inconsiderate: {\n      weatherwomen: 'female',\n      weathermen: 'male'\n    }\n  },\n  {\n    id: 'widow-widower',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      bereaved: 'a'\n    },\n    inconsiderate: {\n      widow: 'female',\n      widows: 'female',\n      widower: 'male',\n      widowers: 'male'\n    }\n  },\n  {\n    id: 'own-man-own-woman',\n    type: 'or',\n    categories: ['female', 'male'],\n    considerate: {\n      'own person': 'a'\n    },\n    inconsiderate: {\n      'own woman': 'female',\n      'own man': 'male'\n    }\n  },\n  {\n    id: 'frenchmen',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      french: 'a',\n      'the french': 'a'\n    },\n    inconsiderate: {\n      frenchmen: 'male'\n    }\n  },\n  {\n    id: 'ladylike',\n    type: 'basic',\n    categories: ['female'],\n    considerate: {\n      courteous: 'a',\n      cultured: 'a'\n    },\n    inconsiderate: {\n      ladylike: 'female'\n    }\n  },\n  {\n    id: 'like-a-man',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      resolutely: 'a',\n      bravely: 'a'\n    },\n    inconsiderate: {\n      'like a man': 'male'\n    }\n  },\n  {\n    id: 'maiden-name',\n    type: 'basic',\n    categories: ['female'],\n    considerate: {\n      'birth name': 'a'\n    },\n    inconsiderate: {\n      'maiden name': 'female'\n    }\n  },\n  {\n    id: 'maiden-voyage',\n    type: 'basic',\n    categories: ['female'],\n    considerate: {\n      'first voyage': 'a'\n    },\n    inconsiderate: {\n      'maiden voyage': 'female'\n    }\n  },\n  {\n    id: 'maiden-flight',\n    type: 'basic',\n    categories: ['female'],\n    considerate: {\n      'first flight': 'a'\n    },\n    inconsiderate: {\n      'maiden flight': 'female'\n    }\n  },\n  {\n    id: 'man-enough',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      'strong enough': 'a'\n    },\n    inconsiderate: {\n      'man enough': 'male'\n    }\n  },\n  {\n    id: 'oneupmanship',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      upstaging: 'a',\n      competitiveness: 'a'\n    },\n    inconsiderate: {\n      oneupmanship: 'male'\n    }\n  },\n  {\n    id: 'mrs-',\n    type: 'basic',\n    categories: ['female'],\n    considerate: {\n      'ms.': 'a'\n    },\n    inconsiderate: {\n      'miss.': 'female',\n      'mrs.': 'female'\n    }\n  },\n  {\n    id: 'manmade',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      manufactured: 'a',\n      artificial: 'a',\n      synthetic: 'a',\n      'machine-made': 'a',\n      constructed: 'a'\n    },\n    inconsiderate: {\n      manmade: 'male'\n    }\n  },\n  {\n    id: 'man-of-action',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      dynamo: 'a'\n    },\n    inconsiderate: {\n      'man of action': 'male'\n    }\n  },\n  {\n    id: 'man-of-letters',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      scholar: 'a',\n      writer: 'a',\n      'literary figure': 'a'\n    },\n    inconsiderate: {\n      'man of letters': 'male'\n    }\n  },\n  {\n    id: 'man-of-the-world',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      sophisticate: 'a'\n    },\n    inconsiderate: {\n      'man of the world': 'male'\n    }\n  },\n  {\n    id: 'fellowship',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      camaraderie: 'a',\n      community: 'a',\n      organization: 'a'\n    },\n    inconsiderate: {\n      fellowship: 'male'\n    }\n  },\n  {\n    id: 'freshman',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      'first-year student': 'a',\n      fresher: 'a'\n    },\n    inconsiderate: {\n      freshman: 'male',\n      freshwoman: 'male'\n    }\n  },\n  {\n    id: 'workmanship',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      'quality construction': 'a',\n      expertise: 'a'\n    },\n    inconsiderate: {\n      workmanship: 'male'\n    }\n  },\n  {\n    id: 'housewife',\n    type: 'basic',\n    categories: ['female'],\n    considerate: {\n      homemaker: 'a',\n      homeworker: 'a'\n    },\n    inconsiderate: {\n      housewife: 'female'\n    }\n  },\n  {\n    id: 'housewives',\n    type: 'basic',\n    categories: ['female'],\n    considerate: {\n      homemakers: 'a',\n      homeworkers: 'a'\n    },\n    inconsiderate: {\n      housewives: 'female'\n    }\n  },\n  {\n    id: 'motherly',\n    type: 'basic',\n    categories: ['female'],\n    considerate: {\n      loving: 'a',\n      warm: 'a',\n      nurturing: 'a'\n    },\n    inconsiderate: {\n      motherly: 'female'\n    }\n  },\n  {\n    id: 'manpower',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      'human resources': 'a',\n      workforce: 'a',\n      personnel: 'a',\n      staff: 'a',\n      labor: 'a',\n      'labor force': 'a',\n      staffing: 'a',\n      'combat personnel': 'a'\n    },\n    inconsiderate: {\n      manpower: 'male'\n    }\n  },\n  {\n    id: 'master-of-ceremonies',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      emcee: 'a',\n      moderator: 'a',\n      convenor: 'a'\n    },\n    inconsiderate: {\n      'master of ceremonies': 'male'\n    }\n  },\n  {\n    id: 'masterful',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      skilled: 'a',\n      authoritative: 'a',\n      commanding: 'a'\n    },\n    inconsiderate: {\n      masterful: 'male'\n    }\n  },\n  {\n    id: 'mastermind',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      genius: 'a',\n      creator: 'a',\n      instigator: 'a',\n      oversee: 'a',\n      launch: 'a',\n      originate: 'a'\n    },\n    inconsiderate: {\n      mastermind: 'male'\n    }\n  },\n  {\n    id: 'masterpiece',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      'work of genius': 'a',\n      'chef d’oeuvre': 'a'\n    },\n    inconsiderate: {\n      masterpiece: 'male'\n    }\n  },\n  {\n    id: 'masterplan',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      vision: 'a',\n      'comprehensive plan': 'a'\n    },\n    inconsiderate: {\n      masterplan: 'male'\n    }\n  },\n  {\n    id: 'masterstroke',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      'trump card': 'a',\n      'stroke of genius': 'a'\n    },\n    inconsiderate: {\n      masterstroke: 'male'\n    }\n  },\n  {\n    id: 'madman',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      fanatic: 'a',\n      zealot: 'a',\n      enthusiast: 'a'\n    },\n    inconsiderate: {\n      madman: 'male',\n      'mad man': 'male'\n    }\n  },\n  {\n    id: 'madmen',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      fanatics: 'a',\n      zealots: 'a',\n      enthusiasts: 'a'\n    },\n    inconsiderate: {\n      madmen: 'male',\n      'mad men': 'male'\n    }\n  },\n  {\n    id: 'mankind',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      humankind: 'a'\n    },\n    inconsiderate: {\n      mankind: 'male'\n    }\n  },\n  {\n    id: 'manhour',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      'staff hour': 'a',\n      'hour of work': 'a'\n    },\n    inconsiderate: {\n      manhour: 'male',\n      'man hour': 'male'\n    }\n  },\n  {\n    id: 'manhours',\n    type: 'basic',\n    categories: ['male'],\n    considerate: {\n      'staff hours': 'a',\n      'hours of work': 'a',\n      'hours of labor': 'a',\n      hours: 'a'\n    },\n    inconsiderate: {\n      manhours: 'male',\n      'man hours': 'male'\n    }\n  },\n  {\n    id: 'manned',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      staffed: 'a',\n      crewed: 'a',\n      piloted: 'a'\n    },\n    inconsiderate: {\n      manned: 'a'\n    },\n    note: 'Using gender neutral language means users will help to break up gender stereotypes.'\n  },\n  {\n    id: 'unmanned',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      robotic: 'a',\n      automated: 'a'\n    },\n    inconsiderate: {\n      unmanned: 'a'\n    },\n    note: 'Using gender neutral language means users will help to break up gender stereotypes.'\n  },\n  {\n    id: 'moaning',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      whining: 'a',\n      complaining: 'a',\n      crying: 'a'\n    },\n    inconsiderate: {\n      bitching: 'a',\n      moaning: 'a'\n    }\n  },\n  {\n    id: 'moan',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      whine: 'a',\n      complain: 'a',\n      cry: 'a'\n    },\n    inconsiderate: {\n      bitch: 'a',\n      moan: 'a'\n    }\n  },\n  {\n    id: 'wifebeater',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'tank top': 'a',\n      'sleeveless undershirt': 'a'\n    },\n    inconsiderate: {\n      'wife beater': 'a',\n      wifebeater: 'a'\n    }\n  },\n  {\n    id: 'ancient-man',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'ancient civilization': 'a',\n      'ancient people': 'a'\n    },\n    inconsiderate: {\n      'ancient man': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'authoress',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      author: 'a',\n      writer: 'a'\n    },\n    inconsiderate: {\n      authoress: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'average-housewife',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'average consumer': 'a',\n      'average household': 'a',\n      'average homemaker': 'a'\n    },\n    inconsiderate: {\n      'average housewife': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'average-man',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'average person': 'a'\n    },\n    inconsiderate: {\n      'average man': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'average-working-man',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'average wage earner': 'a',\n      'average taxpayer': 'a'\n    },\n    inconsiderate: {\n      'average working man': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'aviatrix',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      aviator: 'a'\n    },\n    inconsiderate: {\n      aviatrix: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'brotherhood-of-man',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'the human family': 'a'\n    },\n    inconsiderate: {\n      'brotherhood of man': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'calendar-girl',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      model: 'a'\n    },\n    inconsiderate: {\n      'calendar girl': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'call-girl',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      escort: 'a',\n      prostitute: 'a',\n      'sex worker': 'a'\n    },\n    inconsiderate: {\n      'call girl': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'churchman',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      cleric: 'a',\n      'practicing Christian': 'a',\n      'pillar of the Church': 'a'\n    },\n    inconsiderate: {\n      churchman: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'english-master',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'english coordinator': 'a',\n      'senior teacher of english': 'a'\n    },\n    inconsiderate: {\n      'english master': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'englishmen',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'the english': 'a'\n    },\n    inconsiderate: {\n      englishmen: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'executrix',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      executor: 'a'\n    },\n    inconsiderate: {\n      executrix: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'father-of-*',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'founder of': 'a'\n    },\n    inconsiderate: {\n      'father of *': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'founding-father',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'the founders': 'a',\n      'founding leaders': 'a',\n      forebears: 'a'\n    },\n    inconsiderate: {\n      'founding father': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'housemaid',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'house worker': 'a',\n      'domestic help': 'a'\n    },\n    inconsiderate: {\n      housemaid: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'industrial-man',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'industrial civilization': 'a',\n      'industrial people': 'a'\n    },\n    inconsiderate: {\n      'industrial man': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'lady-doctor',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      doctor: 'a'\n    },\n    inconsiderate: {\n      'lady doctor': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'leading-lady',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      lead: 'a'\n    },\n    inconsiderate: {\n      'leading lady': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'maiden',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      virgin: 'a'\n    },\n    inconsiderate: {\n      maiden: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'maiden-race',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'first race': 'a'\n    },\n    inconsiderate: {\n      'maiden race': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'maiden-speech',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'first speech': 'a'\n    },\n    inconsiderate: {\n      'maiden speech': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'man-a-desk',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'staff a desk': 'a'\n    },\n    inconsiderate: {\n      'man a desk': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'man-in-the-street',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'ordinary citizen': 'a',\n      'typical person': 'a',\n      'average person': 'a'\n    },\n    inconsiderate: {\n      'man in the street': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'man-of-the-land',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      farmer: 'a',\n      'rural worker': 'a',\n      grazier: 'a',\n      landowner: 'a',\n      'rural community': 'a',\n      'country people': 'a',\n      'country folk': 'a'\n    },\n    inconsiderate: {\n      'man of the land': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'mans-best-friend',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'a faithful dog': 'a'\n    },\n    inconsiderate: {\n      'mans best friend': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'man-the-booth',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'staff the booth': 'a'\n    },\n    inconsiderate: {\n      'man the booth': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'man-the-phones',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'answer the phones': 'a'\n    },\n    inconsiderate: {\n      'man the phones': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'mansized-task',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'a demanding task': 'a',\n      'a big job': 'a'\n    },\n    inconsiderate: {\n      'mansized task': 'a',\n      'man sized task': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'master-key',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'pass key': 'a',\n      original: 'a'\n    },\n    inconsiderate: {\n      'master key': 'a',\n      'master copy': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'master-plan',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'grand scheme': 'a',\n      'guiding principles': 'a'\n    },\n    inconsiderate: {\n      'master plan': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'master-the-art',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'become skilled': 'a'\n    },\n    inconsiderate: {\n      'master the art': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'men-of-science',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      scientists: 'a'\n    },\n    inconsiderate: {\n      'men of science': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'midwife',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'birthing nurse': 'a'\n    },\n    inconsiderate: {\n      midwife: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'modern-man',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'modern civilization': 'a',\n      'modern people': 'a'\n    },\n    inconsiderate: {\n      'modern man': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'no-mans-land',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'unoccupied territory': 'a',\n      wasteland: 'a',\n      deathtrap: 'a'\n    },\n    inconsiderate: {\n      'no mans land': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'office-girls',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'administrative staff': 'a'\n    },\n    inconsiderate: {\n      'office girls': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'poetess',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      poet: 'a'\n    },\n    inconsiderate: {\n      poetess: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'railwayman',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'railway worker': 'a'\n    },\n    inconsiderate: {\n      railwayman: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'sportsmanlike',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      fair: 'a',\n      sporting: 'a'\n    },\n    inconsiderate: {\n      sportsmanlike: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'sportsmanship',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      fairness: 'a',\n      'good humor': 'a',\n      'sense of fair play': 'a'\n    },\n    inconsiderate: {\n      sportsmanship: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'statesmanlike',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      diplomatic: 'a'\n    },\n    inconsiderate: {\n      statesmanlike: 'a',\n      'statesman like': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'stockman',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'cattle worker': 'a',\n      farmhand: 'a',\n      drover: 'a'\n    },\n    inconsiderate: {\n      stockman: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'tradesmans-entrance',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'service entrance': 'a'\n    },\n    inconsiderate: {\n      'tradesmans entrance': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'tax-man',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'tax commissioner': 'a',\n      'tax office': 'a',\n      'tax collector': 'a'\n    },\n    inconsiderate: {\n      'tax man': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'usherette',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      usher: 'a'\n    },\n    inconsiderate: {\n      usherette: 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'woman-lawyer',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      lawyer: 'a'\n    },\n    inconsiderate: {\n      'woman lawyer': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'woman-painter',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      painter: 'a'\n    },\n    inconsiderate: {\n      'woman painter': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'working-wife',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'wage or salary earning woman': 'a',\n      'two-income family': 'a'\n    },\n    inconsiderate: {\n      'working mother': 'a',\n      'working wife': 'a'\n    },\n    note: 'Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/'\n  },\n  {\n    id: 'homosexual',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      gay: 'a',\n      'gay man': 'a',\n      lesbian: 'a',\n      'gay person/people': 'a'\n    },\n    inconsiderate: {\n      homosexual: 'a'\n    },\n    note: 'This term has a clinical history and is used to imply LGBTQ+ people are diseased or psychologically/emotionally disordered (source: https://www.glaad.org/reference/offensive)'\n  },\n  {\n    id: 'homosexual-relations',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      relationship: 'a'\n    },\n    inconsiderate: {\n      'homosexual relations': 'a',\n      'homosexual relationship': 'a'\n    },\n    note: 'Avoid labeling something as LGBTQ+ unless you would call the same thing “straight” (source: https://www.glaad.org/reference/offensive)'\n  },\n  {\n    id: 'homosexual-couple',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      couple: 'a'\n    },\n    inconsiderate: {\n      'homosexual couple': 'a'\n    },\n    note: 'Avoid labeling something as LGBTQ+ unless you would call the same thing “straight” (source: https://www.glaad.org/reference/offensive)'\n  },\n  {\n    id: 'sexual-preference',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'sexual orientation': 'a',\n      orientation: 'a'\n    },\n    inconsiderate: {\n      'sexual preference': 'a'\n    },\n    note: 'Implies that being LGBTQ+ is a choice (source: https://www.glaad.org/reference/offensive)'\n  },\n  {\n    id: 'gay-lifestyle',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'gay lives': 'a',\n      'gay/lesbian lives': 'a'\n    },\n    inconsiderate: {\n      'gay lifestyle': 'a',\n      'homosexual lifestyle': 'a'\n    },\n    note: 'Implies that being LGBTQ+ is a choice (source: https://www.glaad.org/reference/offensive)'\n  },\n  {\n    id: 'gay-agenda',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'gay issues': 'a'\n    },\n    inconsiderate: {\n      'gay agenda': 'a',\n      'homosexual agenda': 'a'\n    },\n    note: 'Used by anti-LGBTQ+ extremists to create a climate of fear around LGBTQ+ issues (source: https://www.glaad.org/reference/offensive)'\n  },\n  {\n    id: 'gay-rights',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'equal rights': 'a',\n      'civil rights for gay people': 'a'\n    },\n    inconsiderate: {\n      'special rights': 'a',\n      'gay rights': 'a'\n    },\n    note: 'LGBTQ+ rights are human rights (source: https://www.glaad.org/reference/style)'\n  },\n  {\n    id: 'fag',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      gay: 'a'\n    },\n    inconsiderate: {\n      fag: 'a',\n      faggot: 'a',\n      dyke: 'a',\n      homo: 'a',\n      sodomite: 'a'\n    },\n    note: 'Derogatory terms for LGBTQ+ people are offensive (source: https://www.glaad.org/reference/offensive)'\n  },\n  {\n    id: 'bi',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      bisexual: 'a'\n    },\n    inconsiderate: {\n      bi: 'a'\n    },\n    note: 'Avoid using slang shorthand (source: https://www.glaad.org/reference/style)'\n  },\n  {\n    id: 'homosexual-marriage',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'gay marriage': 'a',\n      'same-sex marriage': 'a'\n    },\n    inconsiderate: {\n      'homosexual marriage': 'a'\n    },\n    note: 'Homosexual has a clinical history and is used to imply LGBTQ+ people are diseased or psychologically/emotionally disordered (source: https://www.glaad.org/reference/style)'\n  },\n  {\n    id: 'tranny',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      transgender: 'a'\n    },\n    inconsiderate: {\n      tranny: 'a'\n    },\n    note: 'Derogatory terms for LGBTQ+ people are offensive (source: https://www.glaad.org/reference/style)'\n  },\n  {\n    id: 'transvestite',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'cross-dresser': 'a'\n    },\n    inconsiderate: {\n      transvestite: 'a'\n    },\n    note: 'Avoid using outdated / offensive terms (source: https://www.glaad.org/reference/transgender)'\n  },\n  {\n    id: 'sexchange',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      transition: 'a',\n      'gender confirmation surgery': 'a'\n    },\n    inconsiderate: {\n      sexchange: 'a',\n      'sex change': 'a'\n    },\n    note: 'Avoid overemphasizing surgery when discussing transgender people or the process of transition - it’s not a necessary component (source: https://www.glaad.org/reference/transgender)'\n  },\n  {\n    id: 'sex-change-operation',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'sex reassignment surgery': 'a',\n      'gender confirmation surgery': 'a'\n    },\n    inconsiderate: {\n      'sex change operation': 'a'\n    },\n    note: 'Shift focus away from the assigned sex and towards the identified gender (source: https://www.glaad.org/reference/transgender)'\n  },\n  {\n    id: 'transgenders',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'transgender people': 'a'\n    },\n    inconsiderate: {\n      transgenders: 'a'\n    },\n    note: 'Transgender should be used as an adjective, not as a noun (source: https://www.glaad.org/reference/transgender)'\n  },\n  {\n    id: 'transgendered',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      transgender: 'a'\n    },\n    inconsiderate: {\n      transgendered: 'a'\n    },\n    note: 'Transgender is already an adjective (source: https://www.glaad.org/reference/transgender)'\n  },\n  {\n    id: 'transgenderism',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'being transgender': 'a',\n      'the movement for transgender equality': 'a'\n    },\n    inconsiderate: {\n      transgenderism: 'a'\n    },\n    note: 'This is a term used by anti-transgender activists to dehumanize transgender people and reduce who they are to a condition (source: https://www.glaad.org/reference/transgender)'\n  },\n  {\n    id: 'born-a-man',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'assigned male at birth': 'a',\n      'designated male at birth': 'a'\n    },\n    inconsiderate: {\n      'biologically male': 'a',\n      'born a man': 'a',\n      'genetically male': 'a'\n    },\n    note: 'Assigned birth gender is complicated; gender identity is more than what your parents decided you were at birth'\n  },\n  {\n    id: 'born-a-woman',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'assigned female at birth': 'a',\n      'designated female at birth': 'a'\n    },\n    inconsiderate: {\n      'biologically female': 'a',\n      'born a woman': 'a',\n      'genetically female': 'a'\n    },\n    note: 'Assigned birth gender is complicated; gender identity is more than what your parents decided you were at birth'\n  },\n  {\n    id: 'bathroom-bill',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'non-discrimination law': 'a',\n      'non-discrimination ordinance': 'a'\n    },\n    inconsiderate: {\n      'bathroom bill': 'a'\n    },\n    note: 'A term created and used by far-right extremists to oppose nondiscrimination laws that protect transgender people (source: https://www.glaad.org/reference/transgender)'\n  },\n  {\n    id: 'hermaphroditic',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      intersex: 'a'\n    },\n    inconsiderate: {\n      hermaphroditic: 'a',\n      pseudohermaphroditic: 'a',\n      'pseudo hermaphroditic': 'a'\n    },\n    note: 'These terms are stigmatizing to patients and their families because intersex status is more complicated than the mere presence or absence of certain gonadal tissues (source: http://www.isna.org/node/979)'\n  },\n  {\n    id: 'hermaphrodite',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person who is intersex': 'a',\n      person: 'a',\n      'intersex person': 'a'\n    },\n    inconsiderate: {\n      hermaphrodite: 'a',\n      pseudohermaphrodite: 'a',\n      'pseudo hermaphrodite': 'a'\n    },\n    note: 'These terms are stigmatizing to patients and their families because intersex status is more complicated than the mere presence or absence of certain gonadal tissues (source: http://www.isna.org/node/979)'\n  },\n  {\n    id: 'heshe',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'transgender person': 'a',\n      person: 'a'\n    },\n    inconsiderate: {\n      shemale: 'a',\n      'she male': 'a',\n      heshe: 'a',\n      shehe: 'a'\n    },\n    note: 'This word dehumanizes transgender people (source: https://www.reddit.com/r/asktransgender/comments/23wbq1/is_the_term_shemale_seen_as_offensive/)'\n  },\n  {\n    id: 'gender-pronoun',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      pronoun: 'a',\n      pronouns: 'a'\n    },\n    inconsiderate: {\n      'preferred pronoun': 'a',\n      'preferred pronouns': 'a',\n      'gender pronoun': 'a',\n      'gender pronouns': 'a'\n    },\n    note: \"Preferred pronoun sounds like it is optional to use someone's correct pronoun (source: https://www.selfdefined.app/definitions/pronouns/)\"\n  },\n  {\n    id: 'islamist',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      muslim: 'a',\n      'person of Islamic faith': 'a',\n      fanatic: 'a',\n      zealot: 'a',\n      'follower of islam': 'a',\n      'follower of the islamic faith': 'a'\n    },\n    inconsiderate: {\n      islamist: 'a'\n    },\n    note: 'Source: https://www.usnews.com/news/newsgram/articles/2013/04/04/the-associated-press-revises-islamist-another-politically-charged-term'\n  },\n  {\n    id: 'islamists',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      muslims: 'a',\n      'people of Islamic faith': 'a',\n      fanatics: 'a',\n      zealots: 'a'\n    },\n    inconsiderate: {\n      islamists: 'a'\n    },\n    note: 'Source: https://www.usnews.com/news/newsgram/articles/2013/04/04/the-associated-press-revises-islamist-another-politically-charged-term'\n  },\n  {\n    id: 'master',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      primary: 'a',\n      hub: 'a',\n      reference: 'a'\n    },\n    inconsiderate: {\n      master: 'a'\n    },\n    note: 'Avoid using the term `master`; these suggestions are for the computer term, but there are better alternatives for other cases too'\n  },\n  {\n    id: 'masters',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      primaries: 'a',\n      hubs: 'a',\n      references: 'a'\n    },\n    inconsiderate: {\n      masters: 'a'\n    },\n    note: 'Avoid using the term `master`; these suggestions are for the computer term, but there are better alternatives for other cases too'\n  },\n  {\n    id: 'eskimo',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      Inuit: 'a'\n    },\n    inconsiderate: {\n      eskimo: 'a'\n    }\n  },\n  {\n    id: 'eskimos',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      Inuits: 'a'\n    },\n    inconsiderate: {\n      eskimos: 'a'\n    }\n  },\n  {\n    id: 'oriental',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'Asian person': 'a'\n    },\n    inconsiderate: {\n      oriental: 'a'\n    }\n  },\n  {\n    id: 'orientals',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'Asian people': 'a'\n    },\n    inconsiderate: {\n      orientals: 'a'\n    }\n  },\n  {\n    id: 'nonwhite',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'person of color': 'a',\n      'people of color': 'a'\n    },\n    inconsiderate: {\n      nonwhite: 'a',\n      'non white': 'a'\n    }\n  },\n  {\n    id: 'ghetto',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      projects: 'a',\n      urban: 'a'\n    },\n    inconsiderate: {\n      ghetto: 'a'\n    }\n  },\n  {\n    id: 'redskin',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'Native American': 'a'\n    },\n    inconsiderate: {\n      'red indian': 'a',\n      pocahontas: 'a',\n      redskin: 'a'\n    }\n  },\n  {\n    id: 'redskins',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'Native American People': 'a'\n    },\n    inconsiderate: {\n      'red indians': 'a',\n      redskins: 'a'\n    }\n  },\n  {\n    id: 'totem',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      favorite: 'a',\n      inspiration: 'a',\n      'personal interest': 'a',\n      'personality type': 'a'\n    },\n    inconsiderate: {\n      'animal spirit': 'a',\n      'dream catcher': 'a',\n      'spirit animal': 'a',\n      totem: 'a'\n    },\n    note: 'Avoid using terms that oversimplify the complex and varied beliefs of indigenous religions. (source: https://www.worldreligionnews.com/opinion/spirit-animal-not-joke-oppression,https://www.spiralnature.com/spirituality/spirit-animal-cultural-appropriation)'\n  },\n  {\n    id: 'long-time-no-see',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'I haven’t seen you in a long time': 'a',\n      'it’s been a long time': 'a'\n    },\n    inconsiderate: {\n      'long time no hear': 'a',\n      'long time no see': 'a'\n    },\n    note: 'Avoid using phrases that implicitly mock people with limited knowledge of the English language. (source: https://www.npr.org/sections/codeswitch/2014/03/09/288300303/who-first-said-long-time-no-see-and-in-which-language)'\n  },\n  {\n    id: 'indian-country',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'enemy territory': 'a'\n    },\n    inconsiderate: {\n      'Indian country': 'a'\n    },\n    note: 'Avoid using phrases referring to the genocidal United States “Indian Removal” laws. (source: https://newsmaven.io/indiancountrytoday/archive/off-the-reservation-a-teachable-moment-nW1d7U0JRkOszhtg8N1V1A/)'\n  },\n  {\n    id: 'off-reserve',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      disobey: 'a',\n      endure: 'a',\n      'object to': 'a',\n      oppose: 'a',\n      resist: 'a'\n    },\n    inconsiderate: {\n      'jump the reservation': 'a',\n      'off reserve': 'a',\n      'off the reservation': 'a'\n    },\n    note: 'Avoid using phrases referring to the genocidal United States “Indian Removal” laws. (source: http://blog.nativepartnership.org/off-the-reservation/,https://www.wsj.com/articles/off-the-reservation-is-a-phrase-with-a-dark-past-1462552837,https://www.npr.org/sections/codeswitch/2014/06/29/326690947/should-saying-someone-is-off-the-reservation-be-off-limits,https://nowtoronto.com/news/native-references-and-terms-that-are-offensive-to-indigenous-people/)'\n  },\n  {\n    id: 'on-the-warpath',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      defend: 'a'\n    },\n    inconsiderate: {\n      'circle the wagons': 'a',\n      'on the warpath': 'a'\n    },\n    note: 'Avoid using phrases referring to colonial stereotypes regarding Native Americans. (source: https://idioms.thefreedictionary.com/circle+the+wagons,https://idioms.thefreedictionary.com/go+on+the+warpath)'\n  },\n  {\n    id: 'too-many-chiefs',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'too many chefs in the kitchen': 'a',\n      'too many cooks spoil the broth': 'a'\n    },\n    inconsiderate: {\n      'too many chiefs': 'a'\n    },\n    note: 'Avoid using phrases referring to colonial stereotypes regarding Native Americans. (source: https://idioms.thefreedictionary.com/too+many+chiefs+and+not+enough+Indians)'\n  },\n  {\n    id: 'natives-are-restless',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      dissatisfied: 'a',\n      frustrated: 'a'\n    },\n    inconsiderate: {\n      'natives are restless': 'a',\n      'natives are becoming restless': 'a',\n      'natives are getting restless': 'a',\n      'natives are growing restless': 'a'\n    },\n    note: 'Avoid using phrases referring to colonial stereotypes regarding indigenous peoples. (source: https://tvtropes.org/pmwiki/pmwiki.php/Main/TheNativesAreRestless)'\n  },\n  {\n    id: 'powwow',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      conference: 'a',\n      gathering: 'a',\n      meeting: 'a'\n    },\n    inconsiderate: {\n      'pow wow': 'a',\n      powwow: 'a'\n    },\n    note: 'Avoid casually using this term, which refers to traditional indigenous celebration ceremonies that were banned by genocidal laws in the United States and Canada — Native people died fighting for this right. (source: https://twitter.com/chadloder/status/1203507070772793345,http://nativeappropriations.com/2012/09/paul-frank-offends-every-native-person-on-the-planet-with-fashion-night-out-dream-catchin-pow-wow.html,https://www.britannica.com/topic/powwow,https://nowtoronto.com/news/native-references-and-terms-that-are-offensive-to-indigenous-people/)'\n  },\n  {\n    id: 'indian-give',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'go back on one’s offer': 'a'\n    },\n    inconsiderate: {\n      'indian give': 'a',\n      'indian giver': 'a'\n    },\n    note: 'Avoid using phrases referring to colonial stereotypes regarding Native Americans.'\n  },\n  {\n    id: 'pinoys',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      Filipinos: 'a',\n      'Filipino people': 'a'\n    },\n    inconsiderate: {\n      pinoys: 'a',\n      pinays: 'a'\n    }\n  },\n  {\n    id: 'towel-heads',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      Arabs: 'a',\n      'Middle Eastern People': 'a'\n    },\n    inconsiderate: {\n      'sand niggers': 'a',\n      'towel heads': 'a'\n    }\n  },\n  {\n    id: 'latino',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      Latinx: 'a'\n    },\n    inconsiderate: {\n      latino: 'a',\n      latina: 'a'\n    },\n    note: 'Whenever possible, try to be gender inclusive.'\n  },\n  {\n    id: 'japs',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'Japanese person': 'a',\n      'Japanese people': 'a'\n    },\n    inconsiderate: {\n      japs: 'a'\n    }\n  },\n  {\n    id: 'hymie',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'Jewish person': 'a'\n    },\n    inconsiderate: {\n      shlomo: 'a',\n      shyster: 'a',\n      hymie: 'a'\n    }\n  },\n  {\n    id: 'goy',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'a person who is not Jewish': 'a',\n      'not Jewish': 'a'\n    },\n    inconsiderate: {\n      goyim: 'a',\n      goyum: 'a',\n      goy: 'a'\n    }\n  },\n  {\n    id: 'spade',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'a Black person': 'a'\n    },\n    inconsiderate: {\n      spade: 'a'\n    }\n  },\n  {\n    id: 'gyp',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      Nomad: 'a',\n      Traveler: 'a',\n      Roma: 'a',\n      Romani: 'a'\n    },\n    inconsiderate: {\n      gyppo: 'a',\n      gypsy: 'a',\n      Gipsy: 'a',\n      gyp: 'a'\n    },\n    note: 'Gypsy is insensitive, use Roma or Romani. They’re not Egyptian as the name suggests. (source: en.wikipedia.org/wiki/Romani_people#cite_ref-80)'\n  },\n  {\n    id: 'blacklist',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      blocklist: 'a',\n      wronglist: 'a',\n      banlist: 'a',\n      'deny list': 'a'\n    },\n    inconsiderate: {\n      blacklist: 'a',\n      'black list': 'a'\n    },\n    note: 'Replace racially-charged language with more accurate and inclusive words'\n  },\n  {\n    id: 'blacklisted',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      blocklisted: 'a',\n      wronglisted: 'a',\n      banlisted: 'a',\n      'deny-listed': 'a'\n    },\n    inconsiderate: {\n      blacklisted: 'a'\n    },\n    note: 'Replace racially-charged language with more accurate and inclusive words'\n  },\n  {\n    id: 'blacklisting',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      blocklisting: 'a',\n      wronglisting: 'a',\n      banlisting: 'a',\n      'deny-listing': 'a'\n    },\n    inconsiderate: {\n      blacklisting: 'a'\n    },\n    note: 'Replace racially-charged language with more accurate and inclusive words'\n  },\n  {\n    id: 'whitelist',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      passlist: 'a',\n      alrightlist: 'a',\n      safelist: 'a',\n      'allow list': 'a'\n    },\n    inconsiderate: {\n      whitelist: 'a',\n      'white list': 'a'\n    },\n    note: 'Replace racially-charged language with more accurate and inclusive words'\n  },\n  {\n    id: 'whitelisted',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      passlisted: 'a',\n      alrightlisted: 'a',\n      safelisted: 'a',\n      'allow-listed': 'a'\n    },\n    inconsiderate: {\n      whitelisted: 'a'\n    },\n    note: 'Replace racially-charged language with more accurate and inclusive words'\n  },\n  {\n    id: 'whitelisting',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      passlisting: 'a',\n      alrightlisting: 'a',\n      safelisting: 'a',\n      'allow-listing': 'a'\n    },\n    inconsiderate: {\n      whitelisting: 'a'\n    },\n    note: 'Replace racially-charged language with more accurate and inclusive words'\n  },\n  {\n    id: 'whitespace',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      space: 'a',\n      blank: 'a'\n    },\n    inconsiderate: {\n      whitespace: 'a',\n      'white space': 'a'\n    },\n    note: 'Replace racially-charged language with more accurate and inclusive words'\n  },\n  {\n    id: 'whitespaces',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      space: 'a',\n      blank: 'a'\n    },\n    inconsiderate: {\n      whitespaces: 'a',\n      'white spaces': 'a'\n    },\n    note: 'Replace racially-charged language with more accurate and inclusive words'\n  },\n  {\n    id: 'savage',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      simple: 'a',\n      indigenous: 'a',\n      'hunter-gatherer': 'a'\n    },\n    inconsiderate: {\n      primitive: 'a',\n      savage: 'a',\n      'stone age': 'a'\n    },\n    note: 'Avoid using terms that imply a group has not changed over time and that they are inferior'\n  },\n  {\n    id: 'tribe',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      society: 'a',\n      community: 'a'\n    },\n    inconsiderate: {\n      tribe: 'a'\n    },\n    note: 'Avoid using terms that make some groups sound inferior'\n  },\n  {\n    id: 'sophisticated-culture',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'complex culture': 'a'\n    },\n    inconsiderate: {\n      'sophisticated culture': 'a'\n    },\n    note: 'Avoid using terms that make some groups sound inferior. Replace “sophisticated” with a neutral term such as “complex”'\n  },\n  {\n    id: 'sophisticated-technology',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'complex technology': 'a'\n    },\n    inconsiderate: {\n      'sophisticated technology': 'a'\n    },\n    note: 'Avoid using terms that make some groups sound inferior. Replace “sophisticated” with a neutral term such as “complex”'\n  },\n  {\n    id: 'bugreport',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'bug report': 'a',\n      snapshot: 'a'\n    },\n    inconsiderate: {\n      bugreport: 'a'\n    },\n    note: 'Avoid using `bugreport`, as the word `bugre` is a slur in Brazilian Portuguese'\n  },\n  {\n    id: 'grandfather-clause',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'legacy policy': 'a',\n      'legacy clause': 'a',\n      'deprecation policy': 'a'\n    },\n    inconsiderate: {\n      'grandfather clause': 'a',\n      'grandfather policy': 'a'\n    },\n    note: 'Avoid using phrases referring to racist United States “Jim Crow” laws. (source: https://en.wikipedia.org/wiki/Grandfather_clause#Origin)'\n  },\n  {\n    id: 'grandfathering',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      deprecate: 'a'\n    },\n    inconsiderate: {\n      grandfathering: 'a'\n    },\n    note: 'Avoid using phrases referring to racist United States “Jim Crow” laws. (source: https://en.wikipedia.org/wiki/Grandfather_clause#Origin)'\n  },\n  {\n    id: 'grandfathered',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      deprecated: 'a'\n    },\n    inconsiderate: {\n      grandfathered: 'a'\n    },\n    note: 'Avoid using phrases referring to racist United States “Jim Crow” laws. (source: https://en.wikipedia.org/wiki/Grandfather_clause#Origin)'\n  },\n  {\n    id: 'make-*-great-again',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      improve: 'a'\n    },\n    inconsiderate: {\n      'make * great again': 'a',\n      'make * * great again': 'a',\n      'make * * * great again': 'a',\n      'make * * * * great again': 'a',\n      'make * * * * * great again': 'a'\n    }\n  },\n  {\n    id: 'committed-suicide',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'died by suicide': 'a'\n    },\n    inconsiderate: {\n      'committed suicide': 'a',\n      'completed suicide': 'a'\n    },\n    note: 'Source: https://www.afsp.org/news-events/for-the-media/reporting-on-suicide, https://www.speakingofsuicide.com/2013/04/13/language/'\n  },\n  {\n    id: 'commit-suicide',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'die by suicide': 'a'\n    },\n    inconsiderate: {\n      'commit suicide': 'a',\n      'complete suicide': 'a',\n      'successful suicide': 'a'\n    },\n    note: 'Committing suicide is not successful/unsuccessful, that sends the wrong message (source: https://www.afsp.org/news-events/for-the-media/reporting-on-suicide, https://www.speakingofsuicide.com/2013/04/13/language/)'\n  },\n  {\n    id: 'suicide-pact',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'rise in suicides': 'a'\n    },\n    inconsiderate: {\n      'suicide epidemic': 'a',\n      'epidemic of suicides': 'a',\n      'suicide pact': 'a'\n    },\n    note: 'Using sensational words can cause copycat suicides or contagion (source: https://www.afsp.org/news-events/for-the-media/reporting-on-suicide)'\n  },\n  {\n    id: 'failed-suicide',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'suicide attempt': 'a',\n      'attempted suicide': 'a'\n    },\n    inconsiderate: {\n      'failed suicide': 'a',\n      'failed attempt': 'a',\n      'suicide failure': 'a'\n    },\n    note: 'Attempted suicide should not be depicted as a failure (source: https://www.speakingofsuicide.com/2013/04/13/language, https://www.afsp.org/news-events/for-the-media/reporting-on-suicide)'\n  },\n  {\n    id: 'suicide-note',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'a note from the deceased': 'a'\n    },\n    inconsiderate: {\n      'suicide note': 'a'\n    },\n    note: 'Source: https://www.afsp.org/news-events/for-the-media/reporting-on-suicide'\n  },\n  {\n    id: 'hang',\n    type: 'basic',\n    categories: ['a'],\n    considerate: {\n      'the app froze': 'a',\n      'the app stopped responding': 'a',\n      'the app stopped responding to events': 'a',\n      'the app became unresponsive': 'a'\n    },\n    inconsiderate: {\n      hang: 'a',\n      hanged: 'a'\n    },\n    note: 'When describing the behavior of computer software, using the word “hanged” needlessly invokes the topic of death by self-harm or lynching.  Consider using the word “froze” or the phrase “stopped responding to events” or “became unresponsive” instead.'\n  }\n]\n","/**\n * @typedef {import('nlcst').Root} Root\n * @typedef {import('nlcst').Sentence} Sentence\n * @typedef {import('nlcst').SentenceContent} SentenceContent\n * @typedef {import('nlcst').Content} Content\n * @typedef {import('nlcst').Parent} Parent\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('nlcst-search').Handler} SearchHandle\n * @typedef {import('./en.js').Pattern} Pattern\n *\n * @typedef Match\n * @property {string} type\n * @property {Parent} parent\n * @property {Content[]} nodes\n * @property {number} start\n * @property {number} end\n *\n * @typedef Options\n * @property {string[]} [ignore]\n * @property {boolean} [noBinary=false]\n */\n\nimport {normalize} from 'nlcst-normalize'\nimport {search} from 'nlcst-search'\nimport {toString} from 'nlcst-to-string'\nimport {quotation} from 'quotation'\nimport {visit, SKIP} from 'unist-util-visit'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\nconst word = convert('WordNode')\nconst whiteSpace = convert('WhiteSpaceNode')\nconst punctuation = convert('PunctuationNode')\n\n/**\n * @param {Pattern[]} patterns\n * @param {string} lang\n */\nexport function factory(patterns, lang) {\n  // Needed for other languages.\n  /* c8 ignore next */\n  const source = 'retext-equality' + (lang === 'en' ? '' : '-' + lang)\n\n  // Several pattern types can be handled.\n  // Handlers are stored in this map by type.\n  const handlers = {or, basic}\n\n  // Internal mapping.\n  /** @type {Record<string, Pattern>} */\n  const byId = {}\n  /** @type {Pattern[]} */\n  const byIndex = []\n  /** @type {string[]} */\n  const apostrophes = []\n  /** @type {string[]} */\n  const list = []\n\n  unpack()\n\n  /** @type {import('unified').Plugin<[Options?], Root>} */\n  return (options = {}) => {\n    const ignore = options.ignore || []\n    const noBinary = options.noBinary\n    let index = -1\n    /** @type {string[]} */\n    const noNormalize = []\n    /** @type {string[]} */\n    const normalize = []\n\n    while (++index < list.length) {\n      const item = list[index]\n\n      if (ignore.includes(item)) {\n        continue\n      }\n\n      if (apostrophes.includes(item)) {\n        noNormalize.push(item)\n      } else {\n        normalize.push(item)\n      }\n    }\n\n    return (tree, file) => {\n      visit(tree, 'ParagraphNode', (node) => {\n        /** @type {Record<string, Match[]>} */\n        const matches = {}\n\n        search(node, normalize, handle)\n        search(node, noNormalize, handle, true)\n\n        /** @type {string} */\n        let key\n\n        // Ignore or emit offending words based on their pattern.\n        for (key in matches) {\n          if (own.call(matches, key)) {\n            const pattern = byId[key]\n            handlers[\n              pattern.type === 'or' && noBinary ? 'basic' : pattern.type\n            ](matches[key], pattern, file)\n          }\n        }\n\n        return SKIP\n\n        // Handle a match.\n        /** @type {SearchHandle} */\n        function handle(match, position, parent, phrase) {\n          const index = list.indexOf(phrase)\n          const pattern = byIndex[index]\n          const id = pattern.id\n\n          if (phrase !== phrase.toLowerCase() && toString(match) !== phrase) {\n            return\n          }\n\n          if (!(id in matches)) {\n            matches[id] = []\n          }\n\n          matches[id].push({\n            type: pattern.inconsiderate[phrase],\n            parent,\n            nodes: match,\n            start: position,\n            end: position + match.length - 1\n          })\n        }\n      })\n    }\n  }\n\n  function unpack() {\n    let index = -1\n\n    while (++index < patterns.length) {\n      const pattern = patterns[index]\n      /** @type {string} */\n      let phrase\n\n      byId[pattern.id] = pattern\n\n      for (phrase in pattern.inconsiderate) {\n        if (own.call(pattern.inconsiderate, phrase)) {\n          list.push(phrase)\n          byIndex.push(pattern)\n          if (pattern.apostrophe) apostrophes.push(phrase)\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle matches for a `basic` pattern.\n   * **Basic** patterns need no extra logic, every match is emitted as a\n   * warning.\n   *\n   * @param {Match[]} matches\n   * @param {Pattern} pattern\n   * @param {VFile} file\n   * @returns {void}\n   */\n  function basic(matches, pattern, file) {\n    let index = -1\n\n    while (++index < matches.length) {\n      warn(file, matches[index], pattern)\n    }\n  }\n\n  /**\n   * Handle matches for an **or** pattern.\n   * **Or** patterns emit a warning unless every category is present.\n   *\n   * For example, when `him` and `her` occur adjacent to each other, they are not\n   * warned about.\n   * But when they occur alone, they are.\n   *\n   * @param {Match[]} matches\n   * @param {Pattern} pattern\n   * @param {VFile} file\n   * @returns {void}\n   */\n  function or(matches, pattern, file) {\n    let index = -1\n\n    while (++index < matches.length) {\n      const match = matches[index]\n      const siblings = match.parent.children\n      const next = matches[index + 1]\n\n      if (next && next.parent === match.parent && next.type !== match.type) {\n        let start = match.end\n\n        while (++start < next.start) {\n          const sibling = siblings[start]\n\n          if (\n            whiteSpace(sibling) ||\n            (word(sibling) && /(and|or)/.test(normalize(sibling))) ||\n            (punctuation(sibling) && normalize(sibling) === '/')\n          ) {\n            continue\n          }\n\n          break\n        }\n\n        // If we didn’t break…\n        if (start === next.start) {\n          index++\n          continue\n        }\n      }\n\n      warn(file, match, pattern)\n    }\n  }\n\n  /**\n   * @param {VFile} file\n   * @param {Match} match\n   * @param {Pattern} pattern\n   * @returns {void}\n   */\n  function warn(file, match, pattern) {\n    const actual = toString(match.nodes)\n    /** @type {string[]|undefined} */\n    let expected\n\n    if (pattern.considerate) {\n      expected = Object.keys(pattern.considerate)\n\n      // Capitalize suggestions.\n      if (actual.charAt(0).toUpperCase() === actual.charAt(0)) {\n        let index = -1\n\n        while (++index < expected.length) {\n          expected[index] =\n            expected[index].charAt(0).toUpperCase() + expected[index].slice(1)\n        }\n      }\n    }\n\n    Object.assign(\n      file.message(\n        quotation(actual, '`') +\n          ' may be insensitive' +\n          (pattern.condition ? ', ' + pattern.condition : '') +\n          ', ' +\n          (expected\n            ? 'use ' + quotation(expected, '`').join(', ') + ' instead'\n            : 'try not to use it'),\n        match.nodes[0],\n        [source, pattern.id].join(':')\n      ),\n      {actual, expected, note: pattern.note}\n    )\n  }\n}\n","export const a = [\n  'unist',\n\n  'U',\n  'UEFA',\n  'UK',\n  'UN',\n  'UNHCR',\n  'US',\n  'USB',\n  'eucalypt*',\n  'eucha*',\n  'euchr*',\n  'euclid*',\n  'eucrite',\n  'eucryphia',\n  'eugen*',\n  'eukar*',\n  'eulog*',\n  'eunice',\n  'eunuch',\n  'euph*',\n  'eura*',\n  'eure*',\n  'euro*',\n  'eury*',\n  'eutha*',\n  'ewe',\n  'ewer',\n  'habitual',\n  'hallucin*',\n  'herb*',\n  'heredit*',\n  'histor*',\n  'hilarious*',\n  'horrend*',\n  'horrif*',\n  'hotel*',\n  'ms',\n  'once',\n  'one',\n  'one/',\n  'one-*',\n  'oneanother',\n  'oneberry',\n  'onefold*',\n  'oneheart*',\n  'oneness*',\n  'oneself*',\n  'onetime*',\n  'oneway',\n  'onewhere*',\n  'oneyear',\n  'ubiq*',\n  'ugandan',\n  'ukase',\n  'ukrain*',\n  'ukulele',\n  'ululated',\n  'ululation',\n  'unanim*',\n  'unary',\n  'unesco',\n  'uniam*',\n  'uniart*',\n  'uniat*',\n  'uniaur*',\n  'uniax*',\n  'unibas*',\n  'unible',\n  'unicycl*',\n  'unidirect*',\n  'union*',\n  'unit*',\n  'univ*',\n  'unif*',\n  'uniq*',\n  'uran*',\n  'urate',\n  'uri*',\n  'urologist',\n  'uruguay',\n  'uruguayan',\n  'uruguayans',\n  'usab*',\n  'usage',\n  'use*',\n  'using',\n  'usu*',\n  'utah',\n  'uten*',\n  'uter*',\n  'util*',\n  'utop*',\n  'utrecht',\n  'uttoxeter',\n  'uvula',\n  'uvular',\n  'uyghur'\n]\n","export const an = [\n  'mdast',\n\n  'α',\n  'f',\n  'fbi',\n  'fm',\n  'fda',\n  'l',\n  'm',\n  'n',\n  'nfl',\n  'nba',\n  'nbc',\n  'nhl',\n  'ngo',\n  'npm',\n  'nvidia',\n  's',\n  'r',\n  'h',\n  'habitual',\n  'hallucin*',\n  'hauteur',\n  'heir*',\n  'herb*',\n  'heredit*',\n  'hilarious*',\n  'histor*',\n  'homage',\n  'honest*',\n  'honor*',\n  'honour*',\n  'horrend*',\n  'horrif*',\n  'hotel*',\n  'hour*',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'hiv',\n  'lbw',\n  'lcd',\n  'mpg',\n  'mph',\n  'MBA',\n  'MA',\n  'MRI',\n  'msc',\n  'MS',\n  'MTV',\n  'html',\n  'r&d',\n  'SGML',\n  'SOS',\n  'SMS',\n  'x',\n  'XML',\n  'xmas',\n  'x-ray',\n  'x-rays',\n  'xbox',\n  'SUV',\n  'STD',\n  'SPF',\n  'HB',\n  'RAF',\n  'IOU'\n]\n","/**\n * @typedef {import('nlcst').Root} Root\n * @typedef {import('nlcst').Sentence} Sentence\n * @typedef {import('nlcst').Word} Word\n *\n * @typedef {'a'|'an'|'a-or-an'} Type\n */\n\n// @ts-expect-error: untyped.\nimport format from 'format'\nimport {visit} from 'unist-util-visit'\nimport {toString} from 'nlcst-to-string'\nimport numberToWords from 'number-to-words'\nimport {a} from './a.js'\nimport {an} from './an.js'\n\nconst ruleId = 'retext-indefinite-article:retext-indefinite-article'\nconst url = 'https://github.com/retextjs/retext-indefinite-article#readme'\n\nconst needsA = factory(a)\nconst needsAn = factory(an)\n\n/**\n * Plugin to check if indefinite articles (`a` and `an`) are used correctly\n * (which isn’t as simple as checking vowels as it has to do with sounds).\n * Knows about how digits are pronounced as well.\n *\n * @type {import('unified').Plugin<[], Root>}\n */\nexport default function retextIndefiniteArticle() {\n  return (tree, file) => {\n    visit(tree, 'WordNode', (node, index, parent_) => {\n      const parent = /** @type {Sentence} */ (parent_)\n      const actual = toString(node)\n      const normal = actual.toLowerCase()\n\n      if ((normal !== 'a' && normal !== 'an') || !parent || index === null) {\n        return\n      }\n\n      const next = after(parent, index)\n\n      if (!next) {\n        return\n      }\n\n      const an = actual.length !== 1\n      const following = toString(next)\n\n      // Exit if `A` and this isn’t sentence-start: `Station A equals`\n      if (normal !== actual && !an && !firstWord(parent, index)) {\n        return\n      }\n\n      // Exit if `a` is used as a letter: `a and b`.\n      if (normal === actual && !an && /^(and|or|nor)$/i.test(following)) {\n        return\n      }\n\n      /** @type {string|undefined} */\n      let expected = classify(following)\n\n      if (!(expected === 'an' && !an) && !(expected === 'a' && an)) {\n        return\n      }\n\n      if (normal !== actual) {\n        expected = expected.charAt(0).toUpperCase() + expected.slice(1)\n      }\n\n      Object.assign(\n        file.message(\n          format('Use `%s` before `%s`, not `%s`', expected, following, actual),\n          node,\n          ruleId\n        ),\n        {actual, expected: [expected], url}\n      )\n    })\n  }\n}\n\n/**\n * Check if there’s no word before `index`.\n *\n * @param {Sentence} parent\n * @param {number} index\n * @returns {boolean}\n */\nfunction firstWord(parent, index) {\n  const siblings = parent.children\n\n  while (index--) {\n    if (siblings[index].type === 'WordNode') {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Get the next word.\n *\n * @param {Sentence} parent\n * @param {number} index\n * @returns {Word|undefined}\n */\nfunction after(parent, index) {\n  const siblings = parent.children\n  let sibling = siblings[++index]\n  /** @type {Word|undefined} */\n  let other\n\n  if (sibling && sibling.type === 'WhiteSpaceNode') {\n    sibling = siblings[++index]\n\n    if (\n      sibling &&\n      sibling.type === 'PunctuationNode' &&\n      /^[“”‘’'\"()[\\]]$/.test(toString(sibling))\n    ) {\n      sibling = siblings[++index]\n    }\n\n    if (sibling && sibling.type === 'WordNode') {\n      other = sibling\n    }\n  }\n\n  return other\n}\n\n/**\n * Classify a word.\n *\n * @param {string} value\n * @returns {Type|undefined}\n */\nfunction classify(value) {\n  const head = value\n    .replace(/^\\d+/, (value) => numberToWords.toWords(value) + ' ')\n    .split(/['’ -]/, 1)[0]\n  const normal = head.toLowerCase()\n  /** @type {Type|undefined} */\n  let type\n\n  if (needsA(head)) {\n    type = 'a'\n  }\n\n  if (needsAn(head)) {\n    type = type === 'a' ? 'a-or-an' : 'an'\n  }\n\n  if (!type && normal === head) {\n    type = /[aeiou]/.test(normal.charAt(0)) ? 'an' : 'a'\n  }\n\n  return type\n}\n\n/**\n * Create a test based on a list of phrases.\n *\n * @param {string[]} list\n */\nfunction factory(list) {\n  /** @type {RegExp[]} */\n  const expressions = []\n  /** @type {string[]} */\n  const sensitive = []\n  /** @type {string[]} */\n  const insensitive = []\n  let index = -1\n\n  while (++index < list.length) {\n    const value = list[index]\n\n    if (value.charAt(value.length - 1) === '*') {\n      // Regexes are insensitive now, once we need them this should check for\n      // `normal` as well.\n      expressions.push(new RegExp('^' + value.slice(0, -1), 'i'))\n    } else if (value === value.toLowerCase()) {\n      insensitive.push(value)\n    } else {\n      sensitive.push(value)\n    }\n  }\n\n  return test\n\n  /**\n   * @param {string} value\n   * @returns {boolean}\n   */\n  function test(value) {\n    const normal = value.toLowerCase()\n\n    if (sensitive.includes(value) || insensitive.includes(normal)) {\n      return true\n    }\n\n    let index = -1\n\n    while (++index < expressions.length) {\n      if (expressions[index].test(value)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","/**\n * @typedef {import('nlcst').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {string[]} [ignore]\n *   Phrases *not* to warn about.\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {search} from 'nlcst-search'\nimport {toString} from 'nlcst-to-string'\nimport {quotation} from 'quotation'\nimport {fillers} from 'fillers'\nimport {hedges} from 'hedges'\nimport {weasels} from 'weasels'\n\nconst list = [...new Set([...fillers, ...hedges, ...weasels])].sort()\n\nconst source = 'retext-intensify'\nconst url = 'https://github.com/retextjs/retext-intensify#readme'\n\n/**\n * Plugin to check for weak and mitigating wording.\n *\n * @type {import('unified').Plugin<[Options?], Root>}\n */\nexport default function retextIntensify(options = {}) {\n  const ignore = options.ignore || []\n  const phrases =\n    ignore.length > 0 ? list.filter((d) => !ignore.includes(d)) : list\n\n  return (tree, file) => {\n    search(tree, phrases, (match, _, _1, phrase) => {\n      const actual = toString(match)\n      let type = 'weasel'\n\n      if (!weasels.includes(phrase)) {\n        type = fillers.includes(phrase) ? 'filler' : 'hedge'\n      }\n\n      Object.assign(\n        file.message(\n          'Don’t use ' +\n            quotation(actual, '`') +\n            ', ' +\n            (type === 'weasel'\n              ? 'it’s vague or ambiguous'\n              : type === 'filler'\n              ? 'it doesn’t add meaning'\n              : 'it lessens impact'),\n          {start: pointStart(match[0]), end: pointEnd(match[match.length - 1])},\n          [source, type].join(':')\n        ),\n        {actual, expected: [], url}\n      )\n    })\n  }\n}\n","/**\n * @typedef {import('nlcst').Root} Root\n * @typedef {import('nlcst').Word} Word\n *\n * @typedef Options\n *   Configuration.\n * @property {string[]} [ignore]\n *   Phrases *not* to warn about.\n */\n\nimport {search} from 'nlcst-search'\nimport {toString} from 'nlcst-to-string'\nimport {findBefore} from 'unist-util-find-before'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {list} from './list.js'\n\nconst source = 'retext-passive'\nconst url = 'https://github.com/retextjs/retext-passive#readme'\n\nconst verbs = new Set(['am', 'are', 'were', 'being', 'is', 'been', 'was', 'be'])\n\n/**\n * Plugin to check for passive voice.\n *\n * @type {import('unified').Plugin<[Options?], Root>}\n */\nexport default function retextPassive(options = {}) {\n  const ignore = options.ignore || []\n  const phrases =\n    ignore.length > 0 ? list.filter((d) => !ignore.includes(d)) : list\n\n  return (tree, file) => {\n    search(tree, phrases, (match, index, parent, phrase) => {\n      const before = /** @type {Word} */ (findBefore(parent, index, 'WordNode'))\n\n      if (!before || !verbs.has(toString(before).toLowerCase())) {\n        return\n      }\n\n      Object.assign(\n        file.message(\n          'Don’t use the passive voice',\n          {start: pointStart(match[0]), end: pointEnd(match[match.length - 1])},\n          [source, phrase.replace(/\\s+/g, '-').toLowerCase()].join(':')\n        ),\n        {actual: toString(match), expected: [], url}\n      )\n    })\n  }\n}\n","export const list = [\n  'awoken',\n  'awoke',\n  'beaten',\n  'beat',\n  'begun',\n  'began',\n  'bent',\n  'bitten',\n  'bit',\n  'bled',\n  'blown',\n  'blew',\n  'broken',\n  'broke',\n  'brought',\n  'built',\n  'bought',\n  'caught',\n  'chosen',\n  'chose',\n  'dealt',\n  'done',\n  'did',\n  'drawn',\n  'drew',\n  'driven',\n  'drove',\n  'eaten',\n  'ate',\n  'fed',\n  'felt',\n  'fought',\n  'found',\n  'forbidden',\n  'forbade',\n  'forgotten',\n  'forgot',\n  'forgiven',\n  'forgave',\n  'frozen',\n  'froze',\n  'gotten',\n  'got',\n  'given',\n  'gave',\n  'ground',\n  'grinded',\n  'hung',\n  'heard',\n  'hidden',\n  'hid',\n  'hit',\n  'held',\n  'hurt',\n  'kept',\n  'known',\n  'knew',\n  'laid',\n  'led',\n  'let',\n  'lost',\n  'made',\n  'meant',\n  'met',\n  'paid',\n  'proven',\n  'proved',\n  'put',\n  'read',\n  'ridden',\n  'rode',\n  'rung',\n  'rang',\n  'run',\n  'ran',\n  'said',\n  'seen',\n  'saw',\n  'sold',\n  'sent',\n  'shaken',\n  'shook',\n  'shaved',\n  'shot',\n  'shown',\n  'shut',\n  'sung',\n  'sunk',\n  'slain',\n  'slew',\n  'slid',\n  'spoken',\n  'spoke',\n  'spent',\n  'spun',\n  'split',\n  'spread',\n  'stolen',\n  'stole',\n  'struck',\n  'swept',\n  'swung',\n  'taken',\n  'took',\n  'taught',\n  'torn',\n  'tore',\n  'told',\n  'thought',\n  'thrown',\n  'threw',\n  'undergone',\n  'underwent',\n  'understood',\n  'upset',\n  'woken',\n  'woke',\n  'worn',\n  'wore',\n  'won',\n  'withdrawn',\n  'withdrew',\n  'written',\n  'wrote',\n  'been',\n  'born',\n  'become',\n  'beset',\n  'bet',\n  'bid',\n  'bidden',\n  'bound',\n  'bred',\n  'broadcast',\n  'burnt',\n  'burst',\n  'cast',\n  'clung',\n  'come',\n  'cost',\n  'crept',\n  'cut',\n  'dug',\n  'dived',\n  'dreamt',\n  'drunk',\n  'fallen',\n  'fit',\n  'fled',\n  'flung',\n  'flown',\n  'foregone',\n  'forsaken',\n  'gone',\n  'grown',\n  'knelt',\n  'knit',\n  'leapt',\n  'learnt',\n  'left',\n  'lent',\n  'lain',\n  'lighted',\n  'misspelt',\n  'mistaken',\n  'mown',\n  'overcome',\n  'overdone',\n  'overtaken',\n  'overthrown',\n  'pled',\n  'quit',\n  'rid',\n  'risen',\n  'sawn',\n  'sought',\n  'set',\n  'sewn',\n  'shaven',\n  'shorn',\n  'shed',\n  'shone',\n  'shod',\n  'shrunk',\n  'sat',\n  'slept',\n  'slung',\n  'slit',\n  'smitten',\n  'sown',\n  'sped',\n  'spilt',\n  'spit',\n  'sprung',\n  'stood',\n  'stuck',\n  'stung',\n  'stunk',\n  'stridden',\n  'strung',\n  'striven',\n  'sworn',\n  'swollen',\n  'swum',\n  'thrived',\n  'thrust',\n  'trodden',\n  'upheld',\n  'woven',\n  'wed',\n  'wept',\n  'wound',\n  'withheld',\n  'withstood',\n  'wrung'\n]\n","/**\n * @typedef {import('./factory.js').Options} Options\n */\n\nimport {cuss} from 'cuss'\nimport pluralize from 'pluralize'\nimport {factory} from './factory.js'\n\nconst retextProfanitiesEn = factory({\n  lang: 'en',\n  cuss,\n  pluralize,\n  // Misclassified singulars and plurals.\n  ignorePluralize: [\n    'children',\n    'dy', // Singular of `dies`.\n    'pro', // Singular of `pros`.\n    'so', // Singular of `sos`.\n    'dice', // Plural of `die`.\n    'fus' // Plural of `fu`.\n  ],\n  // List of values not to normalize.\n  regular: ['hell']\n})\n\nexport default retextProfanitiesEn\n","/**\n * @typedef {import('nlcst').Root} Root\n *\n * @typedef Config\n * @property {string} lang\n * @property {Record<string, number>} cuss\n * @property {{singular: (word: string) => string, plural: (word: string) => string}} [pluralize]\n * @property {string[]} [ignorePluralize]\n * @property {string[]} [regular]\n *\n * @typedef Options\n *   Configuration.\n * @property {string[]} [ignore]\n *   Phrases *not* to warn about.\n * @property {0|1|2} [sureness=0]\n *   Minimum *sureness* to warn about, see `cuss`.\n */\n\nimport {search} from 'nlcst-search'\nimport {toString} from 'nlcst-to-string'\nimport {quotation} from 'quotation'\nimport {pointStart, pointEnd} from 'unist-util-position'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Config} config\n */\nexport function factory(config) {\n  const regular = config.regular || []\n  const words = unpack()\n  const source =\n    'retext-profanities' + (config.lang === 'en' ? '' : '-' + config.lang)\n\n  /**\n   * Plugin to check for profane and vulgar wording.\n   * Uses `cuss` for sureness.\n   *\n   * @type {import('unified').Plugin<[Options?], Root>}\n   */\n  return (options = {}) => {\n    const ignore = options.ignore || []\n    const sureness = options.sureness || 0\n    const phrases = Object.keys(words).filter((d) => !ignore.includes(d))\n    const normals =\n      regular.length > 0 ? phrases.filter((d) => !regular.includes(d)) : phrases\n    const literals = regular.filter((d) => phrases.includes(d))\n\n    return (tree, file) => {\n      search(tree, normals, handle)\n      search(tree, literals, handle, true)\n\n      /** @type {import('nlcst-search').Handler} */\n      function handle(match, _, _1, phrase) {\n        const profanitySeverity = words[phrase]\n        const actual = toString(match)\n\n        if (profanitySeverity < sureness) {\n          return\n        }\n\n        Object.assign(\n          file.message(\n            [\n              profanitySeverity === 0\n                ? 'Be careful with'\n                : profanitySeverity === 1\n                ? 'Reconsider using'\n                : 'Don’t use',\n              quotation(actual, '`') + ',',\n              profanitySeverity === 0\n                ? 'it’s profane in some cases'\n                : profanitySeverity === 1\n                ? 'it may be profane'\n                : 'it’s profane'\n            ].join(' '),\n            {\n              start: pointStart(match[0]),\n              end: pointEnd(match[match.length - 1])\n            },\n            [source, phrase.replace(/\\W+/g, '-')].join(':')\n          ),\n          {profanitySeverity, actual, expected: []}\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {Record<string, number>}\n   */\n  function unpack() {\n    /** @type {Record<string, number>} */\n    const result = {}\n    /** @type {string} */\n    let key\n\n    for (key in config.cuss) {\n      if (own.call(config.cuss, key)) {\n        add(key, config.cuss[key])\n\n        if (config.pluralize) {\n          add(config.pluralize.singular(key), config.cuss[key])\n          add(config.pluralize.plural(key), config.cuss[key])\n        }\n      }\n    }\n\n    /**\n     * @param {string} key\n     * @param {number} value\n     */\n    function add(key, value) {\n      if (!config.ignorePluralize || !config.ignorePluralize.includes(key)) {\n        result[key] = value\n      }\n    }\n\n    return result\n  }\n}\n","/**\n * @typedef {import('./factory.js').Options} Options\n */\n\nimport retextProfanities from './en.js'\n\nexport default retextProfanities\n","/**\n * @typedef {import('nlcst').Root} Root\n *\n * @typedef Options\n * @property {number} [age=16]\n *   Target age group.\n *   Note that the different algorithms provide varying results, so your milage\n *   may vary with people actually that age.\n * @property {number} [threshold=4/7]\n *   Number of algorithms that need to agree.\n *   By default, 4 out of the 7 algorithms need to agree that a sentence is hard\n *   to read for the target age, in which case it’s warned about.\n * @property {number} [minWords=5]\n *   Minimum number of words a sentence should have when warning.\n *   Most algorithms are designed to take a large sample of sentences to detect\n *   the body’s reading level.\n *   This plugin works on a per-sentence basis and that makes the results quite\n *   skewered when a short sentence has a few long words or some unknown ones.\n */\n\nimport {automatedReadability} from 'automated-readability'\nimport {colemanLiau} from 'coleman-liau'\nimport {daleChall} from 'dale-chall'\nimport {daleChallFormula, daleChallGradeLevel} from 'dale-chall-formula'\nimport {flesch} from 'flesch'\nimport {gunningFog} from 'gunning-fog'\nimport {toString} from 'nlcst-to-string'\nimport {smogFormula} from 'smog-formula'\nimport {spache} from 'spache'\nimport {spacheFormula} from 'spache-formula'\nimport {syllable} from 'syllable'\nimport {visit, SKIP} from 'unist-util-visit'\n\nconst origin = 'retext-readability:readability'\nconst url = 'https://github.com/retextjs/retext-readability#readme'\nconst defaultTargetAge = 16\nconst defaultWordynessThreshold = 5\nconst defaultThreshold = 4 / 7\n\nconst own = {}.hasOwnProperty\nconst floor = Math.floor\nconst round = Math.round\nconst ceil = Math.ceil\nconst sqrt = Math.sqrt\n\n/**\n * Plugin to detect possibly hard to read sentences.\n *\n * @type {import('unified').Plugin<[Options?], Root>}\n */\nexport default function retextReadability(options = {}) {\n  const targetAge = options.age || defaultTargetAge\n  const threshold = options.threshold || defaultThreshold\n  const minWords =\n    options.minWords === null || options.minWords === undefined\n      ? defaultWordynessThreshold\n      : options.minWords\n\n  return (tree, file) => {\n    visit(tree, 'SentenceNode', (sentence) => {\n      /** @type {Record<string, boolean>} */\n      const familiarWords = {}\n      /** @type {Record<string, boolean>} */\n      const easyWord = {}\n      let complexPolysillabicWord = 0\n      let familiarWordCount = 0\n      let polysillabicWord = 0\n      let totalSyllables = 0\n      let easyWordCount = 0\n      let wordCount = 0\n      let letters = 0\n\n      visit(sentence, 'WordNode', (node) => {\n        const value = toString(node)\n        const caseless = value.toLowerCase()\n        const syllables = syllable(value)\n\n        wordCount++\n        totalSyllables += syllables\n        letters += value.length\n\n        // Count complex words for gunning-fog based on whether they have three\n        // or more syllables and whether they aren’t proper nouns.  The last is\n        // checked a little simple, so this index might be over-eager.\n        if (syllables >= 3) {\n          polysillabicWord++\n\n          if (value.charCodeAt(0) === caseless.charCodeAt(0)) {\n            complexPolysillabicWord++\n          }\n        }\n\n        // Find unique unfamiliar words for spache.\n        if (spache.includes(caseless) && !own.call(familiarWords, caseless)) {\n          familiarWords[caseless] = true\n          familiarWordCount++\n        }\n\n        // Find unique difficult words for dale-chall.\n        if (daleChall.includes(caseless) && !own.call(easyWord, caseless)) {\n          easyWord[caseless] = true\n          easyWordCount++\n        }\n      })\n\n      if (wordCount >= minWords) {\n        const counts = {\n          complexPolysillabicWord,\n          polysillabicWord,\n          unfamiliarWord: wordCount - familiarWordCount,\n          difficultWord: wordCount - easyWordCount,\n          syllable: totalSyllables,\n          sentence: 1,\n          word: wordCount,\n          character: letters,\n          letter: letters\n        }\n\n        /** @type {number[]} */\n        const scores = [\n          gradeToAge(daleChallGradeLevel(daleChallFormula(counts))[1]),\n          gradeToAge(automatedReadability(counts)),\n          gradeToAge(colemanLiau(counts)),\n          fleschToAge(flesch(counts)),\n          smogToAge(smogFormula(counts)),\n          gradeToAge(gunningFog(counts)),\n          gradeToAge(spacheFormula(counts))\n        ]\n\n        let index = -1\n        let failCount = 0\n\n        while (++index < scores.length) {\n          if (scores[index] > targetAge) {\n            failCount++\n          }\n        }\n\n        const confidence = failCount / scores.length\n\n        if (confidence >= threshold) {\n          const label = failCount + '/' + scores.length\n\n          Object.assign(\n            file.message(\n              'Hard to read sentence (confidence: ' + label + ')',\n              sentence,\n              origin\n            ),\n            {\n              actual: toString(sentence),\n              expected: [],\n              url,\n              confidence,\n              confidenceLabel: label\n            }\n          )\n        }\n      }\n\n      return SKIP\n    })\n  }\n}\n\n/**\n * Calculate the typical starting age (on the higher-end) when someone joins\n * `grade` grade, in the US.\n * See: <https://en.wikipedia.org/wiki/Educational_stage#United_States>\n *\n * @param {number} grade\n * @returns {number}\n */\nfunction gradeToAge(grade) {\n  return round(grade + 5)\n}\n\n/**\n * Calculate the age relating to a Flesch result.\n *\n * @param {number} value\n * @returns {number}\n */\nfunction fleschToAge(value) {\n  return 20 - floor(value / 10)\n}\n\n/**\n * Calculate the age relating to a SMOG result.\n * See: <http://www.readabilityformulas.com/smog-readability-formula.php>\n *\n * @param {number} value\n * @returns {number}\n */\nfunction smogToAge(value) {\n  return ceil(sqrt(value) + 2.5)\n}\n","/**\n * @typedef {import('nlcst').Root} Root\n * @typedef {import('nlcst').Sentence} Sentence\n * @typedef {import('nlcst').Word} Word\n */\n\nimport {normalize} from 'nlcst-normalize'\nimport {search} from 'nlcst-search'\nimport {toString} from 'nlcst-to-string'\nimport pluralize from 'pluralize'\nimport {quotation} from 'quotation'\nimport {findAfter} from 'unist-util-find-after'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {schema} from './schema.js'\n\n// Trans.\npluralize.addSingularRule(/trans$/i, 'singular')\n\nconst source = 'retext-redundant-acronyms'\nconst url = 'https://github.com/retextjs/retext-redundant-acronyms#readme'\n\nconst list = Object.keys(schema)\n\n/**\n * Plugin to check for redundant acronyms (such as `ATM machine` to `ATM`).\n *\n * @type {import('unified').Plugin<[], Root>}\n */\nexport default function retextRedundantAcronyms() {\n  return (tree, file) => {\n    search(tree, list, (match, start, parent_, phrase) => {\n      const parent = /** @type {Sentence} */ (parent_)\n      const expansions = schema[phrase]\n      const siblings = parent.children\n      const tail = siblings[start + match.length - 1]\n      let index = -1\n\n      while (++index < expansions.length) {\n        const expansion = expansions[index]\n        let nextNode = /** @type {Word} */ (findAfter(parent, tail, 'WordNode'))\n\n        // We can probably break because the other expansions probably aren’t\n        // going to match, but it could be that a following expansion has no\n        // next word.\n        if (!nextNode) {\n          continue\n        }\n\n        let nextActual = pluralize.singular(normalize(nextNode))\n        const expansionIndex = expansion.indexOf(nextActual, 1)\n\n        if (expansionIndex === -1) {\n          continue\n        }\n\n        let nextExpected = nextActual\n        const rest = expansion.slice(expansionIndex + 1)\n\n        while (rest.length > 0) {\n          // @ts-expect-error: to do: impove `find-after` types.\n          nextNode = findAfter(parent, nextNode, 'WordNode')\n\n          if (!nextNode) {\n            break\n          }\n\n          // @ts-expect-error: TS doesn’t know there’s always one item in the\n          // list.\n          nextExpected = rest.shift()\n          nextActual = pluralize.singular(normalize(nextNode))\n\n          if (nextExpected !== nextActual) {\n            break\n          }\n        }\n\n        if (rest.length === 0 && nextExpected === nextActual) {\n          const nodes = siblings.slice(start, siblings.indexOf(nextNode) + 1)\n          const actual = toString(nodes)\n          let expected = toString(match)\n\n          if (pluralize.isPlural(toString(nextNode))) {\n            expected += 's'\n          }\n\n          Object.assign(\n            file.message(\n              'Expected ' +\n                quotation(expected, '`') +\n                ' instead of ' +\n                quotation(actual, '`'),\n              {\n                start: pointStart(nodes[0]),\n                end: pointEnd(nodes[nodes.length - 1])\n              },\n              [source, phrase.replace(/\\s+/g, '-').toLowerCase()].join(':')\n            ),\n            {actual, expected: [expected], url}\n          )\n\n          return\n        }\n      }\n    })\n  }\n}\n","/** @type {Record<string, string[][]>} */\nexport const schema = {\n  ABM: [['antiballistic', 'missile']],\n  ABS: [['antilock', 'braking', 'system']],\n  AC: [['alternating', 'current']],\n  ADD: [\n    ['attentiondeficit', 'disorder'],\n    ['attention', 'deficit', 'disorder']\n  ],\n  ADSL: [['asymmetric', 'digital', 'subscriber', 'line']],\n  ACT: [['american', 'college', 'test']],\n  AFC: [['american', 'footbal', 'conference']],\n  AIDS: [['acquired', 'immune', 'deficiency', 'syndrome']],\n  AM: [['amplitude', 'modulation']],\n  APL: [['a', 'programming', 'language']],\n  ARM: [['adjustable', 'rate', 'mortgage']],\n  ATC: [['air', 'traffic', 'control']],\n  ATM: [['automated', 'teller', 'machine']],\n  BASIC: [['beginner', 'allpurpose', 'symbolic', 'instruction', 'code']],\n  BBS: [['bulletin', 'board', 'system']],\n  CAD: [\n    ['computer', 'aided', 'design'],\n    ['computeraided', 'design']\n  ],\n  CD: [['compact', 'disc']],\n  CGA: [['color', 'graphic', 'adapter']],\n  CNN: [['cable', 'news', 'network']],\n  CSS: [\n    ['cascading', 'style', 'sheet'],\n    ['cascading', 'stylesheet']\n  ],\n  COBOL: [['common', 'businessoriented', 'language']],\n  CPI: [['consumer', 'price', 'index']],\n  CPU: [['central', 'processing', 'unit']],\n  DAT: [['digital', 'audio', 'tape']],\n  DC: [['direct', 'current']],\n  DMZ: [['demilitarized', 'zone']],\n  DOS: [['disk', 'operating', 'system']],\n  EBCDIC: [['extended', 'binary', 'coded', 'decimal', 'interchange', 'code']],\n  EGA: [['enhanced', 'graphic', 'adapter']],\n  FM: [['frequency', 'modulation']],\n  GIF: [['graphic', 'interchange', 'format']],\n  GOB: [['george', 'oscar', 'bluth']],\n  GOP: [['grand', 'old', 'party']],\n  GPS: [['global', 'positioning', 'system']],\n  GRE: [\n    ['graduate', 'record', 'examination'],\n    ['graduate', 'record', 'exam']\n  ],\n  GUI: [['graphical', 'user', 'interface']],\n  HIV: [\n    ['human', 'immuno', 'deficiency', 'virus'],\n    ['human', 'immunodeficiency', 'virus']\n  ],\n  HTML: [['hypertext', 'markup', 'language']],\n  IBM: [\n    ['international', 'business', 'machine', 'corporation'],\n    ['international', 'business', 'machine']\n  ],\n  IP: [\n    ['internet', 'protocol'],\n    ['instruction', 'pointer']\n  ],\n  IRA: [['individual', 'retirement', 'account']],\n  IRC: [['internet', 'relay', 'chat']],\n  ISBN: [['international', 'standard', 'book', 'number']],\n  ISDN: [['integrated', 'service', 'digital', 'network']],\n  KFC: [['kentucky', 'fried', 'chicken']],\n  LAN: [['local', 'area', 'network']],\n  LCD: [\n    ['liquid', 'crystal', 'display'],\n    ['liquidcrystal', 'display']\n  ],\n  LED: [\n    ['light', 'emitting', 'diode'],\n    ['lightemitting', 'diode']\n  ],\n  LEM: [['lunar', 'excursion', 'module']],\n  LPG: [['liquefied', 'petroleum', 'gas']],\n  MASH: [['mobile', 'army', 'surgical', 'hospital']],\n  MIDI: [['musical', 'instrument', 'digital', 'interface']],\n  NATO: [\n    ['north', 'atlantic', 'treaty', 'organization'],\n    ['north', 'atlantic', 'treaty', 'organisation']\n  ],\n  NFC: [['national', 'football', 'conference']],\n  NPR: [['national', 'public', 'radio']],\n  OPEC: [['organization', 'of', 'the', 'petroleum', 'exporting', 'country']],\n  PC: [\n    ['printed', 'circuit'],\n    ['personal', 'computer']\n  ],\n  PDF: [['portable', 'document', 'format']],\n  PIF: [['program', 'information', 'file']],\n  PIN: [['personal', 'identification', 'number']],\n  RAM: [\n    ['random', 'access', 'memory'],\n    ['randomaccess', 'memory']\n  ],\n  RAS: [['redundant', 'acronym', 'syndrome']],\n  RIP: [['rest', 'in', 'peace']],\n  RISC: [['reduced', 'instruction', 'set', 'computer']],\n  RF: [['radio', 'frequency']],\n  ROM: [\n    ['read', 'only', 'memory'],\n    ['readonly', 'memory']\n  ],\n  RPN: [['reverse', 'polish', 'notation']],\n  SALT: [['strategic', 'arm', 'limitation', 'talk']],\n  SAM: [\n    ['surface', 'to', 'air', 'missile'],\n    ['surfacetoair', 'missile']\n  ],\n  SAT: [\n    ['scholastic', 'aptitude', 'test'],\n    ['scholastic', 'assessment', 'test']\n  ],\n  START: [['strategic', 'arm', 'reduction', 'treaty']],\n  TWA: [['trans', 'world', 'airline']],\n  UHF: [['ultra', 'high', 'frequency']],\n  UL: [['underwriter', 'laboratory']],\n  UN: [['united', 'nation']],\n  UNIVAC: [['universal', 'automatic', 'computer']],\n  UPC: [['universal', 'product', 'code']],\n  UPI: [['united', 'press', 'international']],\n  USGS: [['united', 'state', 'geological', 'survey']],\n  VAT: [\n    ['value', 'added', 'tax'],\n    ['valueadded', 'tax']\n  ],\n  VHF: [['very', 'high', 'frequency']],\n  VIN: [['vehicle', 'identification', 'number']]\n}\n","/**\n * @typedef {import('nlcst').Root} Root\n * @typedef {import('nlcst').SentenceContent} SentenceContent\n * @typedef {{value: string, child: SentenceContent, index: number}} Info\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {visit, SKIP} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\n\nconst source = 'retext-repeated-words'\nconst url = 'https://github.com/retextjs/retext-repeated-words#readme'\n\n// List of words that can legally occur twice.\nconst list = new Set([\n  'had',\n  'that',\n  'can',\n  'blah',\n  'beep',\n  'yadda',\n  'sapiens',\n  'tse',\n  'mau'\n])\n\n/**\n * A retext plugin to check for for repeated words.\n *\n * * Doesn’t warn for some words which *do* occur twice (`the best exhibition\n *   they had had since`)\n * * Doesn’t warn for initialisms (`D. D. will pop up with…`)\n * * Doesn’t warn for capitalised words (`Duran Duran…`)\n *\n * @type {import('unified').Plugin<[], Root>}\n */\nexport default function retextRepeatedWords() {\n  return (tree, file) => {\n    visit(tree, 'SentenceNode', (parent) => {\n      let index = -1\n      /** @type {Info|undefined} */\n      let previous\n      /** @type {Info|undefined} */\n      let current\n\n      while (++index < parent.children.length) {\n        const child = parent.children[index]\n\n        if (child.type === 'WordNode') {\n          const value = toString(child)\n\n          current = {child, index, value}\n\n          if (\n            previous &&\n            previous.value.toLowerCase() === value.toLowerCase() &&\n            !ignore(value)\n          ) {\n            Object.assign(\n              file.message(\n                'Expected `' + value + '` once, not twice',\n                {start: pointStart(previous.child), end: pointEnd(child)},\n                [source, value.toLowerCase().replace(/\\W+/g, '-')].join(':')\n              ),\n              {\n                actual: toString(\n                  parent.children.slice(previous.index, index + 1)\n                ),\n                expected: [value],\n                url\n              }\n            )\n          }\n        } else if (child.type === 'WhiteSpaceNode') {\n          previous = current\n          current = undefined\n        } else {\n          previous = undefined\n          current = undefined\n        }\n      }\n\n      return SKIP\n    })\n  }\n}\n\n/**\n * Check if `value`, a word which occurs twice, should be ignored.\n *\n * @param {string} value\n * @returns {boolean}\n */\nfunction ignore(value) {\n  // …the most heartening exhibition they had had since…\n  if (list.has(value.toLowerCase())) {\n    return true\n  }\n\n  const head = value.charAt(0)\n\n  if (head === head.toUpperCase()) {\n    // D. D. will pop up with…\n    if (value.length === 2 && value.charAt(1) === '.') {\n      return true\n    }\n\n    const tail = value.slice(1)\n\n    // Duran Duran… Bella Bella…\n    if (tail === tail.toLowerCase()) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('nlcst').Root} Root\n *\n * @typedef {0|1|2|'newline'|'space'|'double-space'|null|undefined} Preferred\n *\n * @typedef Options\n *   Configuration.\n * @property {Preferred} [preferred=1]\n *   Spaces between sentences.\n *   Use `0` for line endings.\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {visit} from 'unist-util-visit'\nimport {convert} from 'unist-util-is'\n\nconst sentence = convert('SentenceNode')\nconst whiteSpace = convert('WhiteSpaceNode')\n\nconst source = 'retext-sentence-spacing'\nconst url = 'https://github.com/retextjs/retext-sentence-spacing#readme'\n\n/**\n * Plugin to check spacing between sentences.\n * Emit warnings when the spacing does not adhere to the preferred style.\n *\n * @type {import('unified').Plugin<[Options?], Root>}\n */\nexport default function retextSentenceSpacing(options = {}) {\n  let preferred = options.preferred\n\n  if (preferred === 'newline') {\n    preferred = 0\n  }\n\n  if (preferred === null || preferred === undefined || preferred === 'space') {\n    preferred = 1\n  }\n\n  if (preferred === 'double-space') {\n    preferred = 2\n  }\n\n  if (typeof preferred !== 'number') {\n    throw new TypeError(\n      \"Expected `options.preferred` to be `'space'`, `'newline'`, or a `number`\"\n    )\n  }\n\n  if (preferred < 0 || preferred > 2) {\n    throw new Error(\n      \"Expected `options.preferred` to be `'space'`, `'newline'`, or a `number` between (including) `0` and `2`\"\n    )\n  }\n\n  return (tree, file) => {\n    visit(tree, 'ParagraphNode', (node) => {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const child = node.children[index]\n\n        if (\n          !sentence(node.children[index - 1]) ||\n          !whiteSpace(child) ||\n          !sentence(node.children[index + 1])\n        ) {\n          continue\n        }\n\n        const actual = toString(child)\n\n        // We only check for whitespace that is *just* spaces: it’s OK to add\n        // line feeds if `space` is expected.\n        if (!/^ +$/.test(actual)) {\n          continue\n        }\n\n        const size = actual.length\n        /** @type {string} */\n        let reason\n\n        // Size is never preferred if we want a line feed.\n        if (preferred === 0) {\n          reason =\n            'Expected a newline between sentences, not `' +\n            size +\n            '` space' +\n            (size === 1 ? '' : 's')\n        } else if (size === preferred) {\n          continue\n        } else {\n          reason =\n            'Expected `' +\n            preferred +\n            '` space' +\n            (preferred === 1 ? '' : 's') +\n            ' between sentences, not `' +\n            size +\n            '`'\n        }\n\n        Object.assign(\n          file.message(\n            reason,\n            child,\n            [\n              source,\n              preferred === 0\n                ? 'newline'\n                : preferred === 1\n                ? 'space'\n                : 'double-space'\n            ].join(':')\n          ),\n          {\n            actual,\n            expected: [preferred === 0 ? '\\n' : preferred === 1 ? ' ' : '  '],\n            url\n          }\n        )\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('nlcst').Root} Root\n *\n * @typedef Options\n *   Configuration.\n * @property {string[]} [ignore]\n *   Phrases *not* to warn about (rule IDs).\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {quotation} from 'quotation'\nimport {search} from 'nlcst-search'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {patterns} from './patterns.js'\n\nconst source = 'retext-simplify'\nconst url = 'https://github.com/retextjs/retext-simplify#readme'\n\nconst keys = Object.keys(patterns)\n\n/**\n * Plugin to check phrases for simpler alternatives.\n *\n * @type {import('unified').Plugin<[Options?], Root>}\n */\nexport default function retextSimplify(options = {}) {\n  const ignore = options.ignore || []\n  const searches =\n    ignore.length > 0 ? keys.filter((d) => !ignore.includes(d)) : keys\n\n  return (tree, file) => {\n    search(tree, searches, (match, _, _1, phrase) => {\n      const pattern = patterns[phrase]\n      const actual = toString(match)\n      const expected = pattern.replace\n\n      Object.assign(\n        file.message(\n          pattern.omit && expected.length === 0\n            ? 'Remove ' + quotation(actual, '`')\n            : 'Replace ' +\n                quotation(actual, '`') +\n                ' with ' +\n                quotation(expected, '`').join(', ') +\n                (pattern.omit ? ', or remove it' : ''),\n          {start: pointStart(match[0]), end: pointEnd(match[match.length - 1])},\n          [source, phrase.replace(/\\s+/g, '-').toLowerCase()].join(':')\n        ),\n        {actual, expected, url}\n      )\n    })\n  }\n}\n","/**\n * @typedef Pattern\n * @property {string[]} replace\n * @property {boolean} [omit=false]\n */\n\n/**\n * @type {Object.<string, Pattern>}\n */\nexport const patterns = {\n  'a number of': {\n    replace: ['many', 'some']\n  },\n  abundance: {\n    replace: ['enough', 'plenty']\n  },\n  'accede to': {\n    replace: ['agree to', 'allow']\n  },\n  accelerate: {\n    replace: ['speed up']\n  },\n  accentuate: {\n    replace: ['stress']\n  },\n  accompany: {\n    replace: ['go with', 'with']\n  },\n  accomplish: {\n    replace: ['carry out', 'do']\n  },\n  accorded: {\n    replace: ['given']\n  },\n  accordingly: {\n    replace: ['so']\n  },\n  accrue: {\n    replace: ['add', 'gain']\n  },\n  accurate: {\n    replace: ['correct', 'exact', 'right']\n  },\n  acquiesce: {\n    replace: ['agree']\n  },\n  acquire: {\n    replace: ['get']\n  },\n  additional: {\n    replace: ['added', 'extra', 'more', 'other']\n  },\n  address: {\n    replace: ['discuss']\n  },\n  addressees: {\n    replace: ['you']\n  },\n  'addressees are requested': {\n    omit: true,\n    replace: ['please']\n  },\n  'adjacent to': {\n    replace: ['next to']\n  },\n  adjustment: {\n    replace: ['change']\n  },\n  admissible: {\n    replace: ['accepted', 'allowed']\n  },\n  advantageous: {\n    replace: ['helpful']\n  },\n  'adversely impact': {\n    replace: ['hurt']\n  },\n  'adversely impact on': {\n    replace: ['hurt', 'set back']\n  },\n  advise: {\n    replace: ['recommend', 'tell']\n  },\n  'afford an opportunity': {\n    replace: ['allow', 'let']\n  },\n  aforementioned: {\n    replace: ['remove']\n  },\n  aggregate: {\n    replace: ['add', 'total']\n  },\n  aircraft: {\n    replace: ['plane']\n  },\n  'all of': {\n    replace: ['all']\n  },\n  alleviate: {\n    replace: ['ease', 'reduce']\n  },\n  allocate: {\n    replace: ['divide']\n  },\n  'along the lines of': {\n    replace: ['as in', 'like']\n  },\n  'already existing': {\n    replace: ['existing']\n  },\n  alternatively: {\n    replace: ['or']\n  },\n  ameliorate: {\n    replace: ['help', 'improve']\n  },\n  'and/or': {\n    replace: ['… or … or both']\n  },\n  anticipate: {\n    replace: ['expect']\n  },\n  apparent: {\n    replace: ['clear', 'plain']\n  },\n  appreciable: {\n    replace: ['many']\n  },\n  appropriate: {\n    omit: true,\n    replace: ['proper', 'right']\n  },\n  approximate: {\n    replace: ['about']\n  },\n  'arrive onboard': {\n    replace: ['arrive']\n  },\n  'as a means of': {\n    replace: ['to']\n  },\n  'as of yet': {\n    replace: ['yet']\n  },\n  'as prescribed by': {\n    replace: ['in']\n  },\n  'as to': {\n    replace: ['about', 'on']\n  },\n  'as yet': {\n    replace: ['yet']\n  },\n  ascertain: {\n    replace: ['find out', 'learn']\n  },\n  assist: {\n    replace: ['aid', 'help']\n  },\n  assistance: {\n    replace: ['aid', 'help']\n  },\n  'at the present time': {\n    replace: ['at present']\n  },\n  'at this time': {\n    replace: ['now']\n  },\n  attain: {\n    replace: ['meet']\n  },\n  attempt: {\n    replace: ['try']\n  },\n  'attributable to': {\n    replace: ['because']\n  },\n  authorise: {\n    replace: ['allow', 'let']\n  },\n  authorize: {\n    replace: ['allow', 'let']\n  },\n  'be advised': {\n    omit: true,\n    replace: []\n  },\n  'because of the fact that': {\n    replace: ['because']\n  },\n  belated: {\n    replace: ['late']\n  },\n  benefit: {\n    replace: ['help']\n  },\n  'benefit from': {\n    replace: ['enjoy']\n  },\n  bestow: {\n    replace: ['award', 'give']\n  },\n  'by means of': {\n    replace: ['by', 'with']\n  },\n  'by virtue of': {\n    replace: ['by', 'under']\n  },\n  capability: {\n    replace: ['ability']\n  },\n  caveat: {\n    replace: ['warning']\n  },\n  cease: {\n    replace: ['stop']\n  },\n  'close proximity': {\n    replace: ['near']\n  },\n  'combat environment': {\n    replace: ['combat']\n  },\n  combined: {\n    replace: ['joint']\n  },\n  commence: {\n    replace: ['begin', 'start']\n  },\n  'comply with': {\n    replace: ['follow']\n  },\n  component: {\n    replace: ['part']\n  },\n  comprise: {\n    replace: ['form', 'include', 'make up']\n  },\n  concerning: {\n    replace: ['about', 'on']\n  },\n  consequently: {\n    replace: ['so']\n  },\n  consolidate: {\n    replace: ['combine', 'join', 'merge']\n  },\n  constitutes: {\n    replace: ['forms', 'is', 'makes up']\n  },\n  contains: {\n    replace: ['has']\n  },\n  convene: {\n    replace: ['meet']\n  },\n  currently: {\n    omit: true,\n    replace: ['now']\n  },\n  deem: {\n    replace: ['believe', 'consider', 'think']\n  },\n  delete: {\n    replace: ['cut', 'drop']\n  },\n  demonstrate: {\n    replace: ['prove', 'show']\n  },\n  depart: {\n    replace: ['go', 'leave']\n  },\n  designate: {\n    replace: ['appoint', 'choose', 'name']\n  },\n  desire: {\n    replace: ['want', 'wish']\n  },\n  determine: {\n    replace: ['decide', 'figure', 'find']\n  },\n  disclose: {\n    replace: ['show']\n  },\n  discontinue: {\n    replace: ['drop', 'stop']\n  },\n  disseminate: {\n    replace: ['give', 'issue', 'pass', 'send']\n  },\n  'due to the fact that': {\n    replace: ['because', 'due to', 'since']\n  },\n  'during the period': {\n    replace: ['during']\n  },\n  'e.g.': {\n    replace: ['for example', 'such as']\n  },\n  'each and every': {\n    replace: ['each']\n  },\n  economical: {\n    replace: ['cheap']\n  },\n  effect: {\n    replace: ['choose', 'pick', 'result']\n  },\n  'effect modifications': {\n    replace: ['make changes']\n  },\n  elect: {\n    replace: ['choose']\n  },\n  eliminate: {\n    replace: ['cut', 'drop', 'end', 'stop']\n  },\n  elucidate: {\n    replace: ['explain']\n  },\n  employ: {\n    replace: ['use']\n  },\n  encounter: {\n    replace: ['meet']\n  },\n  endeavor: {\n    replace: ['try']\n  },\n  ensure: {\n    replace: ['make sure']\n  },\n  enumerate: {\n    replace: ['count']\n  },\n  equipments: {\n    replace: ['equipment']\n  },\n  equitable: {\n    replace: ['fair']\n  },\n  equivalent: {\n    replace: ['equal']\n  },\n  establish: {\n    replace: ['set up', 'prove', 'show']\n  },\n  evaluate: {\n    replace: ['check', 'test']\n  },\n  evidenced: {\n    replace: ['showed']\n  },\n  evident: {\n    replace: ['clear']\n  },\n  exclusively: {\n    replace: ['only']\n  },\n  exhibit: {\n    replace: ['show']\n  },\n  expedite: {\n    replace: ['hasten', 'hurry', 'speed up']\n  },\n  expeditious: {\n    replace: ['fast', 'quick']\n  },\n  expend: {\n    replace: ['spend']\n  },\n  expertise: {\n    replace: ['ability']\n  },\n  expiration: {\n    replace: ['end']\n  },\n  facilitate: {\n    replace: ['ease', 'help']\n  },\n  'factual evidence': {\n    replace: ['evidence', 'facts']\n  },\n  'failed to': {\n    replace: ['didn’t']\n  },\n  feasible: {\n    replace: ['can be done', 'workable']\n  },\n  females: {\n    replace: ['women']\n  },\n  finalise: {\n    replace: ['complete', 'finish']\n  },\n  finalize: {\n    replace: ['complete', 'finish']\n  },\n  'first and foremost': {\n    replace: ['first']\n  },\n  'for a period of': {\n    replace: ['for']\n  },\n  'for the purpose of': {\n    replace: ['to']\n  },\n  forfeit: {\n    replace: ['give up', 'lose']\n  },\n  formulate: {\n    replace: ['plan']\n  },\n  forward: {\n    replace: ['send']\n  },\n  frequently: {\n    replace: ['often']\n  },\n  function: {\n    replace: ['act', 'role', 'work']\n  },\n  furnish: {\n    replace: ['give', 'send']\n  },\n  'has a requirement for': {\n    replace: ['needs']\n  },\n  'has no effect': {\n    replace: ['does nothing', 'does not apply']\n  },\n  herein: {\n    replace: ['here']\n  },\n  heretofore: {\n    replace: ['until now']\n  },\n  herewith: {\n    replace: ['here', 'below']\n  },\n  'honest truth': {\n    replace: ['truth']\n  },\n  however: {\n    replace: ['but', 'yet']\n  },\n  'i.e.': {\n    replace: ['as in']\n  },\n  identical: {\n    replace: ['same']\n  },\n  identify: {\n    replace: ['find', 'name', 'show']\n  },\n  'if and when': {\n    replace: ['if', 'when']\n  },\n  immediately: {\n    replace: ['at once']\n  },\n  impacted: {\n    replace: ['affected', 'changed', 'harmed']\n  },\n  implement: {\n    replace: ['carry out', 'install', 'put in place', 'tool', 'start']\n  },\n  'in a timely manner': {\n    replace: ['on time', 'promptly']\n  },\n  'in accordance with': {\n    replace: ['by', 'under', 'following', 'per']\n  },\n  'in addition': {\n    replace: ['also', 'besides', 'too']\n  },\n  'in all likelihood': {\n    replace: ['probably']\n  },\n  'in an effort to': {\n    replace: ['to']\n  },\n  'in between': {\n    replace: ['between']\n  },\n  'in excess of': {\n    replace: ['more than']\n  },\n  'in lieu of': {\n    replace: ['instead']\n  },\n  'in light of the fact that': {\n    replace: ['because']\n  },\n  'in many cases': {\n    replace: ['often']\n  },\n  'in order that': {\n    replace: ['for', 'so']\n  },\n  'in order to': {\n    replace: ['to']\n  },\n  'in order for': {\n    replace: ['for']\n  },\n  'in regard to': {\n    replace: ['about', 'concerning', 'on']\n  },\n  'in relation to': {\n    replace: ['about', 'with', 'to']\n  },\n  'in some instances': {\n    replace: ['sometimes']\n  },\n  'in terms of': {\n    omit: true,\n    replace: ['as', 'for', 'with']\n  },\n  'in the amount of': {\n    replace: ['for']\n  },\n  'in the event of': {\n    replace: ['if']\n  },\n  'in the near future': {\n    replace: ['soon', 'shortly']\n  },\n  'in the process of': {\n    omit: true,\n    replace: []\n  },\n  'in view of': {\n    replace: ['since']\n  },\n  'in view of the above': {\n    replace: ['so']\n  },\n  'inasmuch as': {\n    replace: ['since']\n  },\n  inception: {\n    replace: ['start']\n  },\n  'incumbent upon': {\n    replace: ['must']\n  },\n  indicate: {\n    replace: ['show', 'say', 'state', 'write down']\n  },\n  indication: {\n    replace: ['sign']\n  },\n  initial: {\n    replace: ['first']\n  },\n  initiate: {\n    replace: ['start']\n  },\n  'inter alia': {\n    omit: true,\n    replace: []\n  },\n  interface: {\n    replace: ['meet', 'work with']\n  },\n  'interpose no objection': {\n    replace: ['don’t object']\n  },\n  'is applicable to': {\n    replace: ['applies to']\n  },\n  'is authorised to': {\n    replace: ['may']\n  },\n  'is authorized to': {\n    replace: ['may']\n  },\n  'is in consonance with': {\n    replace: ['agrees with', 'follows']\n  },\n  'is responsible for': {\n    omit: true,\n    replace: ['handles']\n  },\n  'it appears': {\n    replace: ['seems']\n  },\n  'it is': {\n    omit: true,\n    replace: []\n  },\n  'it is essential': {\n    replace: ['must', 'need to']\n  },\n  'it is requested': {\n    replace: ['please']\n  },\n  liaison: {\n    replace: ['discussion']\n  },\n  'limited number': {\n    replace: ['limits']\n  },\n  literally: {\n    omit: true,\n    replace: []\n  },\n  magnitude: {\n    replace: ['size']\n  },\n  maintain: {\n    replace: ['support', 'keep']\n  },\n  maximum: {\n    replace: ['greatest', 'largest', 'most']\n  },\n  methodology: {\n    replace: ['method']\n  },\n  minimise: {\n    replace: ['cut', 'decrease']\n  },\n  minimize: {\n    replace: ['cut', 'decrease']\n  },\n  minimum: {\n    replace: ['least', 'small', 'smallest']\n  },\n  modify: {\n    replace: ['change']\n  },\n  monitor: {\n    replace: ['check', 'track', 'watch']\n  },\n  multiple: {\n    replace: ['many']\n  },\n  necessitate: {\n    replace: ['cause', 'need']\n  },\n  nevertheless: {\n    replace: ['besides', 'even so', 'still']\n  },\n  'not certain': {\n    replace: ['uncertain']\n  },\n  'not many': {\n    replace: ['few']\n  },\n  'not often': {\n    replace: ['rarely']\n  },\n  'not unless': {\n    replace: ['only if']\n  },\n  'not unlike': {\n    replace: ['alike', 'similar']\n  },\n  notify: {\n    replace: ['let know', 'tell']\n  },\n  'not later than': {\n    replace: ['by', 'before']\n  },\n  notwithstanding: {\n    replace: ['despite', 'in spite of', 'still']\n  },\n  'null and void': {\n    replace: ['null', 'void']\n  },\n  numerous: {\n    replace: ['many']\n  },\n  objective: {\n    replace: ['aim', 'goal']\n  },\n  obligate: {\n    replace: ['bind', 'compel']\n  },\n  observe: {\n    replace: ['see']\n  },\n  obtain: {\n    replace: ['get']\n  },\n  'on the contrary': {\n    replace: ['but', 'so']\n  },\n  'on the other hand': {\n    omit: true,\n    replace: ['but', 'so']\n  },\n  'one particular': {\n    replace: ['one']\n  },\n  operate: {\n    replace: ['run', 'use', 'work']\n  },\n  optimum: {\n    replace: ['best', 'greatest', 'most']\n  },\n  option: {\n    replace: ['choice']\n  },\n  overall: {\n    omit: true,\n    replace: []\n  },\n  'owing to the fact that': {\n    replace: ['because', 'since']\n  },\n  parameters: {\n    replace: ['limits']\n  },\n  participate: {\n    replace: ['take part']\n  },\n  particulars: {\n    replace: ['details']\n  },\n  'pass away': {\n    replace: ['die']\n  },\n  perform: {\n    replace: ['do']\n  },\n  permit: {\n    replace: ['let']\n  },\n  'pertaining to': {\n    replace: ['about', 'of', 'on']\n  },\n  'point in time': {\n    replace: ['moment', 'now', 'point', 'time']\n  },\n  portion: {\n    replace: ['part']\n  },\n  possess: {\n    replace: ['have', 'own']\n  },\n  practicable: {\n    replace: ['practical']\n  },\n  preclude: {\n    replace: ['prevent']\n  },\n  previous: {\n    replace: ['earlier']\n  },\n  previously: {\n    replace: ['before']\n  },\n  'prior to': {\n    replace: ['before']\n  },\n  prioritise: {\n    replace: ['focus on', 'rank']\n  },\n  prioritize: {\n    replace: ['focus on', 'rank']\n  },\n  proceed: {\n    replace: ['do', 'go ahead', 'try']\n  },\n  procure: {\n    omit: true,\n    replace: ['buy', 'get']\n  },\n  proficiency: {\n    replace: ['skill']\n  },\n  promulgate: {\n    replace: ['issue', 'publish']\n  },\n  provide: {\n    replace: ['give', 'offer', 'say']\n  },\n  'provided that': {\n    replace: ['if']\n  },\n  'provides guidance for': {\n    replace: ['guides']\n  },\n  purchase: {\n    replace: ['buy', 'sale']\n  },\n  'pursuant to': {\n    replace: ['by', 'following', 'per', 'under']\n  },\n  'put simply': {\n    omit: true,\n    replace: []\n  },\n  'readily apparent': {\n    replace: ['clear']\n  },\n  'refer back': {\n    replace: ['refer']\n  },\n  reflect: {\n    replace: ['say', 'show']\n  },\n  regarding: {\n    replace: ['about', 'of', 'on']\n  },\n  'relative to': {\n    replace: ['about', 'on']\n  },\n  relocate: {\n    replace: ['move']\n  },\n  remain: {\n    replace: ['stay']\n  },\n  remainder: {\n    replace: ['rest']\n  },\n  remuneration: {\n    replace: ['pay', 'payment']\n  },\n  render: {\n    replace: ['give', 'make']\n  },\n  represents: {\n    replace: ['is']\n  },\n  request: {\n    replace: ['ask']\n  },\n  require: {\n    replace: ['must', 'need']\n  },\n  requirement: {\n    replace: ['need', 'rule']\n  },\n  reside: {\n    replace: ['live']\n  },\n  residence: {\n    replace: ['house']\n  },\n  retain: {\n    replace: ['keep']\n  },\n  satisfy: {\n    replace: ['meet', 'please']\n  },\n  selection: {\n    replace: ['choice']\n  },\n  'set forth in': {\n    replace: ['in']\n  },\n  shall: {\n    replace: ['must', 'will']\n  },\n  'should you wish': {\n    replace: ['if you want']\n  },\n  'similar to': {\n    replace: ['like']\n  },\n  solicit: {\n    replace: ['ask for', 'request']\n  },\n  'span across': {\n    replace: ['cross', 'span']\n  },\n  'state-of-the-art': {\n    replace: ['latest']\n  },\n  strategise: {\n    replace: ['plan']\n  },\n  strategize: {\n    replace: ['plan']\n  },\n  submit: {\n    replace: ['give', 'send']\n  },\n  subsequent: {\n    replace: ['after', 'later', 'next', 'then']\n  },\n  subsequently: {\n    replace: ['after', 'later', 'then']\n  },\n  substantial: {\n    replace: ['large', 'much']\n  },\n  'successfully complete': {\n    replace: ['complete', 'pass']\n  },\n  sufficient: {\n    replace: ['enough']\n  },\n  'take action to': {\n    omit: true,\n    replace: []\n  },\n  terminate: {\n    replace: ['end', 'stop']\n  },\n  'the month of': {\n    omit: true,\n    replace: []\n  },\n  'the undersigned': {\n    replace: ['I']\n  },\n  'the use of': {\n    omit: true,\n    replace: []\n  },\n  'there are': {\n    omit: true,\n    replace: []\n  },\n  'there is': {\n    omit: true,\n    replace: []\n  },\n  therefore: {\n    replace: ['so', 'thus']\n  },\n  thereof: {\n    replace: ['its', 'their']\n  },\n  therein: {\n    replace: ['there']\n  },\n  'this day and age': {\n    replace: ['today']\n  },\n  'time period': {\n    replace: ['period', 'time']\n  },\n  timely: {\n    replace: ['prompt']\n  },\n  'took advantage of': {\n    replace: ['preyed on']\n  },\n  transmit: {\n    replace: ['send']\n  },\n  type: {\n    omit: true,\n    replace: []\n  },\n  transpire: {\n    replace: ['happen']\n  },\n  'under the provisions of': {\n    replace: ['under']\n  },\n  'until such time as': {\n    replace: ['until']\n  },\n  utilise: {\n    replace: ['use']\n  },\n  utilisation: {\n    replace: ['use']\n  },\n  utilization: {\n    replace: ['use']\n  },\n  utilize: {\n    replace: ['use']\n  },\n  validate: {\n    replace: ['confirm']\n  },\n  'various different': {\n    replace: ['different', 'various']\n  },\n  very: {\n    omit: true,\n    replace: []\n  },\n  viable: {\n    replace: ['practical', 'workable']\n  },\n  vice: {\n    replace: ['instead of', 'versus']\n  },\n  warrant: {\n    replace: ['call for', 'permit']\n  },\n  whereas: {\n    replace: ['because', 'since']\n  },\n  'whether or not': {\n    replace: ['whether']\n  },\n  'with reference to': {\n    replace: ['about']\n  },\n  'with respect to': {\n    replace: ['about', 'on']\n  },\n  'with the exception of': {\n    replace: ['except for']\n  },\n  witnessed: {\n    replace: ['saw', 'seen']\n  },\n  'your office': {\n    replace: ['you']\n  }\n}\n","/**\n * @typedef {Object} SmogFormulaCounts\n * @property {number} sentence\n * @property {number} [polysillabicWord]\n */\n\nvar sentenceSize = 30\nvar weight = 1.043\nvar base = 3.1291\n\n/**\n * Get the grade level of a given value according to the SMOG formula. More information is available at WikiPedia: <https://en.wikipedia.org/wiki/SMOG>.\n *\n * @param {SmogFormulaCounts} counts\n * @returns {number}\n */\nexport function smogFormula(counts) {\n  if (!counts || !counts.sentence) {\n    return Number.NaN\n  }\n\n  return (\n    base +\n    weight *\n      Math.sqrt(\n        (counts.polysillabicWord || 0) * (sentenceSize / counts.sentence)\n      )\n  )\n}\n","/**\n * @typedef {Object} SpaceFormulaCounts\n * @property {number} sentence\n * @property {number} word\n * @property {number} [unfamiliarWord]\n */\n\nvar sentenceWeight = 0.121\nvar wordWeight = 0.082\nvar percentage = 100\nvar base = 0.659\n\n/**\n * Get the grade level of a given value according to the Spache Readability Formula. More information is available at WikiPedia: <https://en.wikipedia.org/wiki/Spache_Readability_Formula>\n *\n * @param {SpaceFormulaCounts} counts\n * @return {number}\n */\nexport function spacheFormula(counts) {\n  if (!counts || !counts.sentence || !counts.word) {\n    return Number.NaN\n  }\n\n  return (\n    base +\n    (sentenceWeight * counts.word) / counts.sentence +\n    ((wordWeight * (counts.unfamiliarWord || 0)) / counts.word) * percentage\n  )\n}\n","export var spache = [\n  'a',\n  'able',\n  'about',\n  'above',\n  'across',\n  'act',\n  'add',\n  'afraid',\n  'after',\n  'afternoon',\n  'again',\n  'against',\n  'ago',\n  'air',\n  'airplane',\n  'alarm',\n  'all',\n  'almost',\n  'alone',\n  'along',\n  'already',\n  'also',\n  'always',\n  'am',\n  'among',\n  'an',\n  'and',\n  'angry',\n  'animal',\n  'another',\n  'answer',\n  'any',\n  'anyone',\n  'appear',\n  'apple',\n  'are',\n  'arm',\n  'around',\n  'arrow',\n  'as',\n  'ask',\n  'asleep',\n  'at',\n  'ate',\n  'attention',\n  'aunt',\n  'awake',\n  'away',\n  'b',\n  'baby',\n  'back',\n  'bad',\n  'bag',\n  'ball',\n  'balloon',\n  'bang',\n  'bank',\n  'bark',\n  'barn',\n  'basket',\n  'be',\n  'bean',\n  'bear',\n  'beat',\n  'beautiful',\n  'became',\n  'because',\n  'become',\n  'bed',\n  'bee',\n  'been',\n  'before',\n  'began',\n  'begin',\n  'behind',\n  'believe',\n  'bell',\n  'belong',\n  'bend',\n  'bent',\n  'beside',\n  'best',\n  'better',\n  'between',\n  'big',\n  'bird',\n  'birthday',\n  'bit',\n  'bite',\n  'black',\n  'blanket',\n  'blew',\n  'block',\n  'blow',\n  'blue',\n  'board',\n  'boat',\n  'book',\n  'boot',\n  'born',\n  'borrow',\n  'both',\n  'bother',\n  'bottle',\n  'bottom',\n  'bought',\n  'bow',\n  'box',\n  'boy',\n  'branch',\n  'brave',\n  'bread',\n  'break',\n  'breakfast',\n  'breath',\n  'brick',\n  'bridge',\n  'bright',\n  'bring',\n  'broke',\n  'broken',\n  'brother',\n  'brought',\n  'brown',\n  'brush',\n  'build',\n  'bump',\n  'burn',\n  'bus',\n  'busy',\n  'but',\n  'butter',\n  'button',\n  'buy',\n  'by',\n  'c',\n  'cabin',\n  'cage',\n  'cake',\n  'call',\n  'came',\n  'camp',\n  'can',\n  \"can't\",\n  'candle',\n  'candy',\n  'cap',\n  'captain',\n  'car',\n  'card',\n  'care',\n  'careful',\n  'carrot',\n  'carry',\n  'case',\n  'castle',\n  'cat',\n  'catch',\n  'cattle',\n  'caught',\n  'cause',\n  'cent',\n  'certain',\n  'chair',\n  'chance',\n  'change',\n  'chase',\n  'chicken',\n  'chief',\n  'child',\n  'children',\n  'church',\n  'circle',\n  'circus',\n  'city',\n  'clap',\n  'clean',\n  'clever',\n  'cliff',\n  'climb',\n  'clock',\n  'close',\n  'cloth',\n  'clothes',\n  'clown',\n  'coat',\n  'cold',\n  'color',\n  'come',\n  'comfortable',\n  'company',\n  'contest',\n  'continue',\n  'cook',\n  'cool',\n  'corner',\n  'could',\n  'count',\n  'country',\n  'course',\n  'cover',\n  'cow',\n  'crawl',\n  'cream',\n  'cry',\n  'cup',\n  'curtain',\n  'cut',\n  'd',\n  'dad',\n  'dance',\n  'danger',\n  'dangerous',\n  'dark',\n  'dash',\n  'daughter',\n  'day',\n  'dear',\n  'decide',\n  'deep',\n  'desk',\n  'did',\n  \"didn't\",\n  'die',\n  'different',\n  'dig',\n  'dinner',\n  'direction',\n  'disappear',\n  'disappoint',\n  'discover',\n  'distance',\n  'do',\n  'doctor',\n  'does',\n  'dog',\n  'dollar',\n  \"don't\",\n  'done',\n  'door',\n  'down',\n  'dragon',\n  'dream',\n  'dress',\n  'drink',\n  'drive',\n  'drop',\n  'drove',\n  'dry',\n  'duck',\n  'during',\n  'dust',\n  'e',\n  'each',\n  'eager',\n  'ear',\n  'early',\n  'earn',\n  'earth',\n  'easy',\n  'eat',\n  'edge',\n  'egg',\n  'eight',\n  'eighteen',\n  'either',\n  'elephant',\n  'else',\n  'empty',\n  'end',\n  'enemy',\n  'enough',\n  'enter',\n  'even',\n  'ever',\n  'every',\n  'everything',\n  'exact',\n  'except',\n  'excite',\n  'exclaim',\n  'explain',\n  'eye',\n  'face',\n  'fact',\n  'fair',\n  'fall',\n  'family',\n  'far',\n  'farm',\n  'farmer',\n  'farther',\n  'fast',\n  'fat',\n  'father',\n  'feather',\n  'feed',\n  'feel',\n  'feet',\n  'fell',\n  'fellow',\n  'felt',\n  'fence',\n  'few',\n  'field',\n  'fierce',\n  'fight',\n  'figure',\n  'fill',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'first',\n  'fish',\n  'five',\n  'flag',\n  'flash',\n  'flat',\n  'flew',\n  'floor',\n  'flower',\n  'fly',\n  'follow',\n  'food',\n  'for',\n  'forest',\n  'forget',\n  'forth',\n  'found',\n  'four',\n  'fourth',\n  'fox',\n  'fresh',\n  'friend',\n  'frighten',\n  'frog',\n  'from',\n  'front',\n  'fruit',\n  'full',\n  'fun',\n  'funny',\n  'fur',\n  'g',\n  'game',\n  'garden',\n  'gasp',\n  'gate',\n  'gave',\n  'get',\n  'giant',\n  'gift',\n  'girl',\n  'give',\n  'glad',\n  'glass',\n  'go',\n  'goat',\n  'gone',\n  'good',\n  'got',\n  'grandfather',\n  'grandmother',\n  'grass',\n  'gray',\n  'great',\n  'green',\n  'grew',\n  'grin',\n  'ground',\n  'group',\n  'grow',\n  'growl',\n  'guess',\n  'gun',\n  'h',\n  'had',\n  'hair',\n  'half',\n  'hall',\n  'hand',\n  'handle',\n  'hang',\n  'happen',\n  'happiness',\n  'happy',\n  'hard',\n  'harm',\n  'has',\n  'hat',\n  'hate',\n  'have',\n  'he',\n  \"he's\",\n  'head',\n  'hear',\n  'heard',\n  'heavy',\n  'held',\n  'hello',\n  'help',\n  'hen',\n  'her',\n  'here',\n  'herself',\n  'hid',\n  'hide',\n  'high',\n  'hill',\n  'him',\n  'himself',\n  'his',\n  'hit',\n  'hold',\n  'hole',\n  'holiday',\n  'home',\n  'honey',\n  'hop',\n  'horn',\n  'horse',\n  'hot',\n  'hour',\n  'house',\n  'how',\n  'howl',\n  'hum',\n  'hundred',\n  'hung',\n  'hungry',\n  'hunt',\n  'hurry',\n  'hurt',\n  'husband',\n  'i',\n  \"i'll\",\n  \"i'm\",\n  'ice',\n  'idea',\n  'if',\n  'imagine',\n  'important',\n  'in',\n  'inch',\n  'indeed',\n  'inside',\n  'instead',\n  'into',\n  'invite',\n  'is',\n  'it',\n  \"it's\",\n  'its',\n  'j',\n  'jacket',\n  'jar',\n  'jet',\n  'job',\n  'join',\n  'joke',\n  'joy',\n  'jump',\n  'just',\n  'k',\n  'keep',\n  'kept',\n  'key',\n  'kick',\n  'kill',\n  'kind',\n  'king',\n  'kitchen',\n  'kitten',\n  'knee',\n  'knew',\n  'knock',\n  'know',\n  'l',\n  'ladder',\n  'lady',\n  'laid',\n  'lake',\n  'land',\n  'large',\n  'last',\n  'late',\n  'laugh',\n  'lay',\n  'lazy',\n  'lead',\n  'leap',\n  'learn',\n  'least',\n  'leave',\n  'left',\n  'leg',\n  'less',\n  'let',\n  \"let's\",\n  'letter',\n  'lick',\n  'lift',\n  'light',\n  'like',\n  'line',\n  'lion',\n  'list',\n  'listen',\n  'little',\n  'live',\n  'load',\n  'long',\n  'look',\n  'lost',\n  'lot',\n  'loud',\n  'love',\n  'low',\n  'luck',\n  'lump',\n  'lunch',\n  'm',\n  'machine',\n  'made',\n  'magic',\n  'mail',\n  'make',\n  'man',\n  'many',\n  'march',\n  'mark',\n  'market',\n  'master',\n  'matter',\n  'may',\n  'maybe',\n  'me',\n  'mean',\n  'meant',\n  'meat',\n  'meet',\n  'melt',\n  'men',\n  'merry',\n  'met',\n  'middle',\n  'might',\n  'mile',\n  'milk',\n  'milkman',\n  'mind',\n  'mine',\n  'minute',\n  'miss',\n  'mistake',\n  'moment',\n  'money',\n  'monkey',\n  'month',\n  'more',\n  'morning',\n  'most',\n  'mother',\n  'mountain',\n  'mouse',\n  'mouth',\n  'move',\n  'much',\n  'mud',\n  'music',\n  'must',\n  'my',\n  'n',\n  'name',\n  'near',\n  'neck',\n  'need',\n  'needle',\n  'neighbor',\n  'neighborhood',\n  'nest',\n  'never',\n  'new',\n  'next',\n  'nibble',\n  'nice',\n  'night',\n  'nine',\n  'no',\n  'nod',\n  'noise',\n  'none',\n  'north',\n  'nose',\n  'not',\n  'note',\n  'nothing',\n  'notice',\n  'now',\n  'number',\n  'o',\n  'ocean',\n  'of',\n  'off',\n  'offer',\n  'often',\n  'oh',\n  'old',\n  'on',\n  'once',\n  'one',\n  'only',\n  'open',\n  'or',\n  'orange',\n  'order',\n  'other',\n  'our',\n  'out',\n  'outside',\n  'over',\n  'owl',\n  'own',\n  'p',\n  'pack',\n  'paid',\n  'pail',\n  'paint',\n  'pair',\n  'palace',\n  'pan',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'part',\n  'party',\n  'pass',\n  'past',\n  'pasture',\n  'path',\n  'paw',\n  'pay',\n  'peanut',\n  'peek',\n  'pen',\n  'penny',\n  'people',\n  'perfect',\n  'perhaps',\n  'person',\n  'pet',\n  'pick',\n  'picket',\n  'picnic',\n  'picture',\n  'pie',\n  'piece',\n  'pig',\n  'pile',\n  'pin',\n  'place',\n  'plan',\n  'plant',\n  'play',\n  'pleasant',\n  'please',\n  'plenty',\n  'plow',\n  'point',\n  'poke',\n  'pole',\n  'policeman',\n  'pond',\n  'poor',\n  'pop',\n  'postman',\n  'pot',\n  'potato',\n  'pound',\n  'pour',\n  'practice',\n  'prepare',\n  'present',\n  'pretend',\n  'pretty',\n  'princess',\n  'prize',\n  'probably',\n  'problem',\n  'promise',\n  'protect',\n  'proud',\n  'puff',\n  'pull',\n  'puppy',\n  'push',\n  'put',\n  'q',\n  'queen',\n  'queer',\n  'quick',\n  'quiet',\n  'quite',\n  'r',\n  'rabbit',\n  'raccoon',\n  'race',\n  'radio',\n  'rag',\n  'rain',\n  'raise',\n  'ran',\n  'ranch',\n  'rang',\n  'reach',\n  'read',\n  'ready',\n  'real',\n  'red',\n  'refuse',\n  'remember',\n  'reply',\n  'rest',\n  'return',\n  'reward',\n  'rich',\n  'ride',\n  'right',\n  'ring',\n  'river',\n  'road',\n  'roar',\n  'rock',\n  'rode',\n  'roll',\n  'roof',\n  'room',\n  'rope',\n  'round',\n  'row',\n  'rub',\n  'rule',\n  'run',\n  'rush',\n  's',\n  'sad',\n  'safe',\n  'said',\n  'sail',\n  'sale',\n  'salt',\n  'same',\n  'sand',\n  'sang',\n  'sat',\n  'save',\n  'saw',\n  'say',\n  'scare',\n  'school',\n  'scold',\n  'scratch',\n  'scream',\n  'sea',\n  'seat',\n  'second',\n  'secret',\n  'see',\n  'seed',\n  'seem',\n  'seen',\n  'sell',\n  'send',\n  'sent',\n  'seven',\n  'several',\n  'sew',\n  'shadow',\n  'shake',\n  'shall',\n  'shape',\n  'she',\n  'sheep',\n  'shell',\n  'shine',\n  'ship',\n  'shoe',\n  'shone',\n  'shook',\n  'shoot',\n  'shop',\n  'shore',\n  'short',\n  'shot',\n  'should',\n  'show',\n  'sick',\n  'side',\n  'sight',\n  'sign',\n  'signal',\n  'silent',\n  'silly',\n  'silver',\n  'since',\n  'sing',\n  'sister',\n  'sit',\n  'six',\n  'size',\n  'skip',\n  'sky',\n  'sled',\n  'sleep',\n  'slid',\n  'slide',\n  'slow',\n  'small',\n  'smart',\n  'smell',\n  'smile',\n  'smoke',\n  'snap',\n  'sniff',\n  'snow',\n  'so',\n  'soft',\n  'sold',\n  'some',\n  'something',\n  'sometimes',\n  'son',\n  'song',\n  'soon',\n  'sorry',\n  'sound',\n  'speak',\n  'special',\n  'spend',\n  'spill',\n  'splash',\n  'spoke',\n  'spot',\n  'spread',\n  'spring',\n  'squirrel',\n  'stand',\n  'star',\n  'start',\n  'station',\n  'stay',\n  'step',\n  'stick',\n  'still',\n  'stone',\n  'stood',\n  'stop',\n  'store',\n  'story',\n  'straight',\n  'strange',\n  'street',\n  'stretch',\n  'strike',\n  'strong',\n  'such',\n  'sudden',\n  'sugar',\n  'suit',\n  'summer',\n  'sun',\n  'supper',\n  'suppose',\n  'sure',\n  'surprise',\n  'swallow',\n  'sweet',\n  'swim',\n  'swing',\n  't',\n  'table',\n  'tail',\n  'take',\n  'talk',\n  'tall',\n  'tap',\n  'taste',\n  'teach',\n  'teacher',\n  'team',\n  'tear',\n  'teeth',\n  'telephone',\n  'tell',\n  'ten',\n  'tent',\n  'than',\n  'thank',\n  'that',\n  \"that's\",\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'thick',\n  'thin',\n  'thing',\n  'think',\n  'third',\n  'this',\n  'those',\n  'though',\n  'thought',\n  'three',\n  'threw',\n  'through',\n  'throw',\n  'tie',\n  'tiger',\n  'tight',\n  'time',\n  'tiny',\n  'tip',\n  'tire',\n  'to',\n  'today',\n  'toe',\n  'together',\n  'told',\n  'tomorrow',\n  'too',\n  'took',\n  'tooth',\n  'top',\n  'touch',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'traffic',\n  'train',\n  'trap',\n  'tree',\n  'trick',\n  'trip',\n  'trot',\n  'truck',\n  'true',\n  'trunk',\n  'try',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twin',\n  'two',\n  'u',\n  'ugly',\n  'uncle',\n  'under',\n  'unhappy',\n  'until',\n  'up',\n  'upon',\n  'upstairs',\n  'us',\n  'use',\n  'usual',\n  'v',\n  'valley',\n  'vegetable',\n  'very',\n  'village',\n  'visit',\n  'voice',\n  'w',\n  'wag',\n  'wagon',\n  'wait',\n  'wake',\n  'walk',\n  'want',\n  'war',\n  'warm',\n  'was',\n  'wash',\n  'waste',\n  'watch',\n  'water',\n  'wave',\n  'way',\n  'we',\n  'wear',\n  'weather',\n  'week',\n  'well',\n  'went',\n  'were',\n  'wet',\n  'what',\n  'wheel',\n  'when',\n  'where',\n  'which',\n  'while',\n  'whisper',\n  'whistle',\n  'white',\n  'who',\n  'whole',\n  'whose',\n  'why',\n  'wide',\n  'wife',\n  'will',\n  'win',\n  'wind',\n  'window',\n  'wing',\n  'wink',\n  'winter',\n  'wire',\n  'wise',\n  'wish',\n  'with',\n  'without',\n  'woke',\n  'wolf',\n  'woman',\n  'women',\n  \"won't\",\n  'wonder',\n  'wood',\n  'word',\n  'wore',\n  'work',\n  'world',\n  'worm',\n  'worry',\n  'worth',\n  'would',\n  'wrong',\n  'x',\n  'y',\n  'yard',\n  'year',\n  'yell',\n  'yellow',\n  'yes',\n  'yet',\n  'you',\n  'young',\n  'your',\n  'z',\n  'zoo'\n]\n","import pluralize from 'pluralize'\n// @ts-ignore remove when typed.\nimport normalize from 'normalize-strings'\nimport {problematic} from './problematic.js'\n\nvar own = {}.hasOwnProperty\n\n// Two expressions of occurrences which normally would be counted as two\n// syllables, but should be counted as one.\nvar EXPRESSION_MONOSYLLABIC_ONE = new RegExp(\n  [\n    'awe($|d|so)',\n    'cia(?:l|$)',\n    'tia',\n    'cius',\n    'cious',\n    '[^aeiou]giu',\n    '[aeiouy][^aeiouy]ion',\n    'iou',\n    'sia$',\n    'eous$',\n    '[oa]gue$',\n    '.[^aeiuoycgltdb]{2,}ed$',\n    '.ely$',\n    '^jua',\n    'uai',\n    'eau',\n    '^busi$',\n    '(?:[aeiouy](?:' +\n      [\n        '[bcfgklmnprsvwxyz]',\n        'ch',\n        'dg',\n        'g[hn]',\n        'lch',\n        'l[lv]',\n        'mm',\n        'nch',\n        'n[cgn]',\n        'r[bcnsv]',\n        'squ',\n        's[chkls]',\n        'th'\n      ].join('|') +\n      ')ed$)',\n    '(?:[aeiouy](?:' +\n      [\n        '[bdfklmnprstvy]',\n        'ch',\n        'g[hn]',\n        'lch',\n        'l[lv]',\n        'mm',\n        'nch',\n        'nn',\n        'r[nsv]',\n        'squ',\n        's[cklst]',\n        'th'\n      ].join('|') +\n      ')es$)'\n  ].join('|'),\n  'g'\n)\n\nvar EXPRESSION_MONOSYLLABIC_TWO = new RegExp(\n  '[aeiouy](?:' +\n    [\n      '[bcdfgklmnprstvyz]',\n      'ch',\n      'dg',\n      'g[hn]',\n      'l[lv]',\n      'mm',\n      'n[cgns]',\n      'r[cnsv]',\n      'squ',\n      's[cklst]',\n      'th'\n    ].join('|') +\n    ')e$',\n  'g'\n)\n\n// Four expression of occurrences which normally would be counted as one\n// syllable, but should be counted as two.\nvar EXPRESSION_DOUBLE_SYLLABIC_ONE = new RegExp(\n  '(?:' +\n    [\n      '([^aeiouy])\\\\1l',\n      '[^aeiouy]ie(?:r|s?t)',\n      '[aeiouym]bl',\n      'eo',\n      'ism',\n      'asm',\n      'thm',\n      'dnt',\n      'snt',\n      'uity',\n      'dea',\n      'gean',\n      'oa',\n      'ua',\n      'react?',\n      'orbed', // Cancel `'.[^aeiuoycgltdb]{2,}ed$',`\n      'shred', // Cancel `'.[^aeiuoycgltdb]{2,}ed$',`\n      'eings?',\n      '[aeiouy]sh?e[rs]'\n    ].join('|') +\n    ')$',\n  'g'\n)\n\nvar EXPRESSION_DOUBLE_SYLLABIC_TWO = new RegExp(\n  [\n    'creat(?!u)',\n    '[^gq]ua[^auieo]',\n    '[aeiou]{3}',\n    '^(?:ia|mc|coa[dglx].)',\n    '^re(app|es|im|us)',\n    '(th|d)eist'\n  ].join('|'),\n  'g'\n)\n\nvar EXPRESSION_DOUBLE_SYLLABIC_THREE = new RegExp(\n  [\n    '[^aeiou]y[ae]',\n    '[^l]lien',\n    'riet',\n    'dien',\n    'iu',\n    'io',\n    'ii',\n    'uen',\n    '[aeilotu]real',\n    'real[aeilotu]',\n    'iell',\n    'eo[^aeiou]',\n    '[aeiou]y[aeiou]'\n  ].join('|'),\n  'g'\n)\n\nvar EXPRESSION_DOUBLE_SYLLABIC_FOUR = /[^s]ia/\n\n// Expression to match single syllable pre- and suffixes.\nvar EXPRESSION_SINGLE = new RegExp(\n  [\n    '^(?:' +\n      [\n        'un',\n        'fore',\n        'ware',\n        'none?',\n        'out',\n        'post',\n        'sub',\n        'pre',\n        'pro',\n        'dis',\n        'side',\n        'some'\n      ].join('|') +\n      ')',\n    '(?:' +\n      [\n        'ly',\n        'less',\n        'some',\n        'ful',\n        'ers?',\n        'ness',\n        'cians?',\n        'ments?',\n        'ettes?',\n        'villes?',\n        'ships?',\n        'sides?',\n        'ports?',\n        'shires?',\n        '[gnst]ion(?:ed|s)?'\n      ].join('|') +\n      ')$'\n  ].join('|'),\n  'g'\n)\n\n// Expression to match double syllable pre- and suffixes.\nvar EXPRESSION_DOUBLE = new RegExp(\n  [\n    '^' +\n      '(?:' +\n      [\n        'above',\n        'anti',\n        'ante',\n        'counter',\n        'hyper',\n        'afore',\n        'agri',\n        'infra',\n        'intra',\n        'inter',\n        'over',\n        'semi',\n        'ultra',\n        'under',\n        'extra',\n        'dia',\n        'micro',\n        'mega',\n        'kilo',\n        'pico',\n        'nano',\n        'macro',\n        'somer'\n      ].join('|') +\n      ')',\n    '(?:fully|berry|woman|women|edly|union|((?:[bcdfghjklmnpqrstvwxz])|[aeiou])ye?ing)$'\n  ].join('|'),\n  'g'\n)\n\n// Expression to match triple syllable suffixes.\nvar EXPRESSION_TRIPLE = /(creations?|ology|ologist|onomy|onomist)$/g\n\n// Wrapper to support multiple word-parts (GH-11).\n/**\n * Syllable count\n *\n * @param {string} value\n * @returns {number}\n */\nexport function syllable(value) {\n  var values = normalize(String(value))\n    .toLowerCase()\n    // Remove apostrophes.\n    .replace(/['’]/g, '')\n    // Split on word boundaries.\n    .split(/\\b/g)\n  var index = -1\n  var sum = 0\n\n  while (++index < values.length) {\n    // Remove non-alphabetic characters from a given value.\n    sum += one(values[index].replace(/[^a-z]/g, ''))\n  }\n\n  return sum\n}\n\n/**\n * Get syllables in a given value.\n *\n * @param {string} value\n * @returns {number}\n */\nfunction one(value) {\n  var count = 0\n  /** @type {number} */\n  var index\n  /** @type {string} */\n  var singular\n  /** @type {Array.<string>} */\n  var parts\n  /** @type {ReturnType.<returnFactory>} */\n  var addOne\n  /** @type {ReturnType.<returnFactory>} */\n  var subtractOne\n\n  if (value.length === 0) {\n    return count\n  }\n\n  // Return early when possible.\n  if (value.length < 3) {\n    return 1\n  }\n\n  // If `value` is a hard to count, it might be in `problematic`.\n  if (own.call(problematic, value)) {\n    return problematic[value]\n  }\n\n  // Additionally, the singular word might be in `problematic`.\n  singular = pluralize(value, 1)\n\n  if (own.call(problematic, singular)) {\n    return problematic[singular]\n  }\n\n  addOne = returnFactory(1)\n  subtractOne = returnFactory(-1)\n\n  // Count some prefixes and suffixes, and remove their matched ranges.\n  value = value\n    .replace(EXPRESSION_TRIPLE, countFactory(3))\n    .replace(EXPRESSION_DOUBLE, countFactory(2))\n    .replace(EXPRESSION_SINGLE, countFactory(1))\n\n  // Count multiple consonants.\n  parts = value.split(/[^aeiouy]+/)\n  index = -1\n\n  while (++index < parts.length) {\n    if (parts[index] !== '') {\n      count++\n    }\n  }\n\n  // Subtract one for occurrences which should be counted as one (but are\n  // counted as two).\n  value\n    .replace(EXPRESSION_MONOSYLLABIC_ONE, subtractOne)\n    .replace(EXPRESSION_MONOSYLLABIC_TWO, subtractOne)\n\n  // Add one for occurrences which should be counted as two (but are counted as\n  // one).\n  value\n    .replace(EXPRESSION_DOUBLE_SYLLABIC_ONE, addOne)\n    .replace(EXPRESSION_DOUBLE_SYLLABIC_TWO, addOne)\n    .replace(EXPRESSION_DOUBLE_SYLLABIC_THREE, addOne)\n    .replace(EXPRESSION_DOUBLE_SYLLABIC_FOUR, addOne)\n\n  // Make sure at least on is returned.\n  return count || 1\n\n  /**\n   * Define scoped counters, to be used in `String#replace()` calls.\n   * The scoped counter removes the matched value from the input.\n   *\n   * @param {number} addition\n   */\n  function countFactory(addition) {\n    return counter\n    /**\n     * @returns {string}\n     */\n    function counter() {\n      count += addition\n      return ''\n    }\n  }\n\n  /**\n   * This scoped counter does not remove the matched value from the input.\n   *\n   * @param {number} addition\n   */\n  function returnFactory(addition) {\n    return returner\n    /**\n     * @param {string} $0\n     * @returns {string}\n     */\n    function returner($0) {\n      count += addition\n      return $0\n    }\n  }\n}\n","export var problematic = {\n  abalone: 4,\n  abare: 3,\n  abbruzzese: 4,\n  abed: 2,\n  aborigine: 5,\n  abruzzese: 4,\n  acreage: 3,\n  adame: 3,\n  adieu: 2,\n  adobe: 3,\n  anemone: 4,\n  anyone: 3,\n  apache: 3,\n  aphrodite: 4,\n  apostrophe: 4,\n  ariadne: 4,\n  cafe: 2,\n  calliope: 4,\n  catastrophe: 4,\n  chile: 2,\n  chloe: 2,\n  circe: 2,\n  coyote: 3,\n  daphne: 2,\n  epitome: 4,\n  eurydice: 4,\n  euterpe: 3,\n  every: 2,\n  everywhere: 3,\n  forever: 3,\n  gethsemane: 4,\n  guacamole: 4,\n  hermione: 4,\n  hyperbole: 4,\n  jesse: 2,\n  jukebox: 2,\n  karate: 3,\n  machete: 3,\n  maybe: 2,\n  naive: 2,\n  newlywed: 3,\n  penelope: 4,\n  people: 2,\n  persephone: 4,\n  phoebe: 2,\n  pulse: 1,\n  queue: 1,\n  recipe: 3,\n  riverbed: 3,\n  sesame: 3,\n  shoreline: 2,\n  simile: 3,\n  snuffleupagus: 5,\n  sometimes: 2,\n  syncope: 3,\n  tamale: 3,\n  waterbed: 3,\n  wednesday: 2,\n  yosemite: 4,\n  zoe: 2\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * Create a custom constructor which can be modified without affecting the\n * original class.\n *\n * @template {{prototype: object, new (...args: any[]): any}} Class\n * @param {Class} Super\n * @return {Class}\n */\nexport function unherit(Super) {\n  const Of = class extends Super {}\n\n  // Clone values.\n  const proto = Of.prototype\n  /** @type {string} */\n  let key\n\n  // We specifically want to get *all* fields, not just own fields.\n  // eslint-disable-next-line guard-for-in\n  for (key in proto) {\n    /** @type {unknown} */\n    const value = proto[key]\n\n    if (value && typeof value === 'object') {\n      // @ts-expect-error: shallow clone arrays or other values.\n      proto[key] = 'concat' in value ? value.concat() : Object.assign({}, value)\n    }\n  }\n\n  return Of\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile-message').VFileMessage} VFileMessage\n *\n * @typedef {OptionsWithoutReset|OptionsWithReset} Options\n * @typedef {OptionsBaseFields & OptionsWithoutResetFields} OptionsWithoutReset\n * @typedef {OptionsBaseFields & OptionsWithResetFields} OptionsWithReset\n *\n * @typedef OptionsWithoutResetFields\n * @property {false} [reset]\n *   Whether to treat all messages as turned off initially.\n * @property {string[]} [disable]\n *   List of `ruleId`s to turn off.\n *\n * @typedef OptionsWithResetFields\n * @property {true} reset\n *   Whether to treat all messages as turned off initially.\n * @property {string[]} [enable]\n *   List of `ruleId`s to initially turn on.\n *\n * @typedef OptionsBaseFields\n * @property {string} name\n *   Name of markers that can control the message sources.\n *\n *   For example, `{name: 'alpha'}` controls `alpha` markers:\n *\n *   ```html\n *   <!--alpha ignore-->\n *   ```\n * @property {MarkerParser} marker\n *   Parse a possible marker to a comment marker object (Marker).\n *   If the marker isn't a marker, should return `null`.\n * @property {Test} [test]\n *   Test for possible markers\n * @property {string[]} [known]\n *   List of allowed `ruleId`s. When given a warning is shown\n *   when someone tries to control an unknown rule.\n *\n *   For example, `{name: 'alpha', known: ['bravo']}` results in a warning if\n *   `charlie` is configured:\n *\n *   ```html\n *   <!--alpha ignore charlie-->\n *   ```\n * @property {string|string[]} [source]\n *   Sources that can be controlled with `name` markers.\n *   Defaults to `name`.\n *\n * @callback MarkerParser\n *   Parse a possible comment marker node to a Marker.\n * @param {Node} node\n *   Node to parse\n *\n * @typedef Marker\n *   A comment marker.\n * @property {string} name\n *   Name of marker.\n * @property {string} attributes\n *   Value after name.\n * @property {Record<string, string|number|boolean>} parameters\n *   Parsed attributes.\n * @property {Node} node\n *   Reference to given node.\n *\n * @typedef Mark\n * @property {Point|undefined} point\n * @property {boolean} state\n */\n\nimport {location} from 'vfile-location'\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @type {import('unified').Plugin<[Options]>}\n * @returns {(tree: Node, file: VFile) => void}\n */\nexport default function messageControl(options) {\n  if (!options || typeof options !== 'object' || !options.name) {\n    throw new Error(\n      'Expected `name` in `options`, got `' + (options || {}).name + '`'\n    )\n  }\n\n  if (!options.marker) {\n    throw new Error(\n      'Expected `marker` in `options`, got `' + options.marker + '`'\n    )\n  }\n\n  const enable = 'enable' in options && options.enable ? options.enable : []\n  const disable = 'disable' in options && options.disable ? options.disable : []\n  let reset = options.reset\n  const sources =\n    typeof options.source === 'string'\n      ? [options.source]\n      : options.source || [options.name]\n\n  return transformer\n\n  /**\n   * @param {Node} tree\n   * @param {VFile} file\n   */\n  function transformer(tree, file) {\n    const toOffset = location(file).toOffset\n    const initial = !reset\n    const gaps = detectGaps(tree, file)\n    /** @type {Record<string, Mark[]>} */\n    const scope = {}\n    /** @type {Mark[]} */\n    const globals = []\n\n    visit(tree, options.test, visitor)\n\n    file.messages = file.messages.filter((m) => filter(m))\n\n    /**\n     * @param {Node} node\n     * @param {number|null} position\n     * @param {Parent|null} parent\n     */\n    function visitor(node, position, parent) {\n      /** @type {Marker|null} */\n      const mark = options.marker(node)\n\n      if (!mark || mark.name !== options.name) {\n        return\n      }\n\n      const ruleIds = mark.attributes.split(/\\s/g)\n      const point = mark.node.position && mark.node.position.start\n      const next =\n        (parent && position !== null && parent.children[position + 1]) ||\n        undefined\n      const tail = (next && next.position && next.position.end) || undefined\n      let index = -1\n\n      /** @type {string} */\n      // @ts-expect-error: we’ll check for unknown values next.\n      const verb = ruleIds.shift()\n\n      if (verb !== 'enable' && verb !== 'disable' && verb !== 'ignore') {\n        file.fail(\n          'Unknown keyword `' +\n            verb +\n            '`: expected ' +\n            \"`'enable'`, `'disable'`, or `'ignore'`\",\n          mark.node\n        )\n      }\n\n      // Apply to all rules.\n      if (ruleIds.length > 0) {\n        while (++index < ruleIds.length) {\n          const ruleId = ruleIds[index]\n\n          if (isKnown(ruleId, verb, mark.node)) {\n            toggle(point, verb === 'enable', ruleId)\n\n            if (verb === 'ignore') {\n              toggle(tail, true, ruleId)\n            }\n          }\n        }\n      } else if (verb === 'ignore') {\n        toggle(point, false)\n        toggle(tail, true)\n      } else {\n        toggle(point, verb === 'enable')\n        reset = verb !== 'enable'\n      }\n    }\n\n    /**\n     * @param {VFileMessage} message\n     * @returns {boolean}\n     */\n    function filter(message) {\n      let gapIndex = gaps.length\n\n      // Keep messages from a different source.\n      if (!message.source || !sources.includes(message.source)) {\n        return true\n      }\n\n      // We only ignore messages if they‘re disabled, *not* when they’re not in\n      // the document.\n      if (!message.line) {\n        message.line = 1\n      }\n\n      if (!message.column) {\n        message.column = 1\n      }\n\n      // Check whether the warning is inside a gap.\n      // @ts-expect-error: we just normalized `null` to `number`s.\n      const offset = toOffset(message)\n\n      while (gapIndex--) {\n        if (gaps[gapIndex][0] <= offset && gaps[gapIndex][1] > offset) {\n          return false\n        }\n      }\n\n      // Check whether allowed by specific and global states.\n      return (\n        (!message.ruleId ||\n          check(message, scope[message.ruleId], message.ruleId)) &&\n        check(message, globals)\n      )\n    }\n\n    /**\n     * Helper to check (and possibly warn) if a `ruleId` is unknown.\n     *\n     * @param {string} ruleId\n     * @param {string} verb\n     * @param {Node} node\n     * @returns {boolean}\n     */\n    function isKnown(ruleId, verb, node) {\n      const result = options.known ? options.known.includes(ruleId) : true\n\n      if (!result) {\n        file.message(\n          'Unknown rule: cannot ' + verb + \" `'\" + ruleId + \"'`\",\n          node\n        )\n      }\n\n      return result\n    }\n\n    /**\n     * Get the latest state of a rule.\n     * When without `ruleId`, gets global state.\n     *\n     * @param {string|undefined} ruleId\n     * @returns {boolean}\n     */\n    function getState(ruleId) {\n      const ranges = ruleId ? scope[ruleId] : globals\n\n      if (ranges && ranges.length > 0) {\n        return ranges[ranges.length - 1].state\n      }\n\n      if (!ruleId) {\n        return !reset\n      }\n\n      return reset ? enable.includes(ruleId) : !disable.includes(ruleId)\n    }\n\n    /**\n     * Handle a rule.\n     *\n     * @param {Point|undefined} point\n     * @param {boolean} state\n     * @param {string|undefined} [ruleId]\n     * @returns {void}\n     */\n    function toggle(point, state, ruleId) {\n      let markers = ruleId ? scope[ruleId] : globals\n\n      if (!markers) {\n        markers = []\n        scope[String(ruleId)] = markers\n      }\n\n      const previousState = getState(ruleId)\n\n      if (state !== previousState) {\n        markers.push({state, point})\n      }\n\n      // Toggle all known rules.\n      if (!ruleId) {\n        for (ruleId in scope) {\n          if (own.call(scope, ruleId)) {\n            toggle(point, state, ruleId)\n          }\n        }\n      }\n    }\n\n    /**\n     * Check all `ranges` for `message`.\n     *\n     * @param {VFileMessage} message\n     * @param {Mark[]|undefined} ranges\n     * @param {string|undefined} [ruleId]\n     * @returns {boolean}\n     */\n    function check(message, ranges, ruleId) {\n      if (ranges && ranges.length > 0) {\n        // Check the state at the message’s position.\n        let index = ranges.length\n\n        while (index--) {\n          const range = ranges[index]\n\n          if (\n            message.line &&\n            message.column &&\n            range.point &&\n            range.point.line &&\n            range.point.column &&\n            (range.point.line < message.line ||\n              (range.point.line === message.line &&\n                range.point.column <= message.column))\n          ) {\n            return range.state === true\n          }\n        }\n      }\n\n      // The first marker ocurred after the first message, so we check the\n      // initial state.\n      if (!ruleId) {\n        return Boolean(initial || reset)\n      }\n\n      return reset ? enable.includes(ruleId) : !disable.includes(ruleId)\n    }\n  }\n}\n\n/**\n * Detect gaps in `tree`.\n *\n * @param {Node} tree\n * @param {VFile} file\n */\nfunction detectGaps(tree, file) {\n  /** @type {Node[]} */\n  // @ts-expect-error: fine.\n  const children = tree.children || []\n  const lastNode = children[children.length - 1]\n  /** @type {[number, number][]} */\n  const gaps = []\n  let offset = 0\n  /** @type {boolean|undefined} */\n  let gap\n\n  // Find all gaps.\n  visit(tree, one)\n\n  // Get the end of the document.\n  // This detects if the last node was the last node.\n  // If not, there’s an extra gap between the last node and the end of the\n  // document.\n  if (\n    lastNode &&\n    lastNode.position &&\n    lastNode.position.end &&\n    offset === lastNode.position.end.offset &&\n    file.toString().slice(offset).trim() !== ''\n  ) {\n    update()\n\n    update(\n      tree &&\n        tree.position &&\n        tree.position.end &&\n        tree.position.end.offset &&\n        tree.position.end.offset - 1\n    )\n  }\n\n  return gaps\n\n  /**\n   * @param {Node} node\n   */\n  function one(node) {\n    update(node.position && node.position.start && node.position.start.offset)\n\n    if (!('children' in node)) {\n      update(node.position && node.position.end && node.position.end.offset)\n    }\n  }\n\n  /**\n   * Detect a new position.\n   *\n   * @param {number|undefined} [latest]\n   * @returns {void}\n   */\n  function update(latest) {\n    if (latest === null || latest === undefined) {\n      gap = true\n    } else if (offset < latest) {\n      if (gap) {\n        gaps.push([offset, latest])\n        gap = undefined\n      }\n\n      offset = latest\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {number|null} index Position of `node` in `parent`\n * @param {Parent|null} parent Parent of `node`\n * @returns {VisitorResult}\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\nexport const visit =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        var parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[1] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","export default function isPlainObject(value) {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {import('unist-util-is').Type} Type\n * @typedef {import('unist-util-is').Props} Props\n * @typedef {import('unist-util-is').TestFunctionAnything} TestFunctionAnything\n */\n\nimport {convert} from 'unist-util-is'\n\nexport var findAfter =\n  /**\n   * @type {(\n   *  (<T extends Node>(node: Parent, index: Node|number, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>) => T|null) &\n   *  ((node: Parent, index: Node|number, test?: null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>) => Node|null)\n   * )}\n   */\n  (\n    /**\n     * @param {Parent} parent Parent node\n     * @param {Node|number} index Child of `parent`, or it’s index\n     * @param {null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>} [test] is-compatible test (such as a type)\n     * @returns {Node|null}\n     */\n    function (parent, index, test) {\n      var is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      while (++index < parent.children.length) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return null\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {import('unist-util-is').Type} Type\n * @typedef {import('unist-util-is').Props} Props\n * @typedef {import('unist-util-is').TestFunctionAnything} TestFunctionAnything\n */\n\nimport {convert} from 'unist-util-is'\n\nexport var findBefore =\n  /**\n   * @type {(\n   *  (<T extends Node>(node: Parent, index: Node|number, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>) => T|null) &\n   *  ((node: Parent, index: Node|number, test?: null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>) => Node|null)\n   * )}\n   */\n  (\n    /**\n     * @param {Parent} parent Parent node\n     * @param {Node|number} index Child of `parent`, or it’s index\n     * @param {null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>} [test] is-compatible test (such as a type)\n     * @returns {Node|null}\n     */\n    function (parent, index, test) {\n      var is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      // Performance.\n      if (index > parent.children.length) {\n        index = parent.children.length\n      }\n\n      while (index--) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return null\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\nexport var pointStart = point('start')\nexport var pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    /** @type {Point} */\n    // @ts-ignore looks like a point\n    var point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-ignore no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      var is = convert(test)\n      var step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        var value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string} */\n        var name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          var result = []\n          /** @type {ActionTuple} */\n          var subresult\n          /** @type {number} */\n          var offset\n          /** @type {Array.<Parent>} */\n          var grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          if (node.children && result[0] !== SKIP) {\n            // @ts-ignore looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-ignore looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-ignore looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {Pick<Point, 'line'|'column'>} PositionalPoint\n * @typedef {Required<Point>} FullPoint\n * @typedef {NonNullable<Point['offset']>} Offset\n */\n\n/**\n * Get transform functions for the given `document`.\n *\n * @param {string|Uint8Array|VFile} file\n */\nexport function location(file) {\n  var value = String(file)\n  /** @type {Array.<number>} */\n  var indices = []\n  var search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /**\n   * Get the line and column-based `point` for `offset` in the bound indices.\n   * Returns a point with `undefined` values when given invalid or out of bounds\n   * input.\n   *\n   * @param {Offset} offset\n   * @returns {FullPoint}\n   */\n  function toPoint(offset) {\n    var index = -1\n\n    if (offset > -1 && offset < indices[indices.length - 1]) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (indices[index - 1] || 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /**\n   * Get the `offset` for a line and column-based `point` in the bound indices.\n   * Returns `-1` when given invalid or out of bounds input.\n   *\n   * @param {PositionalPoint} point\n   * @returns {Offset}\n   */\n  function toOffset(point) {\n    var line = point && point.line\n    var column = point && point.column\n    /** @type {number} */\n    var offset\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      offset = (indices[line - 2] || 0) + column - 1 || 0\n    }\n\n    return offset > -1 && offset < indices[indices.length - 1] ? offset : -1\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile-message').VFileMessage} VFileMessage\n */\n\nvar severities = {true: 2, false: 1, null: 0, undefined: 0}\n\n/**\n * @template {VFile} F\n * @param {F} file\n * @returns {F}\n */\nexport function sort(file) {\n  file.messages.sort(comparator)\n  return file\n}\n\n/**\n * @param {VFileMessage} a\n * @param {VFileMessage} b\n * @returns {number}\n */\nfunction comparator(a, b) {\n  return (\n    check(a, b, 'line') ||\n    check(a, b, 'column') ||\n    severities[b.fatal] - severities[a.fatal] ||\n    compare(a, b, 'source') ||\n    compare(a, b, 'ruleId') ||\n    compare(a, b, 'reason') ||\n    0\n  )\n}\n\n/**\n * @param {VFileMessage} a\n * @param {VFileMessage} b\n * @param {string} property\n * @returns {number}\n */\nfunction check(a, b, property) {\n  return (a[property] || 0) - (b[property] || 0)\n}\n\n/**\n * @param {VFileMessage} a\n * @param {VFileMessage} b\n * @param {string} property\n * @returns {number}\n */\nfunction compare(a, b, property) {\n  return String(a[property] || '').localeCompare(b[property] || '')\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('..').VFileData} VFileData\n * @typedef {import('..').VFileValue} VFileValue\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {VFileValue|VFileOptions|VFile|URL} VFileCompatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {VFileValue} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {VFileData} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} VFileOptions\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} VFileReporterSettings\n * @typedef {<T = VFileReporterSettings>(files: Array<VFile>, options: T) => string} VFileReporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, treats it as `{value: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All other given fields are set on the newly created `VFile`.\n   *\n   * Path related properties are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {VFileCompatible} [value]\n   */\n  constructor(value) {\n    /** @type {VFileOptions} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information.\n     * It’s OK to store custom data directly on the file, moving it to `data`\n     * gives a little more privacy.\n     * @type {VFileData}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of file paths the file moved between.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path`.\n     * Defaults to `process.cwd()` (`/` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {VFileValue}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `RawSourceMap` type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Access full path (`~/index.min.js`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set full path (`~/index.min.js`).\n   * Cannot be nullified.\n   *\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Access parent path (`~`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set parent path (`~`).\n   * Cannot be set if there's no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Access basename (including extname) (`index.min.js`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (`index.min.js`).\n   * Cannot contain path separators.\n   * Cannot be nullified either (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Access extname (including dot) (`.js`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set extname (including dot) (`.js`).\n   * Cannot be set if there's no `path` yet and cannot contain path separators.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Access stem (w/o extname) (`index.min`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set stem (w/o extname) (`index.min`).\n   * Cannot be nullified, and cannot contain path separators.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8'] If `file.value` is a buffer, `encoding` is used to serialize buffers.\n   * @returns {string}\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Create a message and associates it w/ the file.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Info: create a message, associate it with the file, and mark the fatality\n   * as `null`.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Fail: create a message, associate it with the file, mark the fatality as\n   * `true`.\n   * Note: fatal errors mean a file is no longer processable.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {never}\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","export var weasels = [\n  'a lot',\n  'about',\n  'acts',\n  'again',\n  'all',\n  'almost',\n  'already',\n  'also',\n  'anyway',\n  'appeared',\n  'appears',\n  'are a number',\n  'arguably',\n  'back',\n  'be able to',\n  'began',\n  'believed',\n  'better',\n  'bit',\n  'clearly',\n  'close',\n  'combats',\n  'completely',\n  'considered',\n  'could',\n  'decided',\n  'down',\n  'effective',\n  'efficient',\n  'enough',\n  'even',\n  'ever',\n  'exceedingly',\n  'excellent',\n  'expert',\n  'experts',\n  'extremely',\n  'fairly',\n  'far',\n  'felt',\n  'few',\n  'gains',\n  'heard',\n  'helps',\n  'huge',\n  'improved',\n  'interestingly',\n  'is a number',\n  'is like',\n  'just',\n  'knew',\n  'largely',\n  'like',\n  'linked to',\n  'literally',\n  'looked',\n  'looks',\n  'lots',\n  'many',\n  'might',\n  'most',\n  'mostly',\n  'not rocket science',\n  'noticed',\n  'often',\n  'only',\n  'outside the box',\n  'over',\n  'own',\n  'pretty',\n  'probably',\n  'quite',\n  'rather',\n  'real',\n  'realised',\n  'realized',\n  'really',\n  'recognised',\n  'recognized',\n  'relatively',\n  'remarkably',\n  'reportedly',\n  'saw',\n  'seemed',\n  'seems',\n  'several',\n  'significantly',\n  'smelled',\n  'so',\n  'some',\n  'somehow',\n  'sort',\n  'started',\n  'still',\n  'substantially',\n  'supports',\n  'supposed',\n  'surprisingly',\n  'that',\n  'then',\n  'thought',\n  'tiny',\n  'touched',\n  'understood',\n  'up',\n  'useful',\n  'various',\n  'vast',\n  'very',\n  'virtually',\n  'wanted',\n  'watched',\n  'well',\n  'wished',\n  'wondered',\n  'works'\n]\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import domReady from '@wordpress/dom-ready';\nimport { registerPlugin } from '@wordpress/plugins';\n\n// The WP annotations package isn't loaded by default so force loading it.\nimport \"@wordpress/annotations\";\n\nimport { PluginPanel } from './components/panel/plugin';\n\n// import './filters';\nimport './subscribers';\n\ndomReady(() => {\n    /**\n     * Register Access Panel Plugin\n     */\n    registerPlugin('writers-blocks', {\n        render: PluginPanel,\n    });\n});\n"],"names":["classnames","useSelect","dispatch","select","ToolbarButton","useEffect","useState","removeAnnotations","addAnnotations","WB_SETTINGS","settings","DEFAULT_SETTINGS","window","EditorToolbarButton","props","setSettings","siteSettings","getEntityRecord","writers_blocks","editing_mode","saveEntityRecord","blockProblems","getProblems","__","PluginSidebar","PanelBody","PanelRow","ToggleControl","Spinner","Dropdown","Button","MenuGroup","MenuItem","DropdownMenu","Fragment","moreVertical","edit","PROBLEM_TYPES_TO_LABEL","BLOCK_TYPE_CONTENT_ATTRIBUTE","store","SHOWN_ANNOTATION_TYPES","PluginPanel","suggestions","setSuggestions","readingTime","score","polarity","getReadability","problems","currentProblems","adverb","filter","type","weasel","hedge","filler","profanity","equality","cliche","passive","readability","includes","simpler","margin","Math","round","Object","keys","map","length","label","help","checked","then","source","forEach","getProblemsByType","blockId","blockName","index","offset","__experimentalAddAnnotation","blockClientId","richTextIdentifier","range","start","end","__experimentalRemoveAnnotationsBySource","ALLOWED_BLOCKS","PROBLEM_TYPES","number","DEFAULT_STATE","isHighlighted","isBlurred","v4","uuid","debounce","check","btoa","isUpdatingProblems","queue","isAnnotationAvailable","getBlocks","getQueueLength","addBlockToQueue","block","clientId","getAnnotatableTextFromBlock","name","attributes","blockAttributes","isAllowed","attribute","preserveWhiteSpace","problem","annotationId","id","value","annotations","__experimentalGetAnnotations","annotation","__experimentalRemoveAnnotation","getAnnotatableText","blocks","allowedBlocks","flatMap","ignore","state","readabilityAnnotations","split","scheduleAnnotations","shift","addProblems","parse","strip","text","content","messages","match","actual","position","message","fatal","expected","replace","level","replaceAll","replacements","VFile","sort","unified","retextEnglish","retextEquality","retextProfanities","retextSimplify","retextReadability","retextIndefiniteArticle","retextSentenceSpacing","retextRepeatedWords","retextRedundantAcronyms","retextPassive","retextIntensify","retextDiacritics","retextContractions","remarkMessageControl","config","options","splitOptions","core","makeText","use","processor","file","tree","runSync","allow","deny","noBinary","sureness","Array","isArray","profanitySureness","Error","reset","Boolean","enable","disable","addProblem","removeProblem","ignoreProblem","updateReadability","stats","updateUserSettings","createReduxStore","register","reducer","selectors","actions","STORE_NAME","combineReducers","DEFAULT_USER_SETTINGS","showProblems","suggestionsToShow","reduce","accumulator","action","list","find","user","getProblem","problemId","getAnnotations","getAnnotation","getIgnoredAnnotations","wb_ignored","getEditedPostAttribute","getBlockProblems","getUserSettings","subscribe","domReady","readingScore","_content","scheduleReadingScoreUpdate","strippedContent","ignoredAnnotations","selectedBlock","getSelectedBlock","render","quickpostbutton","document","querySelector","editorToolbar","buttonWrapper","createElement","style","cssText","appendChild","getElementById","useDispatch","Popover","Flex","getPopoverPosition","element","getBoundingClientRect","Tooltip","isShown","target","setIgnoredAnnotations","selectedAnnotation","editPost","title","process","env","NODE_ENV","console","log","meta","editorWrapper","isTyping","popoverWrapper","prepend","automatedReadability","count","characterCounter","tokenize","paragraphs","line","sentences","join","words","sentence","push","wordCount","characterCount","alphaNumericCharacters","letters","word","character","polarityScore","minutes","wordsPerMinute","characters","stripAstrals","stripHTMLComments","stripHTMLEntities","stripSpaces","stripTags","flow","stripHTMComments","Tokenizer","tokenizer","setEntry","getSentences","getTokens","error","registerPlugin"],"sourceRoot":""}